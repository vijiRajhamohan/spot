2020-07-09T08:19:10.087Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-09T08:19:10.089Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-09T08:19:10.090Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2020-07-09T08:19:10.095Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false'': { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLANS\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = \'REGISTRATION\' and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false' }
2020-07-09T08:19:10.096Z |-[31merror[39m [router:plan-list]: Plan List could not be fetched: { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLANS\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = \'REGISTRATION\' and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false' }
2020-07-09T08:19:10.096Z |-[34mdebug[39m [application-exception]: 
2020-07-09T08:19:10.096Z |-[31merror[39m [router:plan-list]: [object Object]
2020-07-09T08:20:34.245Z |-[34mdebug[39m [router:plan-type-list]: Get All Plan Type Details.
2020-07-09T08:20:34.245Z |-[32minfo[39m [service:plan-types-list]: Plan type listing.
2020-07-09T08:20:34.245Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE
                        WHERE IS_DELETED = false'; values=[]
2020-07-09T08:20:34.247Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false'': { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLAN_TYPE' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLAN_TYPE\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false' }
2020-07-09T08:20:34.248Z |-[31merror[39m [router:plan-type-list]: Plan Type List could not be fetched: { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLAN_TYPE' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLAN_TYPE\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false' }
2020-07-09T08:20:34.248Z |-[34mdebug[39m [application-exception]: 
2020-07-09T08:20:34.248Z |-[31merror[39m [router:plan-type-list]: [object Object]
2020-07-09T09:16:07.118Z |-[34mdebug[39m [router:plan-type-list]: Get All Plan Type Details.
2020-07-09T09:16:07.118Z |-[32minfo[39m [service:plan-types-list]: Plan type listing.
2020-07-09T09:16:07.119Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE
                        WHERE IS_DELETED = false'; values=[]
2020-07-09T09:16:07.120Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false'': { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLAN_TYPE' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLAN_TYPE\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false' }
2020-07-09T09:16:07.121Z |-[31merror[39m [router:plan-type-list]: Plan Type List could not be fetched: { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLAN_TYPE' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLAN_TYPE\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false' }
2020-07-09T09:16:07.121Z |-[34mdebug[39m [application-exception]: 
2020-07-09T09:16:07.121Z |-[31merror[39m [router:plan-type-list]: [object Object]
2020-07-09T09:16:51.171Z |-[34mdebug[39m [router:plan-type-list]: Get All Plan Type Details.
2020-07-09T09:16:51.171Z |-[32minfo[39m [service:plan-types-list]: Plan type listing.
2020-07-09T09:16:51.171Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE
                        WHERE IS_DELETED = false'; values=[]
2020-07-09T09:16:51.173Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false'': { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLAN_TYPE' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLAN_TYPE\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false' }
2020-07-09T09:16:51.173Z |-[31merror[39m [router:plan-type-list]: Plan Type List could not be fetched: { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLAN_TYPE' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLAN_TYPE\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false' }
2020-07-09T09:16:51.174Z |-[34mdebug[39m [application-exception]: 
2020-07-09T09:16:51.174Z |-[31merror[39m [router:plan-type-list]: [object Object]
2020-07-09T09:17:14.116Z |-[34mdebug[39m [router:plan-type-list]: Get All Plan Type Details.
2020-07-09T09:17:14.116Z |-[32minfo[39m [service:plan-types-list]: Plan type listing.
2020-07-09T09:17:14.116Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE
                        WHERE IS_DELETED = false'; values=[]
2020-07-09T09:17:14.118Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false'': { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLAN_TYPE' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLAN_TYPE\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false' }
2020-07-09T09:17:14.118Z |-[31merror[39m [router:plan-type-list]: Plan Type List could not be fetched: { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLAN_TYPE' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLAN_TYPE\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false' }
2020-07-09T09:17:14.119Z |-[34mdebug[39m [application-exception]: 
2020-07-09T09:17:14.119Z |-[31merror[39m [router:plan-type-list]: [object Object]
2020-07-09T09:17:27.380Z |-[34mdebug[39m [router:plan-type-list]: Get All Plan Type Details.
2020-07-09T09:17:27.381Z |-[32minfo[39m [service:plan-types-list]: Plan type listing.
2020-07-09T09:17:27.381Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE
                        WHERE IS_DELETED = false'; values=[]
2020-07-09T09:17:27.383Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false'': { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLAN_TYPE' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLAN_TYPE\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false' }
2020-07-09T09:17:27.383Z |-[31merror[39m [router:plan-type-list]: Plan Type List could not be fetched: { Error: ER_NO_SUCH_TABLE: Table 'spotcarerdbms.PLAN_TYPE' doesn't exist
    at Query.Sequence._packetToError (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
    --------------------
    at Protocol._enqueue (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:201:25)
    at /usr/demospotcarefinal/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Ping._callback (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:491:16)
    at Ping.Sequence.end (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/demospotcarefinal/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:91:28)
    at Socket.<anonymous> (/usr/demospotcarefinal/spot/node_modules/mysql/lib/Connection.js:525:10)
    at Socket.emit (events.js:198:13)
    at Socket.EventEmitter.emit (domain.js:448:20)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17) code: 'ER_NO_SUCH_TABLE', errno: 1146, sqlMessage: 'Table \'spotcarerdbms.PLAN_TYPE\' doesn\'t exist', sqlState: '42S02', index: 0, sql: 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false' }
2020-07-09T09:17:27.384Z |-[34mdebug[39m [application-exception]: 
2020-07-09T09:17:27.384Z |-[31merror[39m [router:plan-type-list]: [object Object]
2020-07-09T11:07:57.713Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2020-07-09T11:07:57.716Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 1.
2020-07-09T11:07:57.717Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '1' ]
2020-07-09T11:07:57.720Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 3 msec
2020-07-09T11:07:57.758Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 1.
2020-07-09T11:07:57.758Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 1.
2020-07-09T11:07:57.759Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from ORG_PLAN_UNITS_INVENTORY OP
                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '1' ]
2020-07-09T11:07:57.761Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, \'%Y-%m-%d\') EXPIRY_DATE\n                        from ORG_PLAN_UNITS_INVENTORY OP\n                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'': 0 record(s); took 2 msec
2020-07-09T11:07:59.893Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 1.
2020-07-09T11:07:59.894Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 1.
2020-07-09T11:07:59.894Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from ORG_PLAN_UNITS_INVENTORY OP
                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '1' ]
2020-07-09T11:07:59.897Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, \'%Y-%m-%d\') EXPIRY_DATE\n                        from ORG_PLAN_UNITS_INVENTORY OP\n                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'': 0 record(s); took 3 msec
2020-07-09T11:07:59.899Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2020-07-09T11:07:59.899Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 1.
2020-07-09T11:07:59.900Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '1' ]
2020-07-09T11:07:59.903Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 3 msec
2020-07-09T11:08:06.130Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 1.
2020-07-09T11:08:06.131Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 1.
2020-07-09T11:08:06.131Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from ORG_PLAN_UNITS_INVENTORY OP
                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '1' ]
2020-07-09T11:08:06.134Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, \'%Y-%m-%d\') EXPIRY_DATE\n                        from ORG_PLAN_UNITS_INVENTORY OP\n                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'': 0 record(s); took 3 msec
2020-07-09T11:08:06.136Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2020-07-09T11:08:06.137Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 1.
2020-07-09T11:08:06.137Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '1' ]
2020-07-09T11:08:06.140Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 3 msec
2020-07-09T11:46:23.307Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-09T11:46:23.310Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-09T11:46:23.311Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2020-07-09T11:46:23.316Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false'': 1 record(s); took 6 msec
2020-07-09T11:46:41.227Z |-[34mdebug[39m [router:payment-coupon]: Validate coupon code and return price after applying coupon discount.
2020-07-09T11:46:41.228Z |-[34mdebug[39m [service:coupon-validation]: Validating coupon code and return value after applying coupon discount.
2020-07-09T11:46:41.229Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from COUPONS C
                        INNER JOIN COUPONS_PLAN cp on cp.COUPON_ID = C.COUPON_ID
                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()
                                and is_deleted = false and bin_to_UUID(cp.PLAN_ID) = ?'; values=[ 'BPSUTIVAC', '3a36c295-7f7b-c2bd-11ea-a09c6e0a79c9' ]
2020-07-09T11:46:41.232Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from COUPONS C\n                        INNER JOIN COUPONS_PLAN cp on cp.COUPON_ID = C.COUPON_ID\n                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()\n                                and is_deleted = false and bin_to_UUID(cp.PLAN_ID) = ?'': 0 record(s); took 4 msec
2020-07-09T11:46:41.233Z |-[34mdebug[39m [service:coupon-validation]: Coupon code  is either expired or not exist
2020-07-09T11:46:41.233Z |-[31merror[39m [router:payment-coupon]: Coupon is not processed : Error: Not a valid coupon code
    at generateOrder (/usr/demospotcarefinal/spot/services/payment/apply-coupon.js:21:22)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2020-07-09T11:46:41.233Z |-[34mdebug[39m [application-exception]: 
2020-07-09T11:46:41.234Z |-[31merror[39m [router:payment-coupon]: [object Object]
2020-07-09T12:10:03.020Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 1.
2020-07-09T12:10:03.020Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 1.
2020-07-09T12:10:03.021Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from ORG_PLAN_UNITS_INVENTORY OP
                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '1' ]
2020-07-09T12:10:03.024Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, \'%Y-%m-%d\') EXPIRY_DATE\n                        from ORG_PLAN_UNITS_INVENTORY OP\n                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'': 0 record(s); took 3 msec
2020-07-09T12:10:03.044Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2020-07-09T12:10:03.045Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 1.
2020-07-09T12:10:03.045Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '1' ]
2020-07-09T12:10:03.048Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 3 msec
2020-07-09T12:10:04.335Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-09T12:10:04.335Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-09T12:10:04.336Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2020-07-09T12:10:04.339Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false'': 0 record(s); took 3 msec
2020-07-09T12:10:05.550Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 1.
2020-07-09T12:10:05.550Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 1.
2020-07-09T12:10:05.550Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from ORG_PLAN_UNITS_INVENTORY OP
                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '1' ]
2020-07-09T12:10:05.551Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2020-07-09T12:10:05.551Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 1.
2020-07-09T12:10:05.551Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '1' ]
2020-07-09T12:10:05.553Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, \'%Y-%m-%d\') EXPIRY_DATE\n                        from ORG_PLAN_UNITS_INVENTORY OP\n                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'': 0 record(s); took 3 msec
2020-07-09T12:10:05.554Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 3 msec
2020-07-09T12:16:21.569Z |-[34mdebug[39m [router:plan-type-list]: Get All Plan Type Details.
2020-07-09T12:16:21.569Z |-[32minfo[39m [service:plan-types-list]: Plan type listing.
2020-07-09T12:16:21.570Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE
                        WHERE IS_DELETED = false'; values=[]
2020-07-09T12:16:21.572Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false'': 2 record(s); took 2 msec
2020-07-09T12:16:21.662Z |-[34mdebug[39m [router:duration-type-list]: Get All Duration Type Details.
2020-07-09T12:16:21.662Z |-[32minfo[39m [service:duration-types-list]: Duration type listing.
2020-07-09T12:16:21.663Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(DURATION_TYPE_ID) TYPE_ID, TYPE_DESC FROM DURATION_TYPE
                        WHERE IS_DELETED = false'; values=[]
2020-07-09T12:16:21.665Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(DURATION_TYPE_ID) TYPE_ID, TYPE_DESC FROM DURATION_TYPE\n                        WHERE IS_DELETED = false'': 3 record(s); took 2 msec
2020-07-09T12:16:21.755Z |-[34mdebug[39m [router:service-list]: Get All service names.
2020-07-09T12:16:21.756Z |-[32minfo[39m [service:service-list]: Service type listing.
2020-07-09T12:16:21.756Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE
                        WHERE IS_DELETED = false'; values=[]
2020-07-09T12:16:21.758Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE\n                        WHERE IS_DELETED = false'': 2 record(s); took 2 msec
2020-07-09T12:17:47.191Z |-[34mdebug[39m [router:create-plan]: Create Plan.
2020-07-09T12:17:47.192Z |-[34mdebug[39m [Util:request-validation]: Validating request payload for schema - add_plan
2020-07-09T12:17:47.193Z |-[32minfo[39m [service:create-plan]: creating plan.
2020-07-09T12:17:47.191Z |-[34mdebug[39m [router:create-plan]: Data body. {"name":"BPSUTIVAC","description":"BPSUTIVAC Registration Plan","plan_type":"c2adc380-3646-71c8-91ea-a09c6e0a79c9","status":"active","start_date":"2020-07-09","end_date":"2021-07-08","amount":649,"services":[{"service_id":"c2adc381-0bc2-9d71-c891-eaa09c6e0a79","TYPE_DESC":"Prescription","unit":100,"unit_type":"c2adc381-c49b-71c8-91ea-a09c6e0a79c9","free_unit":50,"free_days":0,"free_months":0},{"service_id":"c2adc381-6077-71c8-91ea-a09c6e0a79c9","TYPE_DESC":"Video Call","unit":100,"unit_type":"c2adc381-c49b-71c8-91ea-a09c6e0a79c9","free_unit":50,"free_days":0,"free_months":0}],"validityInDays":365,"originalUserTypeId":1,"originalOrgUserMappingId":null,"userTypeId":1,"orgUserMappingId":null,"timeInterval":0,"orgId":0,"type":"SpotAdmin","userId":1,"tzOffset":330}
2020-07-09T12:17:47.194Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2020-07-09T12:17:47.195Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2020-07-09T12:17:47.197Z |-[34mdebug[39m [service:create-plan]: Saving data in PLANS table
2020-07-09T12:17:47.198Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO PLANS (PLAN_ID,PLAN_DESC,TYPE_ID_FK,STATUS,START_DATE,END_DATE,AMOUNT,IS_DELETED,VERSION,MODIFIED_BY,CREATED_BY,NAME,PLAN_VALIDITY_DAYS) 
                                VALUES
                                (UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?,?,?,?,?,?,?,?)'; values=[ '329edee0-c1de-11ea-92ce-0275bd679b64', 'BPSUTIVAC Registration Plan', 'c2adc380-3646-71c8-91ea-a09c6e0a79c9', 'active', '2020-07-09', '2021-07-08', 649, false, 1, 0, 0, 'BPSUTIVAC', 365 ]
2020-07-09T12:17:47.200Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO PLANS (PLAN_ID,PLAN_DESC,TYPE_ID_FK,STATUS,START_DATE,END_DATE,AMOUNT,IS_DELETED,VERSION,MODIFIED_BY,CREATED_BY,NAME,PLAN_VALIDITY_DAYS) \n                                VALUES\n                                (UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?,?,?,?,?,?,?,?)'': undefined record(s); took 2 msec
2020-07-09T12:17:47.200Z |-[34mdebug[39m [service:create-plan]: Saving plan service mapping in PLAN_SERVICE table
2020-07-09T12:17:47.201Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO PLAN_SERVICES (PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,MODIFIED_BY,CREATED_BY,UNITS,FREE_DAYS,FREE_MONTHS) 
                                VALUES
                                (UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?,?,?,?)'; values=[ '329edee0-c1de-11ea-92ce-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 50, 'c2adc381-c49b-71c8-91ea-a09c6e0a79c9', false, 0, 0, 100, 0, 0 ]
2020-07-09T12:17:47.202Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO PLAN_SERVICES (PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,MODIFIED_BY,CREATED_BY,UNITS,FREE_DAYS,FREE_MONTHS) \n                                VALUES\n                                (UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?,?,?,?)'': undefined record(s); took 1 msec
2020-07-09T12:17:47.202Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO PLAN_SERVICES (PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,MODIFIED_BY,CREATED_BY,UNITS,FREE_DAYS,FREE_MONTHS) 
                                VALUES
                                (UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?,?,?,?)'; values=[ '329edee0-c1de-11ea-92ce-0275bd679b64', 'c2adc381-6077-71c8-91ea-a09c6e0a79c9', 50, 'c2adc381-c49b-71c8-91ea-a09c6e0a79c9', false, 0, 0, 100, 0, 0 ]
2020-07-09T12:17:47.203Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO PLAN_SERVICES (PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,MODIFIED_BY,CREATED_BY,UNITS,FREE_DAYS,FREE_MONTHS) \n                                VALUES\n                                (UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?,?,?,?)'': undefined record(s); took 1 msec
2020-07-09T12:17:47.204Z |-[34mdebug[39m [service:create-plan]: Successfully added the plan
2020-07-09T12:17:47.204Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 9 ms
2020-07-09T12:17:50.859Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-09T12:17:50.860Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-09T12:17:50.860Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,
                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'; values=[ 'ALL' ]
2020-07-09T12:17:50.862Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,\n                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'': 2 record(s); took 2 msec
2020-07-09T12:18:49.672Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-09T12:18:49.673Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-09T12:18:49.673Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,
                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'; values=[ 'ALL' ]
2020-07-09T12:18:49.676Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,\n                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'': 2 record(s); took 3 msec
2020-07-09T12:19:20.396Z |-[34mdebug[39m [router:create-coupon]: Create Coupon.
2020-07-09T12:19:20.396Z |-[34mdebug[39m [Util:request-validation]: Validating request payload for schema - add_coupon
2020-07-09T12:19:20.397Z |-[32minfo[39m [service:create-coupon]: creating coupon.
2020-07-09T12:19:20.398Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2020-07-09T12:19:20.398Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2020-07-09T12:19:20.400Z |-[34mdebug[39m [service:create-coupon]: Saving data in COUPONS table
2020-07-09T12:19:20.401Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO COUPONS (COUPON_ID,DESCRIPTION, CODE, DISCOUNT, DISCOUNT_TYPE, IS_DELETED,IS_ACTIVE,VERSION, MODIFIED_BY,CREATED_BY, START_DATE, END_DATE) 
                                VALUES
                                (UUID_TO_BIN(?),?,?,?,?,?,?,?,?,?,?,?)'; values=[ '6a2c7dfa-c1de-11ea-92ce-0275bd679b64', 'Coupon Code for BPS Doctors', 'BPSUTIVAC', 100, 'percent', false, true, 1, 0, 0, '2020-07-09', '2021-07-08' ]
2020-07-09T12:19:20.404Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO COUPONS (COUPON_ID,DESCRIPTION, CODE, DISCOUNT, DISCOUNT_TYPE, IS_DELETED,IS_ACTIVE,VERSION, MODIFIED_BY,CREATED_BY, START_DATE, END_DATE) \n                                VALUES\n                                (UUID_TO_BIN(?),?,?,?,?,?,?,?,?,?,?,?)'': undefined record(s); took 3 msec
2020-07-09T12:19:20.404Z |-[34mdebug[39m [service:create-coupon]: Saving coupon and plan details mapping in COUPONS_PLAN table
2020-07-09T12:19:20.405Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO COUPONS_PLAN (COUPON_ID, PLAN_ID) 
                                VALUES
                                (UUID_TO_BIN(?),UUID_TO_BIN(?))'; values=[ '6a2c7dfa-c1de-11ea-92ce-0275bd679b64', '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-09T12:19:20.407Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO COUPONS_PLAN (COUPON_ID, PLAN_ID) \n                                VALUES\n                                (UUID_TO_BIN(?),UUID_TO_BIN(?))'': undefined record(s); took 2 msec
2020-07-09T12:19:20.408Z |-[34mdebug[39m [service:create-coupon]: Successfully added the coupon
2020-07-09T12:19:20.408Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 10 ms
2020-07-09T12:19:24.343Z |-[34mdebug[39m [router:coupon-list]: Get All Payment Details.
2020-07-09T12:19:24.344Z |-[32minfo[39m [service:coupon-list]: plan listing.
2020-07-09T12:19:24.344Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,
		                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM COUPONS C
                        INNER JOIN COUPONS_PLAN CP ON CP.COUPON_ID = C.COUPON_ID
                        INNER JOIN PLANS P ON P.PLAN_ID = CP.PLAN_ID
                        WHERE  C.IS_DELETED = false ;'; values=[]
2020-07-09T12:19:24.347Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,\n\t\t                C.IS_ACTIVE, IFNULL(P.NAME,\'\') PLAN_NAME FROM COUPONS C\n                        INNER JOIN COUPONS_PLAN CP ON CP.COUPON_ID = C.COUPON_ID\n                        INNER JOIN PLANS P ON P.PLAN_ID = CP.PLAN_ID\n                        WHERE  C.IS_DELETED = false ;'': 1 record(s); took 3 msec
2020-07-09T12:20:06.986Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-09T12:20:06.986Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-09T12:20:06.986Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2020-07-09T12:20:06.990Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false'': 2 record(s); took 4 msec
2020-07-09T12:20:16.352Z |-[34mdebug[39m [router:payment-coupon]: Validate coupon code and return price after applying coupon discount.
2020-07-09T12:20:16.352Z |-[34mdebug[39m [service:coupon-validation]: Validating coupon code and return value after applying coupon discount.
2020-07-09T12:20:16.352Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from COUPONS C
                        INNER JOIN COUPONS_PLAN cp on cp.COUPON_ID = C.COUPON_ID
                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()
                                and is_deleted = false and bin_to_UUID(cp.PLAN_ID) = ?'; values=[ 'BPSUTIVAC', '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-09T12:20:16.355Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from COUPONS C\n                        INNER JOIN COUPONS_PLAN cp on cp.COUPON_ID = C.COUPON_ID\n                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()\n                                and is_deleted = false and bin_to_UUID(cp.PLAN_ID) = ?'': 1 record(s); took 3 msec
2020-07-09T12:20:16.356Z |-[34mdebug[39m [service:coupon-validation]: Coupon BPSUTIVAC is valid - [object Object]
2020-07-09T12:20:16.356Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select amount from PLANS  where PLAN_ID = UUID_TO_BIN(?);'; values=[ '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-09T12:20:16.358Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select amount from PLANS  where PLAN_ID = UUID_TO_BIN(?);'': 1 record(s); took 2 msec
2020-07-09T12:20:16.358Z |-[34mdebug[39m [service:coupon-validation]: Caculating discount in percentage
2020-07-09T12:20:26.325Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2020-07-09T12:20:26.325Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2020-07-09T12:20:26.326Z |-[34mdebug[39m [service:update-payment]: [object Object]
2020-07-09T12:20:26.326Z |-[34mdebug[39m [service:update-payment]: creating new organization.
2020-07-09T12:20:41.096Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2020-07-09T12:20:41.096Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2020-07-09T12:20:41.096Z |-[34mdebug[39m [service:update-payment]: [object Object]
2020-07-09T12:20:41.096Z |-[34mdebug[39m [service:update-payment]: creating new organization.
2020-07-09T12:20:41.128Z |-[34mdebug[39m [service:update-payment]: New Org id is 13
2020-07-09T12:20:41.129Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2020-07-09T12:20:41.129Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2020-07-09T12:20:41.130Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update organisation set is_inactive = 0 where id = ?'; values=[ 13 ]
2020-07-09T12:20:41.131Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update organisation set is_inactive = 0 where id = ?'': undefined record(s); took 1 msec
2020-07-09T12:20:41.132Z |-[34mdebug[39m [service:update-payment]: Activating organization id 13 on successfull online payment.
2020-07-09T12:20:41.132Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 329edee0-c1de-11ea-92ce-0275bd679b64.
2020-07-09T12:20:41.132Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P
                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-09T12:20:41.135Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P\n                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 2 record(s); took 3 msec
2020-07-09T12:20:41.135Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 13, '329edee0-c1de-11ea-92ce-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 50, 'c2adc381-c49b-71c8-91ea-a09c6e0a79c9', false, 2021-07-09T12:20:41.135Z, 0 ]
2020-07-09T12:20:41.137Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 2 msec
2020-07-09T12:20:41.137Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 13, '329edee0-c1de-11ea-92ce-0275bd679b64', 'c2adc381-6077-71c8-91ea-a09c6e0a79c9', 50, 'c2adc381-c49b-71c8-91ea-a09c6e0a79c9', false, 2021-07-09T12:20:41.137Z, 0 ]
2020-07-09T12:20:41.138Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2020-07-09T12:20:41.139Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 10 ms
2020-07-09T12:20:41.160Z |-[34mdebug[39m [service:update-payment]: New Org id is 13
2020-07-09T12:20:41.161Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2020-07-09T12:20:41.161Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2020-07-09T12:20:41.162Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update organisation set is_inactive = 0 where id = ?'; values=[ 13 ]
2020-07-09T12:20:41.164Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update organisation set is_inactive = 0 where id = ?'': undefined record(s); took 2 msec
2020-07-09T12:20:41.165Z |-[34mdebug[39m [service:update-payment]: Activating organization id 13 on successfull online payment.
2020-07-09T12:20:41.165Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 329edee0-c1de-11ea-92ce-0275bd679b64.
2020-07-09T12:20:41.165Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P
                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-09T12:20:41.168Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P\n                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 2 record(s); took 3 msec
2020-07-09T12:20:41.168Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 13, '329edee0-c1de-11ea-92ce-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 50, 'c2adc381-c49b-71c8-91ea-a09c6e0a79c9', false, 2021-07-09T12:20:41.168Z, 0 ]
2020-07-09T12:20:41.169Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2020-07-09T12:20:41.170Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 13, '329edee0-c1de-11ea-92ce-0275bd679b64', 'c2adc381-6077-71c8-91ea-a09c6e0a79c9', 50, 'c2adc381-c49b-71c8-91ea-a09c6e0a79c9', false, 2021-07-09T12:20:41.170Z, 0 ]
2020-07-09T12:20:41.171Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2020-07-09T12:20:41.171Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 10 ms
2020-07-09T20:08:02.214Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-09T20:08:02.214Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-09T20:08:02.214Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2020-07-09T20:08:02.222Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false'': 2 record(s); took 8 msec
2020-07-09T20:08:13.014Z |-[34mdebug[39m [router:payment-coupon]: Validate coupon code and return price after applying coupon discount.
2020-07-09T20:08:13.015Z |-[34mdebug[39m [service:coupon-validation]: Validating coupon code and return value after applying coupon discount.
2020-07-09T20:08:13.015Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from COUPONS C
                        INNER JOIN COUPONS_PLAN cp on cp.COUPON_ID = C.COUPON_ID
                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()
                                and is_deleted = false and bin_to_UUID(cp.PLAN_ID) = ?'; values=[ 'BPSUTIVAC', '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-09T20:08:13.018Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from COUPONS C\n                        INNER JOIN COUPONS_PLAN cp on cp.COUPON_ID = C.COUPON_ID\n                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()\n                                and is_deleted = false and bin_to_UUID(cp.PLAN_ID) = ?'': 1 record(s); took 3 msec
2020-07-09T20:08:13.018Z |-[34mdebug[39m [service:coupon-validation]: Coupon BPSUTIVAC is valid - [object Object]
2020-07-09T20:08:13.018Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select amount from PLANS  where PLAN_ID = UUID_TO_BIN(?);'; values=[ '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-09T20:08:13.020Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select amount from PLANS  where PLAN_ID = UUID_TO_BIN(?);'': 1 record(s); took 2 msec
2020-07-09T20:08:13.020Z |-[34mdebug[39m [service:coupon-validation]: Caculating discount in percentage
2020-07-09T20:08:21.271Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2020-07-09T20:08:21.272Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2020-07-09T20:08:21.272Z |-[34mdebug[39m [service:update-payment]: [object Object]
2020-07-09T20:08:21.272Z |-[34mdebug[39m [service:update-payment]: creating new organization.
2020-07-09T20:08:21.303Z |-[34mdebug[39m [service:update-payment]: New Org id is 14
2020-07-09T20:08:21.305Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2020-07-09T20:08:21.305Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2020-07-09T20:08:21.305Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update organisation set is_inactive = 0 where id = ?'; values=[ 14 ]
2020-07-09T20:08:21.307Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update organisation set is_inactive = 0 where id = ?'': undefined record(s); took 2 msec
2020-07-09T20:08:21.307Z |-[34mdebug[39m [service:update-payment]: Activating organization id 14 on successfull online payment.
2020-07-09T20:08:21.308Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 329edee0-c1de-11ea-92ce-0275bd679b64.
2020-07-09T20:08:21.308Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P
                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-09T20:08:21.312Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P\n                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 2 record(s); took 4 msec
2020-07-09T20:08:21.313Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 14, '329edee0-c1de-11ea-92ce-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 50, 'c2adc381-c49b-71c8-91ea-a09c6e0a79c9', false, 2021-07-09T20:08:21.313Z, 0 ]
2020-07-09T20:08:21.316Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 3 msec
2020-07-09T20:08:21.316Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 14, '329edee0-c1de-11ea-92ce-0275bd679b64', 'c2adc381-6077-71c8-91ea-a09c6e0a79c9', 50, 'c2adc381-c49b-71c8-91ea-a09c6e0a79c9', false, 2021-07-09T20:08:21.316Z, 0 ]
2020-07-09T20:08:21.317Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO ORG_PLAN_UNITS_INVENTORY (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2020-07-09T20:08:21.318Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 13 ms
2020-07-10T06:48:51.146Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 1.
2020-07-10T06:48:51.149Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 1.
2020-07-10T06:48:51.150Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from ORG_PLAN_UNITS_INVENTORY OP
                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '1' ]
2020-07-10T06:48:51.154Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, \'%Y-%m-%d\') EXPIRY_DATE\n                        from ORG_PLAN_UNITS_INVENTORY OP\n                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'': 0 record(s); took 4 msec
2020-07-10T06:48:51.156Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2020-07-10T06:48:51.157Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 1.
2020-07-10T06:48:51.157Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '1' ]
2020-07-10T06:48:51.162Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 5 msec
2020-07-10T06:48:51.624Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-10T06:48:51.625Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-10T06:48:51.626Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2020-07-10T06:48:51.629Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false'': 0 record(s); took 3 msec
2020-07-10T09:13:39.638Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 1.
2020-07-10T09:13:39.638Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 1.
2020-07-10T09:13:39.639Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from ORG_PLAN_UNITS_INVENTORY OP
                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '1' ]
2020-07-10T09:13:39.642Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, \'%Y-%m-%d\') EXPIRY_DATE\n                        from ORG_PLAN_UNITS_INVENTORY OP\n                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'': 0 record(s); took 3 msec
2020-07-10T09:13:39.682Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2020-07-10T09:13:39.682Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 1.
2020-07-10T09:13:39.682Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '1' ]
2020-07-10T09:13:39.685Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 3 msec
2020-07-10T09:13:40.292Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-10T09:13:40.292Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-10T09:13:40.293Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2020-07-10T09:13:40.295Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false'': 0 record(s); took 2 msec
2020-07-10T09:13:40.987Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2020-07-10T09:13:40.987Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 1.
2020-07-10T09:13:40.987Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '1' ]
2020-07-10T09:13:40.989Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 1.
2020-07-10T09:13:40.990Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 1.
2020-07-10T09:13:40.990Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from ORG_PLAN_UNITS_INVENTORY OP
                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '1' ]
2020-07-10T09:13:40.992Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 4 msec
2020-07-10T09:13:40.994Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, \'%Y-%m-%d\') EXPIRY_DATE\n                        from ORG_PLAN_UNITS_INVENTORY OP\n                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'': 0 record(s); took 4 msec
2020-07-10T09:15:25.535Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-10T09:15:25.536Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-10T09:15:25.536Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2020-07-10T09:15:25.539Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false'': 0 record(s); took 3 msec
2020-07-10T09:15:27.176Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 1.
2020-07-10T09:15:27.176Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 1.
2020-07-10T09:15:27.176Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from ORG_PLAN_UNITS_INVENTORY OP
                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '1' ]
2020-07-10T09:15:27.179Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, \'%Y-%m-%d\') EXPIRY_DATE\n                        from ORG_PLAN_UNITS_INVENTORY OP\n                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'': 0 record(s); took 3 msec
2020-07-10T09:15:27.219Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2020-07-10T09:15:27.219Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 1.
2020-07-10T09:15:27.220Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '1' ]
2020-07-10T09:15:27.222Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 2 msec
2020-07-10T09:16:24.251Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 1.
2020-07-10T09:16:24.251Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 1.
2020-07-10T09:16:24.252Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from ORG_PLAN_UNITS_INVENTORY OP
                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '1' ]
2020-07-10T09:16:24.254Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2020-07-10T09:16:24.254Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 1.
2020-07-10T09:16:24.254Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '1' ]
2020-07-10T09:16:24.256Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, \'%Y-%m-%d\') EXPIRY_DATE\n                        from ORG_PLAN_UNITS_INVENTORY OP\n                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'': 0 record(s); took 4 msec
2020-07-10T09:16:24.259Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 5 msec
2020-07-10T09:16:38.818Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 1.
2020-07-10T09:16:38.818Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 1.
2020-07-10T09:16:38.818Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from ORG_PLAN_UNITS_INVENTORY OP
                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '1' ]
2020-07-10T09:16:38.821Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, \'%Y-%m-%d\') EXPIRY_DATE\n                        from ORG_PLAN_UNITS_INVENTORY OP\n                        inner join PLANS PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'': 0 record(s); took 3 msec
2020-07-10T09:16:38.864Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2020-07-10T09:16:38.864Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 1.
2020-07-10T09:16:38.865Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '1' ]
2020-07-10T09:16:38.868Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join USER_UNITS_ASSIGNMENT ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN SERVICE_TYPE ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 4 msec
2020-07-10T09:16:39.181Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-10T09:16:39.181Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-10T09:16:39.181Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2020-07-10T09:16:39.184Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false'': 0 record(s); took 3 msec
2020-07-10T11:12:46.555Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-10T11:12:46.558Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-10T11:12:46.559Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2020-07-10T11:12:46.562Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false'': 2 record(s); took 3 msec
2020-07-10T11:12:52.586Z |-[34mdebug[39m [router:payment-coupon]: Validate coupon code and return price after applying coupon discount.
2020-07-10T11:12:52.587Z |-[34mdebug[39m [service:coupon-validation]: Validating coupon code and return value after applying coupon discount.
2020-07-10T11:12:52.587Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from COUPONS C
                        INNER JOIN COUPONS_PLAN cp on cp.COUPON_ID = C.COUPON_ID
                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()
                                and is_deleted = false and bin_to_UUID(cp.PLAN_ID) = ?'; values=[ 'BPSUTVAC', '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-10T11:12:52.590Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from COUPONS C\n                        INNER JOIN COUPONS_PLAN cp on cp.COUPON_ID = C.COUPON_ID\n                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()\n                                and is_deleted = false and bin_to_UUID(cp.PLAN_ID) = ?'': 0 record(s); took 3 msec
2020-07-10T11:12:52.591Z |-[34mdebug[39m [service:coupon-validation]: Coupon code  is either expired or not exist
2020-07-10T11:12:52.592Z |-[31merror[39m [router:payment-coupon]: Coupon is not processed : Error: Not a valid coupon code
    at generateOrder (/usr/demospotcarefinal/spot/services/payment/apply-coupon.js:21:22)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2020-07-10T11:12:52.592Z |-[34mdebug[39m [application-exception]: 
2020-07-10T11:12:52.593Z |-[31merror[39m [router:payment-coupon]: [object Object]
2020-07-10T11:12:57.214Z |-[34mdebug[39m [router:payment-coupon]: Validate coupon code and return price after applying coupon discount.
2020-07-10T11:12:57.214Z |-[34mdebug[39m [service:coupon-validation]: Validating coupon code and return value after applying coupon discount.
2020-07-10T11:12:57.214Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from COUPONS C
                        INNER JOIN COUPONS_PLAN cp on cp.COUPON_ID = C.COUPON_ID
                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()
                                and is_deleted = false and bin_to_UUID(cp.PLAN_ID) = ?'; values=[ 'BPSUTIVAC', '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-10T11:12:57.217Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from COUPONS C\n                        INNER JOIN COUPONS_PLAN cp on cp.COUPON_ID = C.COUPON_ID\n                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()\n                                and is_deleted = false and bin_to_UUID(cp.PLAN_ID) = ?'': 1 record(s); took 3 msec
2020-07-10T11:12:57.217Z |-[34mdebug[39m [service:coupon-validation]: Coupon BPSUTIVAC is valid - [object Object]
2020-07-10T11:12:57.218Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select amount from PLANS  where PLAN_ID = UUID_TO_BIN(?);'; values=[ '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-10T11:12:57.220Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select amount from PLANS  where PLAN_ID = UUID_TO_BIN(?);'': 1 record(s); took 2 msec
2020-07-10T11:12:57.220Z |-[34mdebug[39m [service:coupon-validation]: Caculating discount in percentage
2020-07-10T11:12:59.284Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2020-07-10T11:12:59.285Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2020-07-10T11:12:59.285Z |-[34mdebug[39m [service:update-payment]: [object Object]
2020-07-10T11:12:59.286Z |-[34mdebug[39m [service:update-payment]: creating new organization.
2020-07-10T11:12:59.345Z |-[34mdebug[39m [service:update-payment]: New Org id is 15
2020-07-10T11:12:59.346Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2020-07-10T11:12:59.347Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2020-07-10T11:12:59.347Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update organisation set is_inactive = 0 where id = ?'; values=[ 15 ]
2020-07-10T11:12:59.350Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update organisation set is_inactive = 0 where id = ?'': undefined record(s); took 3 msec
2020-07-10T11:12:59.350Z |-[34mdebug[39m [service:update-payment]: Activating organization id 15 on successfull online payment.
2020-07-10T11:12:59.351Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 329edee0-c1de-11ea-92ce-0275bd679b64.
2020-07-10T11:12:59.352Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P
                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '329edee0-c1de-11ea-92ce-0275bd679b64' ]
2020-07-10T11:13:14.385Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2020-07-10T11:13:14.386Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2020-07-10T11:13:14.386Z |-[34mdebug[39m [service:update-payment]: [object Object]
2020-07-10T11:13:14.386Z |-[34mdebug[39m [service:update-payment]: creating new organization.
2020-07-10T11:13:29.402Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2020-07-10T11:13:29.402Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2020-07-10T11:13:29.402Z |-[34mdebug[39m [service:update-payment]: [object Object]
2020-07-10T11:13:29.403Z |-[34mdebug[39m [service:update-payment]: creating new organization.
2020-07-10T11:13:42.683Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2020-07-10T11:13:42.684Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2020-07-10T11:13:42.685Z |-[34mdebug[39m [service:update-payment]: [object Object]
2020-07-10T11:13:42.685Z |-[34mdebug[39m [service:update-payment]: creating new organization.
2020-07-10T11:13:44.415Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2020-07-10T11:13:44.416Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2020-07-10T11:13:44.417Z |-[34mdebug[39m [service:update-payment]: [object Object]
2020-07-10T11:13:44.417Z |-[34mdebug[39m [service:update-payment]: creating new organization.
2020-07-11T06:13:30.937Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-11T06:13:30.940Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-11T06:13:30.941Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2020-07-11T06:13:30.944Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = \'Active\' \n                        and PT.IS_DELETED = false'': 0 record(s); took 4 msec
2020-07-12T10:29:26.352Z |-[34mdebug[39m [router:plan-type-list]: Get All Plan Type Details.
2020-07-12T10:29:26.355Z |-[32minfo[39m [service:plan-types-list]: Plan type listing.
2020-07-12T10:29:26.356Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE
                        WHERE IS_DELETED = false'; values=[]
2020-07-12T10:29:26.358Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false'': 2 record(s); took 2 msec
2020-07-12T10:29:26.455Z |-[34mdebug[39m [router:duration-type-list]: Get All Duration Type Details.
2020-07-12T10:29:26.455Z |-[32minfo[39m [service:duration-types-list]: Duration type listing.
2020-07-12T10:29:26.456Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(DURATION_TYPE_ID) TYPE_ID, TYPE_DESC FROM DURATION_TYPE
                        WHERE IS_DELETED = false'; values=[]
2020-07-12T10:29:26.458Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(DURATION_TYPE_ID) TYPE_ID, TYPE_DESC FROM DURATION_TYPE\n                        WHERE IS_DELETED = false'': 3 record(s); took 2 msec
2020-07-12T10:29:26.549Z |-[34mdebug[39m [router:service-list]: Get All service names.
2020-07-12T10:29:26.549Z |-[32minfo[39m [service:service-list]: Service type listing.
2020-07-12T10:29:26.549Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE
                        WHERE IS_DELETED = false'; values=[]
2020-07-12T10:29:26.551Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE\n                        WHERE IS_DELETED = false'': 2 record(s); took 2 msec
2020-07-12T10:29:28.390Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2020-07-12T10:29:28.390Z |-[32minfo[39m [service:plan-list]: plan listing.
2020-07-12T10:29:28.391Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,
                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'; values=[ 'ALL' ]
2020-07-12T10:29:28.393Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,\n                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'': 2 record(s); took 2 msec
2020-07-12T10:29:31.192Z |-[34mdebug[39m [router:coupon-list]: Get All Payment Details.
2020-07-12T10:29:31.193Z |-[32minfo[39m [service:coupon-list]: plan listing.
2020-07-12T10:29:31.193Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,
		                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM COUPONS C
                        INNER JOIN COUPONS_PLAN CP ON CP.COUPON_ID = C.COUPON_ID
                        INNER JOIN PLANS P ON P.PLAN_ID = CP.PLAN_ID
                        WHERE  C.IS_DELETED = false ;'; values=[]
2020-07-12T10:29:31.195Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,\n\t\t                C.IS_ACTIVE, IFNULL(P.NAME,\'\') PLAN_NAME FROM COUPONS C\n                        INNER JOIN COUPONS_PLAN CP ON CP.COUPON_ID = C.COUPON_ID\n                        INNER JOIN PLANS P ON P.PLAN_ID = CP.PLAN_ID\n                        WHERE  C.IS_DELETED = false ;'': 1 record(s); took 2 msec
2020-07-15T06:18:24.189Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-15T06:18:24.194Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesh81@gmail.com
2020-07-15T06:18:24.419Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-15T06:18:31.049Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-15T06:18:31.052Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesh81@gmail.com
2020-07-15T06:18:31.188Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-15T06:18:58.035Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-15T06:18:58.037Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesh81@gmail.com
2020-07-15T06:18:58.125Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-15T06:26:21.419Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-15T06:26:21.421Z |-[32minfo[39m [router:Consultation.js]: patient email address is null
2020-07-15T06:26:21.556Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-15T06:34:20.150Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-15T06:34:20.153Z |-[32minfo[39m [router:Consultation.js]: patient email address is null
2020-07-15T06:34:20.292Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-15T06:36:18.266Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-15T06:36:18.269Z |-[32minfo[39m [router:Consultation.js]: patient email address is tushartyagi223@gmail.com
2020-07-15T06:36:18.396Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-15T06:43:52.410Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-15T06:43:52.412Z |-[32minfo[39m [router:Consultation.js]: patient email address is tushartyagi223@gmail.com
2020-07-15T06:43:52.534Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-15T06:44:16.566Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-15T06:44:16.569Z |-[32minfo[39m [router:Consultation.js]: patient email address is tushartyagi223@gmail.com
2020-07-15T06:44:16.724Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-16T06:07:44.507Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Dr. ManjuNath V
2020-07-16T06:07:44.509Z |-[32minfo[39m [router:Consultation.js]: patient email address is drmanjusharma@gmail.com
2020-07-16T06:07:44.623Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-16T06:07:49.038Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Dr. ManjuNath V
2020-07-16T06:07:49.040Z |-[32minfo[39m [router:Consultation.js]: patient email address is drmanjusharma@gmail.com
2020-07-16T06:07:49.204Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-16T10:51:49.428Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-16T10:51:49.431Z |-[32minfo[39m [router:Consultation.js]: patient email address is vijsub@outlook.com
2020-07-16T10:51:49.591Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-16T10:52:03.604Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-16T10:52:03.607Z |-[32minfo[39m [router:Consultation.js]: patient email address is vijsub@outlook.com
2020-07-16T10:52:03.740Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-16T11:06:41.963Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-16T11:06:41.965Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesh81@gmail.com
2020-07-16T11:06:42.086Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-16T11:06:44.931Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-16T11:06:44.933Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesh81@gmail.com
2020-07-16T11:06:45.099Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-16T12:10:35.850Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-16T12:10:35.854Z |-[32minfo[39m [router:Consultation.js]: patient email address is vijsub@outlook.com
2020-07-16T12:10:36.087Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-16T12:35:12.055Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-16T12:35:12.061Z |-[32minfo[39m [router:Consultation.js]: patient email address is vijsub@outlook.com
2020-07-16T12:35:12.189Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-16T14:12:23.897Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-16T14:12:23.902Z |-[32minfo[39m [router:Consultation.js]: patient email address is vijsub@outlook.com
2020-07-16T14:12:24.130Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T11:21:03.772Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T11:21:03.775Z |-[32minfo[39m [router:Consultation.js]: patient email address is vijsub@outlook.com
2020-07-17T11:21:03.942Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T12:14:20.609Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T12:14:20.614Z |-[32minfo[39m [router:Consultation.js]: patient email address is vijsub@outlook.com
2020-07-17T12:14:20.827Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T14:09:26.707Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T14:09:26.712Z |-[32minfo[39m [router:Consultation.js]: patient email address is vijsub@outlook.com
2020-07-17T14:09:26.949Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T14:11:01.738Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T14:11:01.740Z |-[32minfo[39m [router:Consultation.js]: patient email address is vijsub@outlook.com
2020-07-17T14:11:01.885Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T15:42:18.542Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T15:42:18.544Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesg81@gmail.com
2020-07-17T15:42:18.675Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T15:44:31.967Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T15:44:31.969Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesg81@gmail.com
2020-07-17T15:44:32.131Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T15:59:58.787Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T15:59:58.789Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesg81@gmail.com
2020-07-17T15:59:58.882Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T16:00:37.908Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T16:00:37.910Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesg81@gmail.com
2020-07-17T16:00:38.028Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T16:01:48.272Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T16:01:48.274Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesh81@gmail.com
2020-07-17T16:01:48.429Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T16:05:09.861Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T16:05:09.863Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesh81@gmail.com
2020-07-17T16:05:09.985Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T16:08:37.917Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T16:08:37.920Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesh81@gmail.com
2020-07-17T16:08:38.043Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T16:09:50.150Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T16:09:50.153Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesh81@gmail.com
2020-07-17T16:09:50.318Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T16:11:34.730Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T16:11:34.732Z |-[32minfo[39m [router:Consultation.js]: patient email address is rakesh81@gmail.com
2020-07-17T16:11:34.825Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-17T16:24:15.233Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-17T16:24:15.236Z |-[32minfo[39m [router:Consultation.js]: patient email address is yogi.rsk@gmail.com
2020-07-17T16:24:15.413Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-18T14:31:18.007Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-18T14:31:18.009Z |-[32minfo[39m [router:Consultation.js]: patient email address is varadara394@gmail.com
2020-07-18T14:31:18.132Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2020-07-18T14:31:20.984Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2020-07-18T14:31:20.989Z |-[32minfo[39m [router:Consultation.js]: patient email address is varadara394@gmail.com
2020-07-18T14:31:21.098Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-02-01T05:29:22.333Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 1111111111 and messageData! 'Your login otp is 4528.'
2021-02-01T05:29:22.531Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ09', message: 'No numbers found' }
2021-02-01T05:30:03.189Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7702503636 and messageData! 'Your login otp is 9747.'
2021-02-01T05:30:03.370Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122493266-1', mobile: '917702503636', status: 'SUBMITTED' } ], msgid: '3652122493266123', message: 'message Submitted successfully' }
2021-02-01T05:31:05.245Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7702503636 and messageData! 'Your login otp is 5386.'
2021-02-01T05:31:05.437Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122493903-1', mobile: '917702503636', status: 'SUBMITTED' } ], msgid: '6972122493903441', message: 'message Submitted successfully' }
2021-02-01T05:32:29.183Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7702503636 and messageData! 'Your login otp is 7772.'
2021-02-01T05:32:29.319Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122494565-1', mobile: '917702503636', status: 'SUBMITTED' } ], msgid: '2981122494565169', message: 'message Submitted successfully' }
2021-02-01T05:33:14.102Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7702503636 and messageData! 'Your login otp is 5880.'
2021-02-01T05:33:14.272Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122494982-1', mobile: '917702503636', status: 'SUBMITTED' } ], msgid: '5972122494982676', message: 'message Submitted successfully' }
2021-02-01T05:33:26.279Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 1111111111 and messageData! 'Your login otp is 6246.'
2021-02-01T05:33:26.408Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ09', message: 'No numbers found' }
2021-02-01T05:34:44.419Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 1111111111 and messageData! 'Your login otp is 4369.'
2021-02-01T05:34:44.571Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ09', message: 'No numbers found' }
2021-02-01T05:35:03.053Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7702503636 and messageData! 'Your login otp is 3849.'
2021-02-01T05:35:03.204Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122496063-1', mobile: '917702503636', status: 'SUBMITTED' } ], msgid: '6213122496063273', message: 'message Submitted successfully' }
2021-02-01T09:31:19.865Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 8266.'
2021-02-01T09:31:20.097Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122621845-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '1771122621845317', message: 'message Submitted successfully' }
2021-02-01T09:42:04.967Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 3737.'
2021-02-01T09:42:05.157Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122629030-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '4681122629030846', message: 'message Submitted successfully' }
2021-02-01T10:38:18.455Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 6745.'
2021-02-01T10:38:18.649Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122656460-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '1252122656460554', message: 'message Submitted successfully' }
2021-02-01T10:39:57.207Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 2926.'
2021-02-01T10:39:57.424Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122657345-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '4986122657345649', message: 'message Submitted successfully' }
2021-02-01T10:40:59.059Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 5726.'
2021-02-01T10:40:59.258Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122657892-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '6356122657892692', message: 'message Submitted successfully' }
2021-02-01T12:42:42.998Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 2219.'
2021-02-01T12:42:43.181Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122721626-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '6396122721626785', message: 'message Submitted successfully' }
2021-02-01T12:44:00.333Z |-[32minfo[39m [service:appointment]: addPatient { name: 'Dhanendra', gender: 'Male', age: 26, email: 'dhanendra@gmail.com', address: 'Chennai', dob: '1994-02-25', phoneNo: '9650777225', tzOffset: NaN }
2021-02-01T12:44:00.350Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'slot_duration' of undefined
    at Object.module.exports.addPatient (/Users/dhanendra/NMDS/spot/services/CRAppointments.js:799:56)
    at processTicksAndRejections (node:internal/process/task_queues:93:5)
2021-02-01T12:44:39.737Z |-[32minfo[39m [service:appointment]: addPatient { name: 'Dhanendra', gender: 'Male', age: 26, email: 'dhanendra@gmail.com', address: 'Chennai', dob: '1994-02-25', slot_duration: '12:00', phoneNo: '9650777225', tzOffset: NaN }
2021-02-01T12:44:39.738Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'slot_duration' of undefined
    at Object.module.exports.addPatient (/Users/dhanendra/NMDS/spot/services/CRAppointments.js:799:56)
    at processTicksAndRejections (node:internal/process/task_queues:93:5)
2021-02-01T12:44:48.989Z |-[32minfo[39m [service:appointment]: addPatient { name: 'Dhanendra', gender: 'Male', age: 26, email: 'dhanendra@gmail.com', address: 'Chennai', dob: '1994-02-25', slot_duration: '12:00', phoneNo: '9650777225', tzOffset: NaN }
2021-02-01T12:44:48.993Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'slot_duration' of undefined
    at Object.module.exports.addPatient (/Users/dhanendra/NMDS/spot/services/CRAppointments.js:799:56)
    at processTicksAndRejections (node:internal/process/task_queues:93:5)
2021-02-02T09:29:31.226Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 2919.'
2021-02-02T09:29:32.433Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '122988924-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '3987122988924832', message: 'message Submitted successfully' }
2021-02-02T09:32:58.029Z |-[31merror[39m [service:appointment]: error Error: ER_BAD_FIELD_ERROR: Unknown column 'first_name' in 'field list'
    at Query.Sequence._packetToError (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:329:20)
    at Socket.EventEmitter.emit (node:domain:467:12)
    at addChunk (node:internal/streams/readable:304:12)
    at readableAddChunk (node:internal/streams/readable:279:9)
    at Socket.Readable.push (node:internal/streams/readable:218:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:192:23)
    --------------------
    at Pool.query (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/Pool.js:199:23)
    at node:internal/util:297:30
    at new Promise (<anonymous>)
    at Pool.query (node:internal/util:296:12)
    at Object.module.exports.addProfile (/Users/dhanendra/NMDS/spot/services/CRAppointments.js:957:32)
    at /Users/dhanendra/NMDS/spot/controllers/CRAppointments.js:75:28
    at Layer.handle [as handle_request] (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/route.js:137:13)
    at Route.dispatch (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/layer.js:95:5)
    at /Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:281:22
    at Function.process_params (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:335:12)
    at next (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:275:10)
    at Function.handle (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:174:3)
    at router (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:47:12)
    at Layer.handle [as handle_request] (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:317:13)
    at /Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:335:12)
    at next (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:275:10)
    at /Users/dhanendra/NMDS/spot/controllers/index.js:74:17
    at validCrKiosk (/Users/dhanendra/NMDS/spot/utilities/TokenAuthentication.js:75:9) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: "Unknown column 'first_name' in 'field list'",
  sqlState: '42S22',
  index: 0,
  sql: "INSERT INTO doctor_profile (first_name, last_name, phone_no, gender, age, professional_statement, practicing_from) VALUES('Dhanendra', '9650777225', 'Male', 26, '1994-05-04', 'nathans441@gmail.com', 'Chennai')"
}
2021-02-02T11:24:49.351Z |-[31merror[39m [service:appointment]: error Error: ER_NO_SUCH_TABLE: Table 'devdb.specialization' doesn't exist
    at Query.Sequence._packetToError (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:329:20)
    at Socket.EventEmitter.emit (node:domain:467:12)
    at addChunk (node:internal/streams/readable:304:12)
    at readableAddChunk (node:internal/streams/readable:279:9)
    at Socket.Readable.push (node:internal/streams/readable:218:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:192:23)
    --------------------
    at Pool.query (/Users/dhanendra/NMDS/spot/node_modules/mysql/lib/Pool.js:199:23)
    at node:internal/util:297:30
    at new Promise (<anonymous>)
    at Pool.query (node:internal/util:296:12)
    at Object.module.exports.getProfile (/Users/dhanendra/NMDS/spot/services/CRAppointments.js:973:32)
    at /Users/dhanendra/NMDS/spot/controllers/CRAppointments.js:91:24
    at Layer.handle [as handle_request] (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/route.js:137:13)
    at Route.dispatch (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/layer.js:95:5)
    at /Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:281:22
    at Function.process_params (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:335:12)
    at next (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:275:10)
    at Function.handle (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:174:3)
    at router (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:47:12)
    at Layer.handle [as handle_request] (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:317:13)
    at /Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:335:12)
    at next (/Users/dhanendra/NMDS/spot/node_modules/express/lib/router/index.js:275:10)
    at /Users/dhanendra/NMDS/spot/controllers/index.js:74:17
    at validCrKiosk (/Users/dhanendra/NMDS/spot/utilities/TokenAuthentication.js:75:9) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'devdb.specialization' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "SELECT dp.id, concat(dp.first_name, ', ', dp.last_name) as doctor_name,  dp.professional_statement professional_statement, dp.practicing_from practicing_from, GROUP_CONCAT(s.specialization_name) as specializations, GROUP_CONCAT(q.qualification_name) as qualifications FROM doctor_profile dp, doctor_specializations ds, specialization s, qualification q WHERE dp.id=NULL AND dp.id = ds.doctor_id AND s.id = ds.specialization_id AND q.doctor_id=dp.id GROUP BY dp.id"
}
2021-02-10T10:06:33.919Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 3463.'
2021-02-10T10:06:34.087Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '125871837-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '8815125871837644', message: 'message Submitted successfully' }
2021-02-17T08:33:22.165Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 2151.'
2021-02-17T08:33:22.193Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128404131-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2827128404131916', message: 'message Submitted successfully' }
2021-02-17T09:02:49.131Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 9552.'
2021-02-17T09:02:49.149Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128425125-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '3221128425125352', message: 'message Submitted successfully' }
2021-02-17T09:03:53.885Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your login otp is 5158.'
2021-02-17T09:03:53.904Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128426170-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '4547128426170918', message: 'message Submitted successfully' }
2021-02-17T09:04:36.283Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your login otp is 1766.'
2021-02-17T09:04:36.296Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128426819-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '9778128426819384', message: 'message Submitted successfully' }
2021-02-17T09:15:08.837Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:15:08.838Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:15:08.841Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:15:08.841Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T09:15:08.849Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:15:09.234Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:15:09.234Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:15:09.236Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:15:09.236Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T09:15:09.243Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:15:09.293Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:15:09.293Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:15:09.295Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:15:09.296Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T09:15:09.303Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:15:28.547Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:15:28.547Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:15:28.548Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:15:28.548Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:15:28.550Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:15:28.550Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T09:15:28.558Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:15:28.559Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T09:15:28.564Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:15:28.566Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:15:28.701Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:15:28.701Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:15:28.704Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:15:28.705Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T09:15:28.709Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:15:36.503Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:15:36.504Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:15:36.506Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:15:36.506Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T09:15:36.511Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:15:36.703Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:15:36.703Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:15:36.705Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:15:36.706Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T09:15:36.712Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:15:39.092Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:15:39.092Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:15:39.094Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:15:39.094Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T09:15:39.100Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:15:45.295Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:15:45.295Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:15:45.299Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:15:45.299Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T09:15:45.307Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:16:29.384Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:16:29.384Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:16:29.386Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:16:29.386Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T09:16:29.391Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:16:29.407Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:16:29.407Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:16:29.410Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:16:29.410Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T09:16:29.415Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:16:29.812Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:16:29.813Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:16:29.815Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:16:29.815Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T09:16:29.820Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:16:42.428Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:16:42.429Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:16:42.430Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:16:42.430Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:16:42.432Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T09:16:42.432Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T09:16:42.444Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T09:16:42.445Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T09:16:42.453Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:16:42.454Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:16:43.059Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:16:43.059Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:16:43.061Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T09:16:43.062Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T09:16:43.074Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:22:57.842Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Your login otp is 6764.'
2021-02-17T09:22:57.979Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128443265-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '9955128443265411', message: 'message Submitted successfully' }
2021-02-17T09:23:40.823Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:23:40.823Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:23:40.824Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:23:40.824Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:23:40.825Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:23:40.826Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T09:23:40.830Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:23:40.830Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T09:23:40.835Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:23:40.836Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:23:40.838Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:23:40.838Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:23:40.840Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:23:40.840Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T09:23:40.845Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:23:45.199Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:23:45.199Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:23:45.201Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T09:23:45.201Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T09:23:45.207Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:23:53.231Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:23:53.231Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:23:53.232Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:23:53.233Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:23:53.235Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T09:23:53.235Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T09:23:53.247Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T09:23:53.247Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T09:23:53.255Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:23:53.256Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:23:53.271Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:23:53.271Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:23:53.273Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T09:23:53.274Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T09:23:53.281Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:23:54.387Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:23:54.387Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:23:54.389Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T09:23:54.389Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T09:23:54.396Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T09:23:55.914Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T09:23:55.914Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T09:23:55.916Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T09:23:55.916Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T09:23:55.924Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T10:21:32.327Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 2402.'
2021-02-17T10:21:32.456Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128473892-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '9378128473892188', message: 'message Submitted successfully' }
2021-02-17T10:22:30.115Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 123456789123 and messageData! 'Your login otp is 1960.'
2021-02-17T10:22:30.127Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ09', message: 'No numbers found' }
2021-02-17T10:23:34.702Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 918884406335 and messageData! 'Your login otp is 2932.'
2021-02-17T10:23:34.725Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128474651-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '6346128474651872', message: 'message Submitted successfully' }
2021-02-17T10:24:05.725Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 1769.'
2021-02-17T10:24:05.739Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128474842-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '9744128474842791', message: 'message Submitted successfully' }
2021-02-17T10:26:04.792Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T10:26:04.792Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T10:26:04.794Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T10:26:04.794Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T10:26:04.802Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T10:26:05.201Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T10:26:05.201Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T10:26:05.203Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T10:26:05.203Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T10:26:05.211Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T10:26:05.784Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T10:26:05.784Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T10:26:05.787Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T10:26:05.788Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T10:26:05.793Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T11:06:50.544Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 1784.'
2021-02-17T11:06:50.560Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128491205-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '1781128491205943', message: 'message Submitted successfully' }
2021-02-17T11:07:11.251Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:07:11.251Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:07:11.253Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:07:11.253Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T11:07:11.564Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:07:11.565Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:07:11.566Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:07:11.567Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T11:07:12.231Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:07:12.231Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:07:12.233Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:07:12.233Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:07:13.060Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:07:13.061Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:07:13.062Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:07:13.063Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:11:05.014Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:11:05.015Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:11:05.018Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:11:05.019Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T11:11:05.178Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:11:05.178Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:11:05.180Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:11:05.180Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T11:11:05.939Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:11:05.939Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:11:05.941Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:11:05.941Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:13:10.346Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:10.346Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:10.348Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:10.348Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:13:10.364Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:10.364Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:10.366Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:10.366Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T11:13:11.137Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:11.137Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:11.140Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:11.140Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T11:13:11.570Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:11.570Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:11.572Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:11.572Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:13:17.282Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-02-17T11:13:17.283Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '05:00 PM', checkedIn: false, appointmentDate: '2021-2-17', spotWalkin: 0, profileId: 1882, selectedDocId: 5, orgId: 38, isVideo: 'false', phoneNoOrig: '8884406335', tzOffset: 330 }
2021-02-17T11:13:17.296Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-02-17T11:13:17.304Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-02-17T11:13:17.305Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Paed,\nYour appointment with Demo org at 17-02-2021 05:00 pm is booked for {3}. \nBest Wishes and Warm Regards.'
2021-02-17T11:13:17.323Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128493480-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7572128493480753', message: 'message Submitted successfully' }
2021-02-17T11:13:17.740Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:17.740Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:17.743Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:17.743Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:13:17.953Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:17.953Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:17.955Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:17.956Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:13:18.016Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:18.016Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:18.018Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:18.018Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T11:13:18.234Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:18.234Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:18.236Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:18.236Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T11:13:35.731Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:35.731Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:35.733Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:35.733Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T11:13:35.798Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:35.799Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:35.801Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:35.801Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T11:13:35.958Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:35.959Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:35.960Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:35.961Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:13:37.005Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:37.006Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:37.009Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:37.009Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:13:43.903Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-02-17T11:13:43.904Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '05:30 PM', checkedIn: false, appointmentDate: '2021-2-17', spotWalkin: 0, profileId: 1882, selectedDocId: 1, orgId: 38, isVideo: 'true', phoneNoOrig: '8884406335', tzOffset: 330 }
2021-02-17T11:13:43.915Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-02-17T11:13:44.796Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'Visa', email: undefined, contact: '8884406335' }
2021-02-17T11:13:44.796Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-02-17T11:13:44.797Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-02-17T11:13:44.799Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-02-17T11:13:44.806Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.in
2021-02-17T11:13:44.806Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.in and TemplateData! '{"param0":"Visa","param1":"Video","param2":"17-02-2021 05:30 pm"}'
2021-02-17T11:13:44.807Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Visa","param1":"Video","param2":"17-02-2021 05:30 pm"}' }
2021-02-17T11:13:44.805Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Dear Visa,\nVideo has booked 17-02-2021 05:30 pm Appointment for {3}.'
2021-02-17T11:13:44.836Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128493642-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '5912128493642533', message: 'message Submitted successfully' }
2021-02-17T11:13:44.980Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '31ba0169-51c0-4407-8bf8-b18a954b5581' }, MessageId: '01090177afb2298c-d4ce5ec6-ff0c-4462-8dd4-d845983136ef-000000' }
2021-02-17T11:13:46.368Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:46.368Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:46.370Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:46.370Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T11:13:46.430Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:46.430Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:46.432Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:46.432Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:13:46.889Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:46.889Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:46.891Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:46.891Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T11:13:47.207Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:13:47.207Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:13:47.209Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:13:47.209Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:25:43.400Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:25:43.401Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:25:43.403Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:25:43.403Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T11:25:43.849Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:25:43.849Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:25:43.851Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:25:43.851Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:25:43.936Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:25:43.936Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:25:43.938Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:25:43.938Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T11:25:48.532Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:25:48.533Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:25:48.535Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T11:25:48.535Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:36:03.409Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-02-17', startTime: '17:06 PM', timeType: 'today', addSlot: null, originalUserTypeId: 6, originalOrgUserMappingId: 7, userTypeId: 6, orgUserMappingId: 7, timeInterval: '15', orgId: 38, type: 'Doctor', userId: 8, tzOffset: 330 }
2021-02-17T11:36:03.410Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-02-17T11:36:03.410Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Wednesday
2021-02-17T11:36:03.408Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-02-17T11:36:05.912Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 38, '%b%', '%b%', '%b%', '%b%' ]
2021-02-17T11:36:05.910Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-02-17T11:36:06.234Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 38, '%bh%', '%bh%', '%bh%', '%bh%' ]
2021-02-17T11:36:06.234Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-02-17T11:36:06.864Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 38, '%bhuvan%', '%bhuvan%', '%bhuvan%', '%bhuvan%' ]
2021-02-17T11:36:06.863Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-02-17T11:36:07.429Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 38, '%bhuvanes%', '%bhuvanes%', '%bhuvanes%', '%bhuvanes%' ]
2021-02-17T11:36:07.429Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-02-17T11:36:07.858Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 38, '%bhuvaneswa%', '%bhuvaneswa%', '%bhuvaneswa%', '%bhuvaneswa%' ]
2021-02-17T11:36:07.857Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-02-17T11:36:08.883Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 38, '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%' ]
2021-02-17T11:36:08.882Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-02-17T11:36:39.134Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-02-17', startTime: '17:06 PM', timeType: 'today', addSlot: null, originalUserTypeId: 6, originalOrgUserMappingId: 7, userTypeId: 6, orgUserMappingId: 7, timeInterval: '15', orgId: 38, type: 'Doctor', userId: 8, tzOffset: 330 }
2021-02-17T11:36:39.135Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-02-17T11:36:39.135Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Wednesday
2021-02-17T11:36:39.134Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-02-17T11:36:44.840Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-02-17', startTime: '17:06 PM', timeType: 'today', addSlot: null, originalUserTypeId: 6, originalOrgUserMappingId: 7, userTypeId: 6, orgUserMappingId: 7, timeInterval: '15', orgId: 38, type: 'Doctor', userId: 8, tzOffset: 330 }
2021-02-17T11:36:44.840Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-02-17T11:36:44.841Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Wednesday
2021-02-17T11:36:44.839Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-02-17T11:37:05.878Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-02-17', startTime: '17:07 PM', timeType: 'today', addSlot: null, originalUserTypeId: 6, originalOrgUserMappingId: 7, userTypeId: 6, orgUserMappingId: 7, timeInterval: '15', orgId: 38, type: 'Doctor', userId: 8, tzOffset: 330 }
2021-02-17T11:37:05.879Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-02-17T11:37:05.879Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Wednesday
2021-02-17T11:37:05.878Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-02-17T11:37:10.332Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 38, '%bh%', '%bh%', '%bh%', '%bh%' ]
2021-02-17T11:37:10.331Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-02-17T11:37:11.224Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 38, '%bhuva%', '%bhuva%', '%bhuva%', '%bhuva%' ]
2021-02-17T11:37:11.224Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-02-17T11:37:13.233Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 38, '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%' ]
2021-02-17T11:37:13.233Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-02-17T11:37:15.710Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '05:15 PM', checkedIn: 'false', duration: '', appointmentDate: 'Wed Feb 17 2021 17:07:04 GMT+0530 (India Standard Time)', spotWalkin: '0', patientId: '181', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: 'bhuvaneswari@naturalminds.in', address: '', originalUserTypeId: 6, originalOrgUserMappingId: 7, userTypeId: 6, orgUserMappingId: 7, timeInterval: '15', orgId: 38, type: 'Doctor', userId: 8, tzOffset: 330 }
2021-02-17T11:37:15.709Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-02-17T11:37:15.721Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-02-17T11:37:15.727Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-02-17T11:37:15.731Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.in
2021-02-17T11:37:15.731Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.in and TemplateData! '{"param0":"bhuvaneswari","param1":"OBG","param2":"Demo org","param3":"17-02-2021 05:15 pm"}'
2021-02-17T11:37:15.732Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"bhuvaneswari","param1":"OBG","param2":"Demo org","param3":"17-02-2021 05:15 pm"}' }
2021-02-17T11:37:15.730Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear bhuvaneswari,\nYour appointment with OBG at Demo org is booked for 17-02-2021 05:15 pm. \nBest Wishes and Warm Regards.'
2021-02-17T11:37:15.751Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128507892-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '1657128507892779', message: 'message Submitted successfully' }
2021-02-17T11:37:15.911Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'baecd2ef-13af-4702-a61d-fe4b5d177489' }, MessageId: '01090177afc7b0f1-10eefc8a-f11f-478e-944a-c4759e1fe74e-000000' }
2021-02-17T11:41:10.012Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:41:10.012Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:41:10.017Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T11:41:10.017Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T11:41:10.100Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:41:10.100Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:41:10.103Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T11:41:10.103Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T11:41:11.539Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:41:11.539Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:41:11.542Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T11:41:11.542Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:41:12.712Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:41:12.712Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:41:12.714Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T11:41:12.714Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:41:18.228Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-02-17T11:41:18.229Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '05:15 PM', checkedIn: false, appointmentDate: '2021-2-17', spotWalkin: 0, profileId: 1882, selectedDocId: 4, orgId: 38, isVideo: 'false', phoneNoOrig: '8884406335', tzOffset: 330 }
2021-02-17T11:41:18.241Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-02-17T11:41:18.247Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-02-17T11:41:18.249Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Ophthal,\nYour appointment with Demo org at 17-02-2021 05:15 pm is booked for {3}. \nBest Wishes and Warm Regards.'
2021-02-17T11:41:18.264Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128513539-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '9543128513539896', message: 'message Submitted successfully' }
2021-02-17T11:41:19.051Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:41:19.051Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:41:19.055Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T11:41:19.055Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T11:41:19.333Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:41:19.334Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:41:19.335Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T11:41:19.335Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T11:41:19.421Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:41:19.421Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:41:19.423Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T11:41:19.424Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:41:20.355Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:41:20.355Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:41:20.357Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T11:41:20.357Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:41:55.838Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:41:55.838Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:41:55.840Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T11:41:55.840Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T11:41:55.847Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T11:41:55.990Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:41:55.990Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:41:55.992Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T11:41:55.992Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T11:41:56.001Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T11:41:56.917Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T11:41:56.917Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T11:41:56.919Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T11:41:56.919Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T11:41:56.927Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T11:42:54.549Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-02-17', startTime: '17:12 PM', timeType: 'today', addSlot: null, originalUserTypeId: 3, originalOrgUserMappingId: 4, userTypeId: 3, orgUserMappingId: 4, timeInterval: '30', orgId: 38, type: 'Doctor', userId: 5, tzOffset: 330 }
2021-02-17T11:42:54.550Z |-[34mdebug[39m [service:appointment]: Time Interval is : 30
2021-02-17T11:42:54.550Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Wednesday
2021-02-17T11:42:54.549Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-02-17T11:49:20.364Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-02-18', addSlot: null, originalUserTypeId: 3, originalOrgUserMappingId: 4, userTypeId: 3, orgUserMappingId: 4, timeInterval: '30', orgId: 38, type: 'Doctor', userId: 5, tzOffset: 330 }
2021-02-17T11:49:20.366Z |-[34mdebug[39m [service:appointment]: Time Interval is : 30
2021-02-17T11:49:20.366Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Thursday
2021-02-17T11:49:20.364Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-02-17T12:01:32.021Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Your login otp is 5147.'
2021-02-17T12:01:32.047Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128533875-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '4457128533875244', message: 'message Submitted successfully' }
2021-02-17T12:06:54.901Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 3949.'
2021-02-17T12:06:54.916Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128535659-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '1953128535659692', message: 'message Submitted successfully' }
2021-02-17T12:50:52.736Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 4347.'
2021-02-17T12:50:52.751Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128550089-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '3793128550089841', message: 'message Submitted successfully' }
2021-02-17T12:52:10.414Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T12:52:10.414Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T12:52:10.416Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T12:52:10.416Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T12:52:10.427Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T12:52:10.427Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T12:52:10.429Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T12:52:10.429Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T12:52:10.431Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T12:52:10.431Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T12:52:10.438Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T12:52:10.439Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T12:52:46.657Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T12:52:46.657Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T12:52:46.659Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T12:52:46.659Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T12:52:46.679Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T12:52:46.679Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T12:52:46.682Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T12:52:46.682Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T12:52:46.859Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T12:52:46.859Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T12:52:46.861Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T12:52:46.861Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T12:53:07.039Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T12:53:07.039Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T12:53:07.068Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T12:53:07.068Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T12:53:07.070Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T12:53:07.070Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T12:53:07.084Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T12:53:07.085Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T12:53:07.095Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T12:53:07.104Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T12:53:07.131Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T12:53:07.131Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T12:53:07.135Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-02-17T12:53:07.136Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T12:53:07.143Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:30:37.034Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:30:37.034Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:30:37.038Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:30:37.039Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:30:37.040Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:30:37.040Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:30:37.042Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:30:37.042Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T14:30:37.047Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:30:37.048Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T14:30:37.052Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:30:37.053Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:30:37.053Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T14:30:37.060Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:30:37.061Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:32:00.944Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:32:00.945Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:32:00.947Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:32:00.947Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:32:00.949Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:32:00.953Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:32:00.950Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T14:32:00.954Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:32:00.954Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:32:00.954Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T14:32:00.959Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:32:00.960Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:32:00.960Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T14:32:00.964Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:32:00.965Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:32:03.940Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:32:03.940Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:32:03.942Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:32:03.943Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T14:32:03.957Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:32:05.683Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:32:05.684Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:32:05.686Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:32:05.686Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T14:32:05.690Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:38:46.739Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 7038.'
2021-02-17T14:38:46.755Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128580003-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '2123128580003421', message: 'message Submitted successfully' }
2021-02-17T14:39:23.534Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:39:23.534Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:39:23.538Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:39:23.544Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:39:23.539Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T14:39:23.544Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:39:23.545Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:39:23.547Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:39:23.547Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T14:39:23.553Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:39:23.555Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:39:23.556Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:39:23.559Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:39:23.559Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T14:39:23.565Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:40:56.207Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:40:56.207Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:40:56.209Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:40:56.209Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T14:40:56.219Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'id' of undefined
    at Object.module.exports.getSlot (/usr/nmds/dev/spot/services/CRAppointments.js:1487:51)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2021-02-17T14:44:04.344Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:44:04.344Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:44:04.345Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:44:04.345Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:44:04.347Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:44:04.348Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T14:44:04.352Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:44:04.352Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T14:44:04.359Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:44:04.359Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:44:04.361Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:44:04.361Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T14:44:06.975Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:44:06.975Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:44:06.977Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:44:06.977Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T14:44:15.250Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-02-17T14:44:15.250Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '05:30 PM', checkedIn: false, appointmentDate: '2021-2-18', spotWalkin: 0, profileId: 1866, selectedDocId: 5, orgId: 38, isVideo: 'true', phoneNoOrig: '9650777225', tzOffset: 330 }
2021-02-17T14:44:15.275Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-02-17T14:44:16.254Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: '', email: undefined, contact: '9650777225' }
2021-02-17T14:44:16.254Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-02-17T14:44:16.254Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-02-17T14:44:16.257Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-02-17T14:44:16.263Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.in
2021-02-17T14:44:16.264Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.in and TemplateData! '{"param0":"","param1":"Video","param2":"18-02-2021 05:30 pm"}'
2021-02-17T14:44:16.264Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"","param1":"Video","param2":"18-02-2021 05:30 pm"}' }
2021-02-17T14:44:16.262Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number null and messageData! 'Dear ,\nVideo has booked 18-02-2021 05:30 pm Appointment for {3}.'
2021-02-17T14:44:16.280Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ13', message: 'please enter numbers to send sms' }
2021-02-17T14:44:16.531Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '0f5270b8-1f59-46b2-b263-cccf177a1d1f' }, MessageId: '01090177b072e721-5848fb79-6105-4dcd-9cd7-67c378229c46-000000' }
2021-02-17T14:44:18.701Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:44:18.702Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:44:18.704Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:44:18.704Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T14:44:18.716Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:44:18.716Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:44:18.718Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:44:18.718Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T14:44:18.797Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:44:18.798Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:44:18.800Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:44:18.800Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T14:44:18.834Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:44:18.834Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:44:18.836Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:44:18.837Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T14:47:24.323Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:47:24.323Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:47:24.326Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:47:24.326Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T14:47:24.331Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:47:24.331Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:47:24.333Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:47:24.333Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:47:24.334Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:47:24.334Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T14:47:24.340Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:47:24.340Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T14:47:25.352Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:47:25.352Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:47:25.354Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:47:25.355Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T14:47:26.366Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:47:26.366Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:47:26.368Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:47:26.368Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T14:47:29.337Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-02-17T14:47:29.337Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '11:30 AM', checkedIn: false, appointmentDate: '2021-2-19', spotWalkin: 0, profileId: 1866, selectedDocId: 1, orgId: 38, isVideo: 'false', phoneNoOrig: '9650777225', tzOffset: 330 }
2021-02-17T14:47:29.351Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-02-17T14:47:29.357Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-02-17T14:47:29.358Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Dear doctor jains,\nYour appointment with Demo org at 19-02-2021 11:30 am is booked for {3}. \nBest Wishes and Warm Regards.'
2021-02-17T14:47:29.403Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '128581891-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '2526128581891134', message: 'message Submitted successfully' }
2021-02-17T14:47:29.985Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:47:29.985Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:47:29.987Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:47:29.987Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-17T14:47:30.066Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:47:30.067Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:47:30.069Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:47:30.070Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-02-17T14:47:30.099Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:47:30.099Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:47:30.102Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:47:30.103Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-02-17T14:47:30.109Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-02-17T14:47:30.109Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-02-17T14:47:30.113Z |-[34mdebug[39m [service:appointment]: timeInterval is 30
2021-02-17T14:47:30.113Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Friday
2021-02-20T23:03:11.923Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 2800.'
2021-02-20T23:03:12.101Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '129812562-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '5351129812562351', message: 'message Submitted successfully' }
2021-03-04T10:36:16.061Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-04', startTime: '16:06 PM', timeType: 'today', addSlot: null, originalUserTypeId: 5, originalOrgUserMappingId: 6, userTypeId: 5, orgUserMappingId: 6, timeInterval: '30', orgId: 1, type: 'Doctor', userId: 7, tzOffset: 330 }
2021-03-04T10:36:16.064Z |-[34mdebug[39m [service:appointment]: Time Interval is : 30
2021-03-04T10:36:16.064Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Thursday
2021-03-04T10:36:16.058Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-04T10:36:23.366Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 1, '%d%', '%d%', '%d%', '%d%' ]
2021-03-04T10:36:23.366Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-04T10:36:24.013Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 1, '%dh%', '%dh%', '%dh%', '%dh%' ]
2021-03-04T10:36:24.012Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-04T10:36:28.696Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 1, '%sudharshan%', '%sudharshan%', '%sudharshan%', '%sudharshan%' ]
2021-03-04T10:36:28.696Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-04T10:36:36.966Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '04:30 PM', checkedIn: 'false', duration: '', appointmentDate: 'Thu Mar 04 2021 16:06:16 GMT+0530 (IST)', spotWalkin: '0', patientId: '178', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: 'bhuvaneswari@naturalminds.in', address: '', originalUserTypeId: 5, originalOrgUserMappingId: 6, userTypeId: 5, orgUserMappingId: 6, timeInterval: '30', orgId: 1, type: 'Doctor', userId: 7, tzOffset: 330 }
2021-03-04T10:36:36.965Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-04T10:36:36.973Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-04T10:36:36.977Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-04T10:36:36.982Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.in
2021-03-04T10:36:36.983Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.in and TemplateData! '{"param0":"sudharshan","param1":"Paed","param2":"Demo Org","param3":"04-03-2021 04:30 pm"}'
2021-03-04T10:36:36.983Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"sudharshan","param1":"Paed","param2":"Demo Org","param3":"04-03-2021 04:30 pm"}' }
2021-03-04T10:36:36.979Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sudharshan,\nYour appointment with Paed at Demo Org is booked for 04-03-2021 04:30 pm. \nBest Wishes and Warm Regards.'
2021-03-04T10:36:37.376Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134142540-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '6844134142540872', message: 'message Submitted successfully' }
2021-03-04T10:36:37.500Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '2c9a8821-7bfb-4b3c-87a4-a90e3df2d149' }, MessageId: '01090177fccf903d-c1526e11-9576-4f5d-8a42-302658c74251-000000' }
2021-03-04T10:40:31.120Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Paed
2021-03-04T10:40:31.121Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.in
2021-03-04T10:40:31.386Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-04T10:40:31.387Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendPrescriptionEmail function of AWSSESUtility class  =>  Patient Name : sudharshan , patient Email : bhuvaneswari@naturalminds.in
2021-03-04T12:21:25.766Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 8439.'
2021-03-04T12:21:26.003Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134201167-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '1632134201167972', message: 'message Submitted successfully' }
2021-03-04T14:57:51.100Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 6969.'
2021-03-04T14:57:51.124Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134252804-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '2447134252804257', message: 'message Submitted successfully' }
2021-03-04T15:00:32.543Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 9555.'
2021-03-04T15:00:32.561Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134253610-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '8338134253610262', message: 'message Submitted successfully' }
2021-03-04T16:43:13.039Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 7083.'
2021-03-04T16:43:13.059Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134273813-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '7981134273813166', message: 'message Submitted successfully' }
2021-03-04T17:05:59.547Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 5704.'
2021-03-04T17:05:59.562Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134277500-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2683134277500289', message: 'message Submitted successfully' }
2021-03-04T17:16:39.588Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-04T17:16:39.863Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-04T17:16:40.118Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-04T17:16:40.119Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-04T17:16:40.119Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-04T17:16:40.124Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2021-03-04T17:16:40.124Z |-[31merror[39m [router:plan-list]: Plan List could not be fetched: Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2021-03-04T17:16:40.125Z |-[34mdebug[39m [application-exception]: 
2021-03-04T17:16:40.125Z |-[31merror[39m [router:plan-list]: [object Object]
2021-03-04T17:18:22.645Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2021-03-04T17:18:22.646Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2021-03-04T17:18:22.646Z |-[34mdebug[39m [service:update-payment]: [object Object]
2021-03-04T17:18:22.648Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2021-03-04T17:18:22.649Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2021-03-04T17:18:22.650Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update organisation set is_inactive = 0 where id = ?'; values=[ 151 ]
2021-03-04T17:18:22.651Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update organisation set is_inactive = 0 where id = ?'': undefined record(s); took 1 msec
2021-03-04T17:18:22.651Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update doctor set payment_status = 1 where id = ?'; values=[ '173' ]
2021-03-04T17:18:22.652Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update doctor set payment_status = 1 where id = ?'': undefined record(s); took 1 msec
2021-03-04T17:18:22.653Z |-[34mdebug[39m [service:update-payment]: Activating organization id 151 on successfull online payment.
2021-03-04T17:18:22.654Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id null.
2021-03-04T17:18:22.654Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P
                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ null ]
2021-03-04T17:18:22.656Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P\n                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P\n                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = NULL'
}
2021-03-04T17:18:22.658Z |-[31merror[39m [router:save-payment]: Not able to update payment details: Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P\n                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = NULL'
}
2021-03-04T17:18:22.658Z |-[34mdebug[39m [application-exception]: 
2021-03-04T17:18:22.657Z |-[34mdebug[39m [LIB:db-util]: An error occured while processing transaction: Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P\n                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = NULL'
}
2021-03-04T17:18:22.659Z |-[31merror[39m [router:save-payment]: [object Object]
2021-03-04T17:19:13.604Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-04T17:19:13.852Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-04T17:19:14.122Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-04T17:19:14.123Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-04T17:19:14.123Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-04T17:19:14.126Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2021-03-04T17:19:14.127Z |-[31merror[39m [router:plan-list]: Plan List could not be fetched: Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2021-03-04T17:19:14.128Z |-[34mdebug[39m [application-exception]: 
2021-03-04T17:19:14.128Z |-[31merror[39m [router:plan-list]: [object Object]
2021-03-05T04:20:50.198Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-05T04:20:50.504Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-05T04:20:50.792Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-05T04:20:50.792Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-05T04:20:50.793Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM PLANS P
                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-05T04:20:50.799Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2021-03-05T04:20:50.800Z |-[31merror[39m [router:plan-list]: Plan List could not be fetched: Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM PLANS P\n                        INNER JOIN PLAN_TYPE PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2021-03-05T04:20:50.801Z |-[34mdebug[39m [application-exception]: 
2021-03-05T04:20:50.802Z |-[31merror[39m [router:plan-list]: [object Object]
2021-03-05T04:23:57.188Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2021-03-05T04:23:57.189Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2021-03-05T04:23:57.189Z |-[34mdebug[39m [service:update-payment]: [object Object]
2021-03-05T04:23:57.190Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2021-03-05T04:23:57.191Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2021-03-05T04:23:57.193Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update organisation set is_inactive = 0 where id = ?'; values=[ 153 ]
2021-03-05T04:23:57.195Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update organisation set is_inactive = 0 where id = ?'': undefined record(s); took 2 msec
2021-03-05T04:23:57.195Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update doctor set payment_status = 1 where id = ?'; values=[ '175' ]
2021-03-05T04:23:57.197Z |-[34mdebug[39m [service:update-payment]: Activating organization id 153 on successfull online payment.
2021-03-05T04:23:57.198Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id null.
2021-03-05T04:23:57.196Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update doctor set payment_status = 1 where id = ?'': undefined record(s); took 1 msec
2021-03-05T04:23:57.199Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P
                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ null ]
2021-03-05T04:23:57.201Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P\n                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P\n                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = NULL'
}
2021-03-05T04:23:57.203Z |-[31merror[39m [router:save-payment]: Not able to update payment details: Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P\n                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = NULL'
}
2021-03-05T04:23:57.203Z |-[34mdebug[39m [application-exception]: 
2021-03-05T04:23:57.202Z |-[34mdebug[39m [LIB:db-util]: An error occured while processing transaction: Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.PLANS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.PLANS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM PLANS P\n                            INNER JOIN PLAN_SERVICES PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = NULL'
}
2021-03-05T04:23:57.204Z |-[31merror[39m [router:save-payment]: [object Object]
2021-03-05T04:39:21.496Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-05T04:39:21.798Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-05T04:39:22.057Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-05T04:39:22.058Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-05T04:39:22.059Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-05T04:39:22.064Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 2 record(s); took 5 msec
2021-03-05T04:53:32.900Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-05T04:53:33.161Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-05T04:53:33.407Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-05T04:53:33.407Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-05T04:53:33.409Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-05T04:53:33.413Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 2 record(s); took 4 msec
2021-03-05T04:53:38.205Z |-[34mdebug[39m [router:payment-order-creation]: Generate payment order.
2021-03-05T04:53:38.206Z |-[34mdebug[39m [service:payment-order-creation]: Payment order generation.
2021-03-05T04:53:38.416Z |-[34mdebug[39m [service:payment-order-creation]: Saving Payment order id order_GiqblN8f4sX8YV for org 0
2021-03-05T04:53:38.417Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO RAZOPAY_DETAILS (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 0, 'order_GiqblN8f4sX8YV', null, null, 7788, null, 'ORDER_CREATED', 0, 0 ]
2021-03-05T04:53:38.421Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query ''INSERT INTO RAZOPAY_DETAILS (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.RAZOPAY_DETAILS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.RAZOPAY_DETAILS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "INSERT INTO RAZOPAY_DETAILS (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (0,'order_GiqblN8f4sX8YV',NULL,NULL,7788,NULL,'ORDER_CREATED',0,0)"
}
2021-03-05T04:53:38.422Z |-[31merror[39m [service:payment-order-creation]: Not able to insert data in 'RAZOPAY_DETAILS' table:  Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.RAZOPAY_DETAILS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.RAZOPAY_DETAILS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "INSERT INTO RAZOPAY_DETAILS (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (0,'order_GiqblN8f4sX8YV',NULL,NULL,7788,NULL,'ORDER_CREATED',0,0)"
}
2021-03-05T04:53:38.422Z |-[31merror[39m [router:payment-order-creation]: Order Id not generated: Error: ER_NO_SUCH_TABLE: Table 'nmdsdb.RAZOPAY_DETAILS' doesn't exist
    at Query.Sequence._packetToError (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:47:14)
    at Query.ErrorPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Query.js:79:18)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)
    --------------------
    at Protocol._enqueue (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at PoolConnection.query (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:198:25)
    at /usr/nmds/spot/lib/lib-db.js:27:22
    at Ping.onOperationComplete (/usr/nmds/spot/node_modules/mysql/lib/Pool.js:110:5)
    at Ping.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Ping._callback (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:488:16)
    at Ping.Sequence.end (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)
    at Ping.Sequence.OkPacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/sequences/Sequence.js:92:8)
    at Protocol._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/nmds/spot/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/nmds/spot/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (node:events:378:20)
    at Socket.EventEmitter.emit (node:domain:470:12)
    at addChunk (node:internal/streams/readable:313:12)
    at readableAddChunk (node:internal/streams/readable:288:9)
    at Socket.Readable.push (node:internal/streams/readable:227:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'nmdsdb.RAZOPAY_DETAILS' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "INSERT INTO RAZOPAY_DETAILS (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (0,'order_GiqblN8f4sX8YV',NULL,NULL,7788,NULL,'ORDER_CREATED',0,0)"
}
2021-03-05T04:53:38.423Z |-[34mdebug[39m [application-exception]: 
2021-03-05T04:53:38.424Z |-[34mdebug[39m [service:payment-order-creation]: successfully update the order details
2021-03-05T04:53:38.423Z |-[31merror[39m [router:payment-order-creation]: [object Object]
2021-03-05T05:33:36.663Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-05T05:33:36.962Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-05T05:33:37.240Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-05T05:33:37.241Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-05T05:33:37.242Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-05T05:33:37.248Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 2 record(s); took 6 msec
2021-03-05T05:33:39.924Z |-[34mdebug[39m [router:payment-order-creation]: Generate payment order.
2021-03-05T05:33:39.924Z |-[34mdebug[39m [service:payment-order-creation]: Payment order generation.
2021-03-05T05:33:40.181Z |-[34mdebug[39m [service:payment-order-creation]: Saving Payment order id order_GirI2zf4OUAqvq for org 0
2021-03-05T05:33:40.183Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 0, 'order_GirI2zf4OUAqvq', null, null, 649, null, 'ORDER_CREATED', 0, 0 ]
2021-03-05T05:33:40.189Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 7 msec
2021-03-05T05:33:40.190Z |-[34mdebug[39m [service:payment-order-creation]: successfully update the order details
2021-03-05T05:35:21.784Z |-[34mdebug[39m [router:payment-order-creation]: Generate payment order.
2021-03-05T05:35:21.784Z |-[34mdebug[39m [service:payment-order-creation]: Payment order generation.
2021-03-05T05:35:22.094Z |-[34mdebug[39m [service:payment-order-creation]: Saving Payment order id order_GirJqFRMOJ8wz7 for org 0
2021-03-05T05:35:22.095Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 0, 'order_GirJqFRMOJ8wz7', null, null, 7788, null, 'ORDER_CREATED', 0, 0 ]
2021-03-05T05:35:22.106Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 11 msec
2021-03-05T05:35:22.107Z |-[34mdebug[39m [service:payment-order-creation]: successfully update the order details
2021-03-05T05:35:52.169Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2021-03-05T05:35:52.170Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2021-03-05T05:35:52.170Z |-[34mdebug[39m [service:update-payment]: [object Object]
2021-03-05T05:35:52.171Z |-[34mdebug[39m [service:update-payment]: validating the signature return by razopay
2021-03-05T05:35:52.172Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2021-03-05T05:35:52.172Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2021-03-05T05:35:52.173Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,
                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?'; values=[ 155, 'pay_GirKJ1yiitP32B', '0bbaef234c875026848dffae0a8ac7fe367b19d8e8e2eb4199dcd5eb1f4c656d', 'order_GirJqFRMOJ8wz7' ]
2021-03-05T05:35:52.175Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,\n                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?"': undefined record(s); took 2 msec
2021-03-05T05:35:52.176Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 155, 'order_GirJqFRMOJ8wz7', 'online', 7788, 7788, 'SUCCESS', 0, 0, 'Registration' ]
2021-03-05T05:35:52.177Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 1 msec
2021-03-05T05:35:52.178Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update organisation set is_inactive = 0 where id = ?'; values=[ 155 ]
2021-03-05T05:35:52.179Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update organisation set is_inactive = 0 where id = ?'': undefined record(s); took 1 msec
2021-03-05T05:35:52.180Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update doctor set payment_status = 1 where id = ?'; values=[ '177' ]
2021-03-05T05:35:52.181Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update doctor set payment_status = 1 where id = ?'': undefined record(s); took 1 msec
2021-03-05T05:35:52.181Z |-[34mdebug[39m [service:update-payment]: Activating organization id 155 on successfull online payment.
2021-03-05T05:35:52.182Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 4f5a83ba-24f7-11eb-a980-0275bd679b64.
2021-03-05T05:35:52.182Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P
                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '4f5a83ba-24f7-11eb-a980-0275bd679b64' ]
2021-03-05T05:35:52.188Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P\n                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 2 record(s); took 6 msec
2021-03-05T05:35:52.188Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 155, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-6077-71c8-91ea-a09c6e0a79c9', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-05T05:35:52.188Z, 0 ]
2021-03-05T05:35:52.190Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 2 msec
2021-03-05T05:35:52.190Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 155, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-05T05:35:52.190Z, 0 ]
2021-03-05T05:35:52.191Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2021-03-05T05:35:52.192Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 20 ms
2021-03-05T05:39:34.101Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number undefined and messageData! 'Successfully updated username to adminlch.'
2021-03-05T05:39:34.118Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ13', message: 'please enter numbers to send sms' }
2021-03-05T05:41:13.814Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Successfully updated username to Visalakshi.'
2021-03-05T05:41:13.829Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134397782-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2571134397782147', message: 'message Submitted successfully' }
2021-03-05T06:39:40.836Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 2381.'
2021-03-05T06:39:40.855Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134428667-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '5124134428667461', message: 'message Submitted successfully' }
2021-03-05T15:47:20.897Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 5209.'
2021-03-05T15:47:21.003Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134668350-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '8157134668350714', message: 'message Submitted successfully' }
2021-03-05T15:59:36.944Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 6255.'
2021-03-05T15:59:36.960Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134670975-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '5122134670975128', message: 'message Submitted successfully' }
2021-03-05T16:01:53.307Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 3030.'
2021-03-05T16:01:53.319Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134671616-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '3243134671616852', message: 'message Submitted successfully' }
2021-03-05T16:05:22.303Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 9613.'
2021-03-05T16:05:22.363Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134672351-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '6376134672351897', message: 'message Submitted successfully' }
2021-03-06T05:02:09.384Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 5484.'
2021-03-06T05:02:09.410Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134780660-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '7419134780660464', message: 'message Submitted successfully' }
2021-03-06T05:08:05.658Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-06T05:08:06.443Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-06T05:08:06.443Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-06T05:08:06.444Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-06T05:08:06.446Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 2 record(s); took 2 msec
2021-03-06T05:08:08.921Z |-[34mdebug[39m [router:payment-order-creation]: Generate payment order.
2021-03-06T05:08:08.921Z |-[34mdebug[39m [service:payment-order-creation]: Payment order generation.
2021-03-06T05:08:09.194Z |-[34mdebug[39m [service:payment-order-creation]: Saving Payment order id order_GjFODKbYxOd47y for org 0
2021-03-06T05:08:09.196Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 0, 'order_GjFODKbYxOd47y', null, null, 649, null, 'ORDER_CREATED', 0, 0 ]
2021-03-06T05:08:09.201Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 5 msec
2021-03-06T05:08:09.202Z |-[34mdebug[39m [service:payment-order-creation]: successfully update the order details
2021-03-06T05:08:57.009Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2021-03-06T05:08:57.010Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2021-03-06T05:08:57.011Z |-[34mdebug[39m [service:update-payment]: [object Object]
2021-03-06T05:08:57.011Z |-[34mdebug[39m [service:update-payment]: validating the signature return by razopay
2021-03-06T05:08:57.013Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2021-03-06T05:08:57.014Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2021-03-06T05:08:57.015Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,
                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?'; values=[ 155, 'pay_GjFOzTFHG8B5cn', '7f0ed38bbc8e6761ef90b30cd1c62c478721b68815d3123a0995f8392e1a0c53', 'order_GjFODKbYxOd47y' ]
2021-03-06T05:08:57.018Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,\n                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?"': undefined record(s); took 2 msec
2021-03-06T05:08:57.018Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 155, 'order_GjFODKbYxOd47y', 'online', 649, 649, 'SUCCESS', 0, 0, 'Registration' ]
2021-03-06T05:08:57.019Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 1 msec
2021-03-06T05:08:57.022Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update organisation set is_inactive = 0 where id = ?'; values=[ 155 ]
2021-03-06T05:08:57.042Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update organisation set is_inactive = 0 where id = ?'': undefined record(s); took 20 msec
2021-03-06T05:08:57.043Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update doctor set payment_status = 1 where id = ?'; values=[ '179' ]
2021-03-06T05:08:57.044Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update doctor set payment_status = 1 where id = ?'': undefined record(s); took 1 msec
2021-03-06T05:08:57.045Z |-[34mdebug[39m [service:update-payment]: Activating organization id 155 on successfull online payment.
2021-03-06T05:08:57.046Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 12349f46-0b90-11eb-9571-0275bd679b64.
2021-03-06T05:08:57.046Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P
                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '12349f46-0b90-11eb-9571-0275bd679b64' ]
2021-03-06T05:08:57.049Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P\n                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 1 record(s); took 3 msec
2021-03-06T05:08:57.050Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 155, '12349f46-0b90-11eb-9571-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 0, 'c2adc381-c49b-71c8-91ea-a09c6e0a79c9', false, 2021-04-05T05:08:57.050Z, 0 ]
2021-03-06T05:08:57.051Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2021-03-06T05:08:57.053Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 38 ms
2021-03-06T05:19:45.559Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Your login otp is 6036.'
2021-03-06T05:19:45.688Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134788542-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '8181134788542787', message: 'message Submitted successfully' }
2021-03-06T05:31:00.130Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Your login otp is 3306.'
2021-03-06T05:31:00.147Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134795938-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '7624134795938868', message: 'message Submitted successfully' }
2021-03-06T05:32:58.835Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 9925.'
2021-03-06T05:32:58.852Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134799397-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '6497134799397622', message: 'message Submitted successfully' }
2021-03-06T05:33:01.801Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 1557.'
2021-03-06T05:33:01.815Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134799431-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '5592134799431232', message: 'message Submitted successfully' }
2021-03-06T05:35:23.848Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 1758.'
2021-03-06T05:35:23.860Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134800719-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '8885134800719482', message: 'message Submitted successfully' }
2021-03-06T05:35:26.248Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 9191.'
2021-03-06T05:35:26.277Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134800738-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '2447134800738175', message: 'message Submitted successfully' }
2021-03-06T05:36:44.870Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 1645.'
2021-03-06T05:36:44.888Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134801198-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '9898134801198511', message: 'message Submitted successfully' }
2021-03-06T05:36:47.603Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 4176.'
2021-03-06T05:36:47.619Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134801213-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '5977134801213527', message: 'message Submitted successfully' }
2021-03-06T05:37:28.218Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 1745.'
2021-03-06T05:37:28.231Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134801481-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '7491134801481981', message: 'message Submitted successfully' }
2021-03-06T05:37:29.884Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 1736.'
2021-03-06T05:37:29.896Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134801495-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '8914134801495874', message: 'message Submitted successfully' }
2021-03-06T05:37:47.030Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 1638.'
2021-03-06T05:37:47.042Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134801592-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '7791134801592986', message: 'message Submitted successfully' }
2021-03-06T05:38:47.496Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 2975.'
2021-03-06T05:38:47.512Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134801893-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '9885134801893796', message: 'message Submitted successfully' }
2021-03-06T05:38:49.175Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 5798.'
2021-03-06T05:38:49.188Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134801897-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '9371134801897225', message: 'message Submitted successfully' }
2021-03-06T05:49:07.935Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629697482 and messageData! 'Your login otp is 4790.'
2021-03-06T05:49:07.952Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134807288-1', mobile: '919629697482', status: 'SUBMITTED' } ], msgid: '8615134807288182', message: 'message Submitted successfully' }
2021-03-06T05:49:09.319Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629697482 and messageData! 'Your login otp is 9441.'
2021-03-06T05:49:09.332Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134807296-1', mobile: '919629697482', status: 'SUBMITTED' } ], msgid: '7973134807296373', message: 'message Submitted successfully' }
2021-03-06T05:50:27.219Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397485 and messageData! 'Your login otp is 8293.'
2021-03-06T05:50:27.234Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134807987-1', mobile: '919629397485', status: 'SUBMITTED' } ], msgid: '4673134807987525', message: 'message Submitted successfully' }
2021-03-06T05:50:31.846Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 8671.'
2021-03-06T05:50:31.859Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134808023-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '4274134808023419', message: 'message Submitted successfully' }
2021-03-06T05:50:34.850Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 5702.'
2021-03-06T05:50:34.862Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134808045-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '2563134808045233', message: 'message Submitted successfully' }
2021-03-06T05:53:10.137Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134809359-1', mobile: '919629697482', status: 'SUBMITTED' } ], msgid: '2995134809359762', message: 'message Submitted successfully' }
2021-03-06T05:53:10.124Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629697482 and messageData! 'Your login otp is 3735.'
2021-03-06T05:53:11.500Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629697482 and messageData! 'Your login otp is 6939.'
2021-03-06T05:53:11.512Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134809364-1', mobile: '919629697482', status: 'SUBMITTED' } ], msgid: '5994134809364912', message: 'message Submitted successfully' }
2021-03-06T05:55:27.199Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 3482.'
2021-03-06T05:55:27.218Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134810642-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '3277134810642224', message: 'message Submitted successfully' }
2021-03-06T05:55:28.509Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 4837.'
2021-03-06T05:55:28.524Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134810646-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '7965134810646339', message: 'message Submitted successfully' }
2021-03-06T05:56:05.678Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 8229.'
2021-03-06T05:56:05.690Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134810936-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '9578134810936191', message: 'message Submitted successfully' }
2021-03-06T05:56:07.742Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 9649.'
2021-03-06T05:56:07.754Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134810946-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '4772134810946865', message: 'message Submitted successfully' }
2021-03-06T05:57:36.807Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 4429.'
2021-03-06T05:57:36.819Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134811571-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '3141134811571658', message: 'message Submitted successfully' }
2021-03-06T05:57:37.145Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 2306.'
2021-03-06T05:57:37.159Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134811577-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '3386134811577533', message: 'message Submitted successfully' }
2021-03-06T05:57:38.252Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 5116.'
2021-03-06T05:57:38.265Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134811584-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '2673134811584463', message: 'message Submitted successfully' }
2021-03-06T06:02:16.614Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 5815.'
2021-03-06T06:02:16.632Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134814208-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '9783134814208863', message: 'message Submitted successfully' }
2021-03-06T06:03:39.614Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 7897.'
2021-03-06T06:03:39.628Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134814712-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '8977134814712143', message: 'message Submitted successfully' }
2021-03-06T06:03:46.379Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 2330.'
2021-03-06T06:03:46.392Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134814736-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '4779134814736687', message: 'message Submitted successfully' }
2021-03-06T06:04:03.574Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 3909.'
2021-03-06T06:04:03.591Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134814834-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '7257134814834457', message: 'message Submitted successfully' }
2021-03-06T06:04:37.619Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:04:37.619Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:04:37.624Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:04:37.624Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:04:37.640Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:04:37.640Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:04:37.643Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:04:37.644Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:04:37.645Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:04:37.645Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:04:37.663Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:04:37.663Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:05:08.343Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:05:08.343Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:05:08.345Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:05:08.345Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:05:08.359Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:05:08.359Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:05:08.362Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:05:08.362Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:05:08.382Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:05:08.382Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:05:08.384Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:05:08.385Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:05:10.063Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:05:10.063Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:05:10.065Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:05:10.065Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:06:27.552Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:06:27.552Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:06:27.553Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:06:27.554Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:06:27.576Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:06:27.577Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:06:27.578Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:06:27.578Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:06:27.592Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:06:27.592Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:06:27.595Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:06:27.595Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:06:27.638Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:06:27.638Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:06:27.642Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:06:27.643Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:07:41.515Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:07:41.515Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:07:41.516Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:07:41.516Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:07:41.518Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:07:41.518Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:07:41.531Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:07:41.531Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:07:41.578Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:07:41.578Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:07:41.584Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:07:41.584Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:07:41.625Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:07:41.625Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:07:41.627Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:07:41.627Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:09:50.738Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:09:50.738Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:09:50.740Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:09:50.740Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:09:50.830Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:09:50.831Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:09:50.833Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:09:50.833Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:09:50.871Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:09:50.871Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:09:50.884Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:09:50.884Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:09:50.907Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:09:50.907Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:09:50.912Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:09:50.912Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:10:40.820Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 1950.'
2021-03-06T06:10:40.878Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134817652-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '6472134817652278', message: 'message Submitted successfully' }
2021-03-06T06:12:12.232Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:12:12.233Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:12:12.235Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:12:12.235Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:12:12.250Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:12:12.250Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:12:12.254Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:12:12.254Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:12:12.265Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:12:12.265Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:12:12.270Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:12:12.270Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:12:12.279Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:12:12.280Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:12:12.284Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:12:12.284Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:13:32.449Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:13:32.449Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:13:32.450Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:13:32.451Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:13:32.458Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:13:32.459Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:13:32.460Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:13:32.460Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:13:32.502Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:13:32.503Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:13:32.510Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:13:32.511Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:13:32.512Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:13:32.513Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:13:32.528Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:13:32.528Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:16:20.037Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:16:20.037Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:16:20.039Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:16:20.040Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:16:20.041Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:16:20.041Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:16:20.042Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:16:20.043Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:16:20.049Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:16:20.049Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:16:20.054Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:16:20.055Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:16:21.048Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:16:21.048Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:16:21.050Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:16:21.051Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:16:21.076Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:16:21.077Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:16:21.082Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:16:21.082Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:16:21.090Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:16:21.090Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:16:21.095Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:16:21.100Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:16:21.095Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:16:21.100Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:16:21.104Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:16:21.104Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:17:03.218Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:17:03.219Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:17:03.220Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:17:03.221Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:17:03.246Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:17:03.247Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:17:03.248Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:17:03.249Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:17:03.449Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:17:03.450Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:17:03.451Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:17:03.451Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:17:03.482Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:17:03.482Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:17:03.490Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:17:03.490Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:18:45.400Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Your login otp is 4621.'
2021-03-06T06:18:45.535Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134820415-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '9588134820415477', message: 'message Submitted successfully' }
2021-03-06T06:19:22.545Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Your login otp is 1126.'
2021-03-06T06:19:22.562Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134820596-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '5283134820596138', message: 'message Submitted successfully' }
2021-03-06T06:22:22.928Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Your login otp is 7651.'
2021-03-06T06:22:22.940Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134822630-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '7269134822630916', message: 'message Submitted successfully' }
2021-03-06T06:27:33.673Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Your login otp is 9820.'
2021-03-06T06:27:33.746Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134824530-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '9426134824530452', message: 'message Submitted successfully' }
2021-03-06T06:47:09.610Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:47:09.610Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:47:09.611Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:47:09.611Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:47:09.613Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:47:09.613Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:47:09.618Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:47:09.619Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:47:09.626Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:47:09.626Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:47:09.628Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:47:09.628Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:48:08.218Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:48:08.218Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:48:08.222Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:48:08.223Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T06:48:08.228Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:48:08.228Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:48:08.231Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:48:08.231Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T06:48:08.239Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T06:48:08.239Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T06:48:08.243Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T06:48:08.243Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T06:48:09.982Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 5725.'
2021-03-06T06:48:10.041Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134833856-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '2112134833856847', message: 'message Submitted successfully' }
2021-03-06T06:48:21.617Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Your login otp is 4410.'
2021-03-06T06:48:21.628Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134833936-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '1416134833936559', message: 'message Submitted successfully' }
2021-03-06T06:56:23.031Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Your login otp is 4303.'
2021-03-06T06:56:23.046Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134837013-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '7428134837013694', message: 'message Submitted successfully' }
2021-03-06T08:04:46.859Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Your login otp is 1864.'
2021-03-06T08:04:46.879Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134861867-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '2954134861867295', message: 'message Submitted successfully' }
2021-03-06T11:35:01.521Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629397482 and messageData! 'Your login otp is 5077.'
2021-03-06T11:35:01.677Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134949253-1', mobile: '919629397482', status: 'SUBMITTED' } ], msgid: '8498134949253931', message: 'message Submitted successfully' }
2021-03-06T12:53:47.159Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 1095.'
2021-03-06T12:53:47.183Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134976918-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '8996134976918242', message: 'message Submitted successfully' }
2021-03-06T12:54:54.618Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T12:54:54.619Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T12:54:54.623Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T12:54:54.623Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T12:54:54.636Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T12:54:54.625Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T12:54:54.625Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T12:54:54.636Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T12:54:54.638Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T12:54:54.639Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T12:54:54.652Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T12:54:54.652Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T12:54:57.535Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T12:54:57.536Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T12:54:57.537Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T12:54:57.538Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T12:55:04.903Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-06T12:55:04.904Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '06:30 PM', checkedIn: false, appointmentDate: '2021-3-6', spotWalkin: 0, profileId: 32794, selectedDocId: 177, orgId: 155, isVideo: 'false', phoneNoOrig: '8884406335', tzOffset: 330 }
2021-03-06T12:55:04.936Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-06T12:55:04.944Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T12:55:04.946Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 06-03-2021 06:30 pm. \nBest Wishes and Warm Regards.'
2021-03-06T12:55:04.963Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '134977408-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '8276134977408956', message: 'message Submitted successfully' }
2021-03-06T12:55:05.345Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T12:55:05.346Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T12:55:05.350Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T12:55:05.350Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T12:55:05.431Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T12:55:05.431Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T12:55:05.435Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T12:55:05.435Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T12:55:05.438Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T12:55:05.438Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T12:55:05.440Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T12:55:05.440Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T12:55:05.456Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T12:55:05.456Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T12:55:05.473Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T12:55:05.473Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T12:59:26.654Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Visalakshi
2021-03-06T12:59:26.655Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-06T12:59:26.952Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-06T16:22:24.046Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T16:22:24.048Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T16:22:24.051Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T16:22:24.052Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T16:22:26.735Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T16:22:26.736Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T16:22:26.738Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T16:22:26.739Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T16:22:27.815Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T16:22:27.815Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T16:22:27.818Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T16:22:27.818Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T16:22:35.503Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-06T16:22:35.511Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T16:22:35.518Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-06T16:22:35.519Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Kasturi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 09:52 pm"}'
2021-03-06T16:22:35.519Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Kasturi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 09:52 pm"}' }
2021-03-06T16:22:35.514Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8951059668 and messageData! 'Dear Kasturi,\nYour appointment with Visalakshi at Life care Hospital is booked for 06-03-2021 09:52 pm. \nBest Wishes and Warm Regards.'
2021-03-06T16:22:35.554Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135034194-1', mobile: '918951059668', status: 'SUBMITTED' } ], msgid: '4567135034194775', message: 'message Submitted successfully' }
2021-03-06T16:22:35.745Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '3060ec84-c12b-406c-8051-6c95a2532231' }, MessageId: '0109017808590730-0715bc06-d984-4b4f-8bc3-d6a849b1c7ad-000000' }
2021-03-06T16:22:42.259Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8951059668 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 06-03-2021 09:52 pm.'
2021-03-06T16:22:42.275Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135034217-1', mobile: '918951059668', status: 'SUBMITTED' } ], msgid: '5738135034217911', message: 'message Submitted successfully' }
2021-03-06T16:22:55.437Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T16:22:55.437Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T16:22:55.439Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T16:22:55.440Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T16:22:56.417Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T16:22:56.417Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T16:22:56.419Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T16:22:56.419Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T16:22:58.299Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body [Object: null prototype] { checkedIn: 'false', spotWalkin: '0', patientId: '33642', isVideo: 'true', consultationAmount: '100', preferredTime: '09:00 AM', duration: '', appointmentDate: '2021-3-8', checkedInTime: '', selectedDocUserMapping: '', selectedDocId: '', email: '', address: '', originalUserTypeId: 177, originalOrgUserMappingId: 514, userTypeId: 177, orgUserMappingId: 514, timeInterval: '15', orgId: 155, type: 'Doctor', userId: 557, tzOffset: 330 }
2021-03-06T16:22:58.298Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-06T16:22:58.305Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-06T16:22:58.315Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Razorpay Account could not be found for the Organisation!
2021-03-06T16:22:58.315Z |-[31merror[39m [service:appointment]: Error Occured : { status: false, Message: 'Razorpay Account could not be found for the Organisation!' }
2021-03-06T16:22:58.316Z |-[32minfo[39m [service:appointment]: Payment Link failed. Appointment not booked!
2021-03-06T16:22:58.316Z |-[31merror[39m [service:appointment]: error { status: false, Message: 'Payment Link failed. Appointment not booked!' }
2021-03-06T16:22:58.318Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-06T16:22:58.327Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : getvisa@gmail.com
2021-03-06T16:22:58.327Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Visalakshi","param1":"Kasturi","param2":"Video","param3":"08-03-2021 09:00 am"}'
2021-03-06T16:22:58.328Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Visalakshi","param1":"Kasturi","param2":"Video","param3":"08-03-2021 09:00 am"}' }
2021-03-06T16:22:58.325Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nKasturi has booked Video Appointment for 08-03-2021 09:00 am.'
2021-03-06T16:22:58.341Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135034246-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7128135034246792', message: 'message Submitted successfully' }
2021-03-06T16:22:58.489Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'd4a23af5-0b0e-42b7-9dd7-4e4e9672a42f' }, MessageId: '0109017808596030-78980462-b8d9-4947-9230-6ce912ce78e2-000000' }
2021-03-06T16:22:58.711Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T16:22:58.711Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T16:22:58.713Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T16:22:58.714Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T16:23:37.067Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8951059668 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 08-03-2021 09:00 am.'
2021-03-06T16:23:37.084Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135034350-1', mobile: '918951059668', status: 'SUBMITTED' } ], msgid: '4263135034350379', message: 'message Submitted successfully' }
2021-03-06T16:23:45.460Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T16:23:45.461Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T16:23:45.462Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T16:23:45.463Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T16:23:46.447Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T16:23:46.447Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T16:23:46.449Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T16:23:46.449Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T16:23:48.027Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body [Object: null prototype] { checkedIn: 'false', spotWalkin: '0', patientId: '33642', isVideo: 'false', consultationAmount: '100', preferredTime: '09:00 AM', duration: '', appointmentDate: '2021-3-8', checkedInTime: '', selectedDocUserMapping: '', selectedDocId: '', email: '', address: '', originalUserTypeId: 177, originalOrgUserMappingId: 514, userTypeId: 177, orgUserMappingId: 514, timeInterval: '15', orgId: 155, type: 'Doctor', userId: 557, tzOffset: 330 }
2021-03-06T16:23:48.027Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-06T16:23:48.033Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-06T16:23:48.040Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T16:23:48.042Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8951059668 and messageData! 'Dear Kasturi,\nYour appointment with Visalakshi at Life care Hospital is booked for 08-03-2021 09:00 am. \nBest Wishes and Warm Regards.'
2021-03-06T16:23:48.055Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135034396-1', mobile: '918951059668', status: 'SUBMITTED' } ], msgid: '9761135034396543', message: 'message Submitted successfully' }
2021-03-06T16:23:48.498Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T16:23:48.498Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T16:23:48.501Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T16:23:48.501Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:18:02.535Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:18:02.535Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:18:02.538Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:18:02.546Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:18:02.538Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T18:18:02.546Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:18:02.549Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:18:02.549Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:18:02.586Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:18:02.586Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:18:02.588Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:18:02.588Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:24:22.016Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:24:22.016Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:24:22.018Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:24:22.018Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:24:22.060Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:24:22.060Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:24:22.062Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:24:22.062Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:24:22.072Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:24:22.072Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:24:22.074Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:24:22.074Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T18:24:26.944Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:24:26.945Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:24:26.946Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:24:26.946Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:29:00.800Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:29:00.800Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:29:00.803Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:29:00.811Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:29:00.803Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:29:00.811Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:29:00.812Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:29:00.813Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T18:29:00.846Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:29:00.846Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:29:00.848Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:29:00.848Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:29:35.269Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:29:35.269Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:29:35.271Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:29:35.272Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T18:29:35.318Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:29:35.318Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:29:35.322Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:29:35.329Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:29:35.322Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:29:35.329Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:29:35.332Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:29:35.332Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:29:37.226Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:29:37.227Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:29:37.228Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:29:37.229Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:29:41.101Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-06T18:29:41.102Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '09:15 AM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32794, selectedDocId: 177, orgId: 155, isVideo: 'false', phoneNoOrig: '8884406335', tzOffset: 330 }
2021-03-06T18:29:41.124Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-06T18:29:41.134Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T18:29:41.140Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 08-03-2021 09:15 am. \nBest Wishes and Warm Regards.'
2021-03-06T18:29:41.163Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135047326-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2824135047326985', message: 'message Submitted successfully' }
2021-03-06T18:29:41.365Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:29:41.365Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:29:41.368Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:29:41.368Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Saturday
2021-03-06T18:29:41.407Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:29:41.407Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:29:41.418Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:29:41.419Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:29:41.437Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:29:41.438Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:29:41.442Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:29:41.443Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:29:41.445Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:29:41.446Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:29:41.452Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:29:41.452Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:30:01.936Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 08-03-2021 09:15 am.'
2021-03-06T18:30:01.950Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135047361-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '8365135047361275', message: 'message Submitted successfully' }
2021-03-06T18:30:23.054Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:30:23.054Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:30:23.056Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:30:23.057Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:30:23.081Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:30:23.082Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:30:23.083Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:30:23.084Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-06T18:30:23.093Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:30:23.093Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:30:23.095Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:30:23.096Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:30:24.443Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:30:24.443Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:30:24.446Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:30:24.446Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:30:29.544Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-06T18:30:29.544Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '09:15 AM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32794, selectedDocId: 177, orgId: 155, isVideo: 'false', phoneNoOrig: '8884406335', tzOffset: 330 }
2021-03-06T18:30:29.562Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-06T18:30:29.575Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T18:30:29.576Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 08-03-2021 09:15 am. \nBest Wishes and Warm Regards.'
2021-03-06T18:30:29.589Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135047389-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '4944135047389621', message: 'message Submitted successfully' }
2021-03-06T18:30:29.815Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:30:29.816Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:30:29.818Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:30:29.819Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:30:29.827Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:30:29.828Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:30:29.830Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:30:29.830Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:30:29.864Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:30:29.864Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:30:29.873Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:30:29.873Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:30:29.890Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:30:29.890Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:30:29.897Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:30:29.897Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-06T18:30:34.436Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:30:34.436Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:30:34.438Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:30:34.439Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:30:37.770Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-06T18:30:37.770Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '09:45 AM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32794, selectedDocId: 177, orgId: 155, id: 1902, appointmentId: 1902, isVideo: 'false', phoneNoOrig: '8884406335', tzOffset: 330 }
2021-03-06T18:30:37.792Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1902, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: '09:15 AM', checked_in_time: '00:00:29', created_at: 2021-03-06T18:30:29.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T09:15:00.000Z, end_time: 2021-03-08T09:29:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-06T18:30:37.794Z |-[32minfo[39m [service:appointment]: In update appointment 1902
2021-03-06T18:30:37.811Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 08-03-2021 09:45 am. \nBest Wishes and Warm Regards.'
2021-03-06T18:30:37.814Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nVaishnavi has booked In Person Appointment for 08-03-2021 09:45 am.'
2021-03-06T18:30:37.831Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135047398-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '6667135047398184', message: 'message Submitted successfully' }
2021-03-06T18:30:37.834Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135047397-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '1549135047397234', message: 'message Submitted successfully' }
2021-03-06T18:30:38.047Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:30:38.048Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:30:38.052Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:30:38.052Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:33:04.494Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 08-03-2021 09:45 am.'
2021-03-06T18:33:04.507Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135047489-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2953135047489494', message: 'message Submitted successfully' }
2021-03-06T18:33:06.265Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:33:06.265Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:33:06.268Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:33:06.277Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:33:06.268Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:33:06.277Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:33:06.279Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:33:06.279Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:33:06.293Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:33:06.293Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:33:06.296Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:33:06.297Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-06T18:33:07.830Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:33:07.830Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:33:07.832Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:33:07.832Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:33:13.462Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-06T18:33:13.463Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '09:15 AM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32794, selectedDocId: 177, orgId: 155, isVideo: 'true', phoneNoOrig: '8884406335', tzOffset: 330 }
2021-03-06T18:33:13.479Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-06T18:33:13.488Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: No Tele setting enabled for Doctor!
2021-03-06T18:33:13.492Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-06T18:33:13.501Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : getvisa@gmail.com
2021-03-06T18:33:13.501Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Visalakshi","param1":"Vaishnavi","param2":"Video","param3":"08-03-2021 09:15 am"}'
2021-03-06T18:33:13.502Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Visalakshi","param1":"Vaishnavi","param2":"Video","param3":"08-03-2021 09:15 am"}' }
2021-03-06T18:33:13.498Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 08-03-2021 09:15 am. \nBest Wishes and Warm Regards.'
2021-03-06T18:33:13.500Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nVaishnavi has booked Video Appointment for 08-03-2021 09:15 am.'
2021-03-06T18:33:13.523Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135047495-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2793135047495663', message: 'message Submitted successfully' }
2021-03-06T18:33:13.525Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135047494-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '5916135047494578', message: 'message Submitted successfully' }
2021-03-06T18:33:13.711Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'b0429f87-faa8-454d-8840-8944c5c62478' }, MessageId: '0109017808d0a03c-7d91873e-27e8-4f4b-9cc8-fa12389fbe79-000000' }
2021-03-06T18:33:20.346Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:33:20.346Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:33:20.348Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:33:20.348Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-06T18:33:20.390Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:33:20.394Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:33:20.396Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:33:20.408Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:33:20.398Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:33:20.409Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:33:20.419Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:33:20.420Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:33:20.428Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:33:20.428Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:33:20.435Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:33:20.435Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:34:50.135Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 08-03-2021 09:15 am.'
2021-03-06T18:34:50.152Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135047560-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '4127135047560573', message: 'message Submitted successfully' }
2021-03-06T18:36:34.907Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:36:34.907Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:36:34.908Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:36:34.909Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:36:34.956Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:36:34.956Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:36:34.960Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:36:34.965Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:36:34.960Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-06T18:36:34.965Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:36:34.967Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:36:34.968Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:38:55.338Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:38:55.338Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:38:55.339Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:38:55.340Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:38:55.379Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:38:55.379Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:38:55.380Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:38:55.381Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:38:55.392Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:38:55.393Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:38:55.395Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:38:55.395Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-06T18:38:56.709Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:38:56.709Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:38:56.710Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:38:56.711Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:39:00.744Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-06T18:39:00.744Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '09:15 AM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32794, selectedDocId: 177, orgId: 155, isVideo: 'false', phoneNoOrig: '8884406335', tzOffset: 330 }
2021-03-06T18:39:00.758Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-06T18:39:00.765Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T18:39:00.766Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 08-03-2021 09:15 am. \nBest Wishes and Warm Regards.'
2021-03-06T18:39:00.779Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135047745-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '5875135047745573', message: 'message Submitted successfully' }
2021-03-06T18:39:00.995Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:39:00.995Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:39:00.996Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:39:00.996Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:39:01.055Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:39:01.055Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:39:01.058Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:39:01.058Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:39:01.066Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:39:01.067Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:39:01.069Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:39:01.069Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:39:01.070Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:39:01.070Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:39:01.077Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:39:01.077Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-06T18:42:51.633Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:42:51.633Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:42:51.635Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:42:51.636Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:42:51.648Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:42:51.648Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:42:51.653Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:42:51.663Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:42:51.653Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:42:51.664Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:42:51.669Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:42:51.669Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-06T18:48:03.560Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:48:03.561Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:48:03.562Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:48:03.563Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T18:48:05.478Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:48:05.479Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:48:05.481Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:48:05.481Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:48:07.507Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body [Object: null prototype] { checkedIn: 'false', spotWalkin: '0', patientId: '33641', isVideo: 'false', consultationAmount: '100', preferredTime: '09:30 AM', duration: '', appointmentDate: '2021-3-8', checkedInTime: '', selectedDocUserMapping: '', selectedDocId: '', email: '', address: '', originalUserTypeId: 177, originalOrgUserMappingId: 514, userTypeId: 177, orgUserMappingId: 514, timeInterval: '15', orgId: 155, type: 'Doctor', userId: 557, tzOffset: 330 }
2021-03-06T18:48:07.507Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-06T18:48:07.515Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1904, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: '09:15 AM', checked_in_time: '00:09:00', created_at: 2021-03-06T18:39:00.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T09:15:00.000Z, end_time: 2021-03-08T09:29:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-06T18:48:07.525Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T18:48:07.528Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 08-03-2021 09:30 am. \nBest Wishes and Warm Regards.'
2021-03-06T18:48:07.544Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048266-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '5861135048266492', message: 'message Submitted successfully' }
2021-03-06T18:48:07.743Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T18:48:07.744Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T18:48:07.749Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T18:48:07.749Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T18:48:20.255Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1897, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: '06:30 PM', checked_in_time: '18:25:52', created_at: 2021-03-06T12:55:04.000Z, checked_in: 1, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T18:30:00.000Z, end_time: 2021-03-06T18:44:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-06T18:48:20.262Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T18:48:20.265Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-06T18:48:20.266Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 12:18 pm"}'
2021-03-06T18:48:20.266Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 12:18 pm"}' }
2021-03-06T18:48:20.264Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 06-03-2021 12:18 pm. \nBest Wishes and Warm Regards.'
2021-03-06T18:48:20.284Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048274-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7479135048274691', message: 'message Submitted successfully' }
2021-03-06T18:48:20.401Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'bd8844e3-f3f7-44be-a85b-f8e5e265ea20' }, MessageId: '0109017808de7646-1ee2f54a-62ee-4c36-a2b1-98aff4bae89c-000000' }
2021-03-06T18:49:42.254Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Need an appointment with Visalakshi? Please click on https://www.naturalminds.in/appointment/Life%20care%20Hospital/Visalakshi to book your appointment now!'
2021-03-06T18:49:42.267Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048366-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7463135048366287', message: 'message Submitted successfully' }
2021-03-06T18:50:05.086Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1897, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: '06:30 PM', checked_in_time: '18:25:52', created_at: 2021-03-06T12:55:04.000Z, checked_in: 1, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T18:30:00.000Z, end_time: 2021-03-06T18:44:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1906, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: 'SpotWalkin', checked_in_time: '00:18:20', created_at: 2021-03-06T18:48:20.000Z, checked_in: 0, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T12:18:00.000Z, end_time: 2021-03-06T12:32:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-06T18:50:05.093Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T18:50:05.096Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-06T18:50:05.097Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 12:20 pm"}'
2021-03-06T18:50:05.097Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 12:20 pm"}' }
2021-03-06T18:50:05.095Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 06-03-2021 12:20 pm. \nBest Wishes and Warm Regards.'
2021-03-06T18:50:05.113Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048374-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '3899135048374363', message: 'message Submitted successfully' }
2021-03-06T18:50:05.291Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'fd741fa7-2ddf-4c3e-8903-aaf8872386a7' }, MessageId: '0109017808e00ff0-874cd7bd-8aa6-4edf-91b2-192ca37f08bd-000000' }
2021-03-06T18:55:47.320Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1897, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: '06:30 PM', checked_in_time: '18:25:52', created_at: 2021-03-06T12:55:04.000Z, checked_in: 1, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T18:30:00.000Z, end_time: 2021-03-06T18:44:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1906, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: 'SpotWalkin', checked_in_time: '00:18:20', created_at: 2021-03-06T18:48:20.000Z, checked_in: 0, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T12:18:00.000Z, end_time: 2021-03-06T12:32:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1907, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: 'SpotWalkin', checked_in_time: '00:20:05', created_at: 2021-03-06T18:50:05.000Z, checked_in: 0, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T12:20:00.000Z, end_time: 2021-03-06T12:34:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-06T18:55:47.330Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T18:55:47.333Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-06T18:55:47.333Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 12:25 pm"}'
2021-03-06T18:55:47.334Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 12:25 pm"}' }
2021-03-06T18:55:47.332Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 06-03-2021 12:25 pm. \nBest Wishes and Warm Regards.'
2021-03-06T18:55:47.451Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '9548c66f-46b0-4b88-9beb-118dc8afe537' }, MessageId: '0109017808e548a0-0748167d-bc57-4369-8857-477fb95d315f-000000' }
2021-03-06T18:55:47.472Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048570-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '6838135048570582', message: 'message Submitted successfully' }
2021-03-06T18:56:38.984Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1897, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: '06:30 PM', checked_in_time: '18:25:52', created_at: 2021-03-06T12:55:04.000Z, checked_in: 1, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T18:30:00.000Z, end_time: 2021-03-06T18:44:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1906, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: 'SpotWalkin', checked_in_time: '00:18:20', created_at: 2021-03-06T18:48:20.000Z, checked_in: 0, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T12:18:00.000Z, end_time: 2021-03-06T12:32:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1907, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: 'SpotWalkin', checked_in_time: '00:20:05', created_at: 2021-03-06T18:50:05.000Z, checked_in: 0, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T12:20:00.000Z, end_time: 2021-03-06T12:34:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1908, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: 'SpotWalkin', checked_in_time: '00:25:47', created_at: 2021-03-06T18:55:47.000Z, checked_in: 0, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T12:25:00.000Z, end_time: 2021-03-06T12:39:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-06T18:56:38.993Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Razorpay Account could not be found for the Organisation!
2021-03-06T18:56:38.994Z |-[31merror[39m [service:appointment]: Error Occured : { status: false, Message: 'Razorpay Account could not be found for the Organisation!' }
2021-03-06T18:56:38.994Z |-[32minfo[39m [service:appointment]: Payment Link failed. Appointment not booked!
2021-03-06T18:56:38.996Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-06T18:56:39.005Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : getvisa@gmail.com
2021-03-06T18:56:39.005Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Visalakshi","param1":"Vaishnavi","param2":"Video","param3":"06-03-2021 12:26 pm"}'
2021-03-06T18:56:39.006Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Visalakshi","param1":"Vaishnavi","param2":"Video","param3":"06-03-2021 12:26 pm"}' }
2021-03-06T18:56:39.004Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nVaishnavi has booked Video Appointment for 06-03-2021 12:26 pm.'
2021-03-06T18:56:39.019Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048598-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2165135048598547', message: 'message Submitted successfully' }
2021-03-06T18:56:39.168Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'c2fc504d-6a0d-4cfa-97fd-2bf943553ca4' }, MessageId: '0109017808e6127c-1a629a81-a6d4-4aae-a922-f29eaa52e319-000000' }
2021-03-06T18:59:18.491Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1897, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: '06:30 PM', checked_in_time: '18:25:52', created_at: 2021-03-06T12:55:04.000Z, checked_in: 1, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T18:30:00.000Z, end_time: 2021-03-06T18:44:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1906, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: 'SpotWalkin', checked_in_time: '00:18:20', created_at: 2021-03-06T18:48:20.000Z, checked_in: 0, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T12:18:00.000Z, end_time: 2021-03-06T12:32:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1907, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: 'SpotWalkin', checked_in_time: '00:20:05', created_at: 2021-03-06T18:50:05.000Z, checked_in: 0, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T12:20:00.000Z, end_time: 2021-03-06T12:34:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1908, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: 'SpotWalkin', checked_in_time: '00:25:47', created_at: 2021-03-06T18:55:47.000Z, checked_in: 0, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T12:25:00.000Z, end_time: 2021-03-06T12:39:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1909, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: 'SpotTeleConsultation', checked_in_time: '00:26:38', created_at: 2021-03-06T18:56:38.000Z, checked_in: 0, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T12:26:00.000Z, end_time: 2021-03-06T12:40:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-06T18:59:18.502Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Razorpay Account could not be found for the Organisation!
2021-03-06T18:59:18.503Z |-[31merror[39m [service:appointment]: Error Occured : { status: false, Message: 'Razorpay Account could not be found for the Organisation!' }
2021-03-06T18:59:18.503Z |-[32minfo[39m [service:appointment]: Payment Link failed. Appointment not booked!
2021-03-06T18:59:18.508Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-06T18:59:18.517Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : getvisa@gmail.com
2021-03-06T18:59:18.517Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Visalakshi","param1":"Vaishnavi","param2":"Video","param3":"06-03-2021 12:29 pm"}'
2021-03-06T18:59:18.518Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Visalakshi","param1":"Vaishnavi","param2":"Video","param3":"06-03-2021 12:29 pm"}' }
2021-03-06T18:59:18.515Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nVaishnavi has booked Video Appointment for 06-03-2021 12:29 pm.'
2021-03-06T18:59:18.533Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048710-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '5937135048710358', message: 'message Submitted successfully' }
2021-03-06T18:59:18.611Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '47be7bb6-4f54-4067-bf54-2b300712bc90' }, MessageId: '0109017808e88182-41314a28-5eb5-4eee-bf9d-d6faa2a224a9-000000' }
2021-03-06T19:03:33.184Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:03:33.185Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:03:33.186Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:03:33.186Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T19:03:36.500Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-06T19:03:36.501Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '09:45 AM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32794, selectedDocId: 177, orgId: 155, id: 1904, appointmentId: 1904, isVideo: 'false', phoneNoOrig: '8884406335', tzOffset: 330 }
2021-03-06T19:03:36.518Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1904, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: '09:15 AM', checked_in_time: '00:09:00', created_at: 2021-03-06T18:39:00.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T09:15:00.000Z, end_time: 2021-03-08T09:29:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1905, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: '09:30 AM', checked_in_time: '00:18:07', created_at: 2021-03-06T18:48:07.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T09:30:00.000Z, end_time: 2021-03-08T09:44:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-06T19:03:36.521Z |-[32minfo[39m [service:appointment]: In update appointment 1904
2021-03-06T19:03:36.537Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 08-03-2021 09:45 am. \nBest Wishes and Warm Regards.'
2021-03-06T19:03:36.538Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nVaishnavi has booked In Person Appointment for 08-03-2021 09:45 am.'
2021-03-06T19:03:36.559Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048873-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '8161135048873448', message: 'message Submitted successfully' }
2021-03-06T19:03:36.561Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048872-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7598135048872284', message: 'message Submitted successfully' }
2021-03-06T19:03:36.785Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:03:36.786Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:03:36.787Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:03:36.788Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T19:03:57.307Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 08-03-2021 09:45 am.'
2021-03-06T19:03:57.320Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048885-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7661135048885637', message: 'message Submitted successfully' }
2021-03-06T19:04:01.825Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 08-03-2021 09:30 am.'
2021-03-06T19:04:01.837Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048895-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '4447135048895193', message: 'message Submitted successfully' }
2021-03-06T19:04:08.419Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 06-03-2021 12:25 pm.'
2021-03-06T19:04:08.432Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048900-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '4415135048900212', message: 'message Submitted successfully' }
2021-03-06T19:04:12.918Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 06-03-2021 12:20 pm.'
2021-03-06T19:04:12.930Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048901-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7584135048901212', message: 'message Submitted successfully' }
2021-03-06T19:04:17.485Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 06-03-2021 12:18 pm.'
2021-03-06T19:04:17.496Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048903-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '3563135048903595', message: 'message Submitted successfully' }
2021-03-06T19:04:22.686Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 06-03-2021 12:29 pm.'
2021-03-06T19:04:22.699Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048905-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '3395135048905184', message: 'message Submitted successfully' }
2021-03-06T19:04:27.439Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 06-03-2021 12:26 pm.'
2021-03-06T19:04:27.451Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048906-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '5276135048906244', message: 'message Submitted successfully' }
2021-03-06T19:04:29.060Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:04:29.060Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:04:29.061Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:04:29.062Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:04:29.061Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:04:29.062Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:04:29.065Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:04:29.065Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-06T19:04:29.072Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:04:29.072Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T19:04:29.079Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:04:29.079Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T19:04:30.966Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:04:30.967Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:04:30.968Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:04:30.969Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T19:04:39.861Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-06T19:04:39.861Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '09:15 AM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32794, selectedDocId: 177, orgId: 155, isVideo: 'false', phoneNoOrig: '8884406335', tzOffset: 330 }
2021-03-06T19:04:39.879Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-06T19:04:39.887Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T19:04:39.890Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 08-03-2021 09:15 am. \nBest Wishes and Warm Regards.'
2021-03-06T19:04:39.902Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135048917-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '5524135048917855', message: 'message Submitted successfully' }
2021-03-06T19:04:40.106Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:04:40.107Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:04:40.109Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:04:40.110Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T19:04:40.151Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:04:40.151Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:04:40.153Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:04:40.154Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T19:04:40.171Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:04:40.172Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:04:40.182Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:04:40.183Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-06T19:04:40.196Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:04:40.197Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:04:40.202Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:04:40.203Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T19:08:09.754Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:08:09.760Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:08:09.763Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:08:09.763Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-06T19:08:09.773Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:08:09.773Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:08:09.775Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-06T19:08:09.775Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-06T19:08:09.777Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:08:09.778Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-06T19:08:09.788Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-06T19:08:09.788Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-06T19:12:14.278Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1897, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: '06:30 PM', checked_in_time: '18:25:52', created_at: 2021-03-06T12:55:04.000Z, checked_in: 1, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T18:30:00.000Z, end_time: 2021-03-06T18:44:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-06T19:12:14.290Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T19:12:14.299Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-06T19:12:14.299Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 12:42 pm"}'
2021-03-06T19:12:14.300Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 12:42 pm"}' }
2021-03-06T19:12:14.294Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 06-03-2021 12:42 pm. \nBest Wishes and Warm Regards.'
2021-03-06T19:12:14.443Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '653d9e0b-eb48-403c-9816-3d0f72d31921' }, MessageId: '0109017808f4580b-006d35a3-09a4-4aea-aa40-0bd3a32d7dd4-000000' }
2021-03-06T19:12:14.464Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135049168-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7734135049168461', message: 'message Submitted successfully' }
2021-03-06T19:12:39.977Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1897, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: '06:30 PM', checked_in_time: '18:25:52', created_at: 2021-03-06T12:55:04.000Z, checked_in: 1, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T18:30:00.000Z, end_time: 2021-03-06T18:44:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1912, org_doctor_mapping_id: 514, patient_id: 33641, preffered_time: 'SpotWalkin', checked_in_time: '00:42:14', created_at: 2021-03-06T19:12:14.000Z, checked_in: 0, appointment_date: 2021-03-06T00:00:00.000Z, start_time: 2021-03-06T12:42:00.000Z, end_time: 2021-03-06T12:56:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-06T19:12:39.986Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T19:12:39.990Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-06T19:12:39.991Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 12:42 pm"}'
2021-03-06T19:12:39.992Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"06-03-2021 12:42 pm"}' }
2021-03-06T19:12:39.989Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 06-03-2021 12:42 pm. \nBest Wishes and Warm Regards.'
2021-03-06T19:12:40.009Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135049176-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '9383135049176777', message: 'message Submitted successfully' }
2021-03-06T19:12:40.121Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'e881efb3-0b5e-4dff-877d-1c82dfb7c3d0' }, MessageId: '0109017808f4bc57-5c48859c-17e2-4939-adc8-f90f994d0440-000000' }
2021-03-06T19:13:09.309Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 06-03-2021 12:42 pm.'
2021-03-06T19:13:09.323Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135049205-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '5523135049205448', message: 'message Submitted successfully' }
2021-03-06T19:13:15.707Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 06-03-2021 12:42 pm.'
2021-03-06T19:13:15.721Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135049208-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '3628135049208791', message: 'message Submitted successfully' }
2021-03-06T19:24:01.733Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-06T19:24:01.746Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-06T19:24:01.755Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-06T19:24:01.755Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"07-03-2021 12:54 pm"}'
2021-03-06T19:24:01.756Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Vaishnavi","param1":"Visalakshi","param2":"Life care Hospital","param3":"07-03-2021 12:54 pm"}' }
2021-03-06T19:24:01.750Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Vaishnavi,\nYour appointment with Visalakshi at Life care Hospital is booked for 07-03-2021 12:54 pm. \nBest Wishes and Warm Regards.'
2021-03-06T19:24:01.918Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135049491-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '8757135049491497', message: 'message Submitted successfully' }
2021-03-06T19:24:01.999Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'bbf946ed-07b3-4e19-88ad-f2ac25993270' }, MessageId: '0109017808ff2394-4e898753-f745-4824-8d75-3ecdf991070f-000000' }
2021-03-06T19:27:50.663Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Visalakshi
2021-03-06T19:27:50.665Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-06T19:27:50.994Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-07T12:28:30.201Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 3933.'
2021-03-07T12:28:30.360Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135261630-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2164135261630419', message: 'message Submitted successfully' }
2021-03-07T12:29:23.875Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T12:29:23.876Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T12:29:23.884Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T12:29:23.885Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T12:29:23.888Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T12:29:23.888Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T12:29:23.902Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T12:29:23.903Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T12:29:23.904Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T12:29:23.905Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T12:29:23.920Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T12:29:23.920Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T12:32:58.884Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Successfully updated username to Bhuvana.'
2021-03-07T12:32:58.899Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135262892-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '2218135262892993', message: 'message Submitted successfully' }
2021-03-07T12:42:47.601Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T12:42:47.601Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T12:42:47.603Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T12:42:47.604Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T12:42:47.619Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T12:42:47.620Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T12:42:47.623Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T12:42:47.624Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T12:42:47.648Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T12:42:47.648Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T12:42:47.651Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T12:42:47.651Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T12:44:44.138Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T12:44:44.139Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T12:44:44.141Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T12:44:44.141Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T12:44:44.153Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T12:44:44.154Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T12:44:44.158Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T12:44:44.158Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T12:44:44.168Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T12:44:44.169Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T12:44:44.171Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T12:44:44.172Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T12:45:03.282Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : userCredentials , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T12:45:03.283Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"NU76","param1":"8b0b5lal"}'
2021-03-07T12:45:03.284Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'userCredentialsEmailTemplate', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"NU76","param1":"8b0b5lal"}' }
2021-03-07T12:45:03.515Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '961280ae-41de-4f05-b5c0-04a698447d9c' }, MessageId: '010901780cb839e5-397b2356-4364-4537-96c2-5ecd8fd5687f-000000' }
2021-03-07T12:47:53.764Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Successfully updated username to Sumathi.'
2021-03-07T12:47:53.780Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135266480-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '7556135266480529', message: 'message Submitted successfully' }
2021-03-07T12:50:29.693Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : userCredentials , sendTo : getvisa@gmail.com
2021-03-07T12:50:29.694Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"LB67","param1":"76326qip"}'
2021-03-07T12:50:29.694Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'userCredentialsEmailTemplate', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"LB67","param1":"76326qip"}' }
2021-03-07T12:50:29.817Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'aed69416-fe5a-4787-9c31-cf2d3289db09' }, MessageId: '010901780cbd34dc-2847148f-6d7e-4873-a756-0aadfd14db3f-000000' }
2021-03-07T12:50:30.197Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-07T12:50:30.198Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-07T12:50:30.199Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-07T12:50:30.204Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 2 record(s); took 5 msec
2021-03-07T12:50:32.398Z |-[34mdebug[39m [router:payment-order-creation]: Generate payment order.
2021-03-07T12:50:32.399Z |-[34mdebug[39m [service:payment-order-creation]: Payment order generation.
2021-03-07T12:50:32.649Z |-[34mdebug[39m [service:payment-order-creation]: Saving Payment order id order_Gjlnm1W2GZtr1e for org 0
2021-03-07T12:50:32.650Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 0, 'order_Gjlnm1W2GZtr1e', null, null, 649, null, 'ORDER_CREATED', 0, 0 ]
2021-03-07T12:50:32.658Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 8 msec
2021-03-07T12:50:32.658Z |-[34mdebug[39m [service:payment-order-creation]: successfully update the order details
2021-03-07T12:50:39.360Z |-[34mdebug[39m [router:payment-order-creation]: Generate payment order.
2021-03-07T12:50:39.360Z |-[34mdebug[39m [service:payment-order-creation]: Payment order generation.
2021-03-07T12:50:39.541Z |-[34mdebug[39m [service:payment-order-creation]: Saving Payment order id order_GjlntXmCvwVyoT for org 0
2021-03-07T12:50:39.541Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 0, 'order_GjlntXmCvwVyoT', null, null, 7788, null, 'ORDER_CREATED', 0, 0 ]
2021-03-07T12:50:39.547Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 6 msec
2021-03-07T12:50:39.547Z |-[34mdebug[39m [service:payment-order-creation]: successfully update the order details
2021-03-07T12:51:08.289Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2021-03-07T12:51:08.290Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2021-03-07T12:51:08.291Z |-[34mdebug[39m [service:update-payment]: [object Object]
2021-03-07T12:51:08.291Z |-[34mdebug[39m [service:update-payment]: validating the signature return by razopay
2021-03-07T12:51:08.292Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2021-03-07T12:51:08.293Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2021-03-07T12:51:08.294Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,
                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?'; values=[ 11, 'pay_GjloM07cVDcedE', '96231df64b268b7e823b88a6a88c601113d3abb24805617dd1795f02e8263880', 'order_GjlntXmCvwVyoT' ]
2021-03-07T12:51:08.296Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,\n                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?"': undefined record(s); took 2 msec
2021-03-07T12:51:08.297Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 11, 'order_GjlntXmCvwVyoT', 'online', 7788, 7788, 'SUCCESS', 0, 0, 'Registration' ]
2021-03-07T12:51:08.297Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 1 msec
2021-03-07T12:51:08.298Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update lab set is_inactive = 0 where id = ?'; values=[ 11 ]
2021-03-07T12:51:08.299Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update lab set is_inactive = 0 where id = ?'': undefined record(s); took 1 msec
2021-03-07T12:51:08.299Z |-[34mdebug[39m [service:update-payment]: Activating organization id 11 on successfull online payment.
2021-03-07T12:51:08.299Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 4f5a83ba-24f7-11eb-a980-0275bd679b64.
2021-03-07T12:51:08.300Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P
                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '4f5a83ba-24f7-11eb-a980-0275bd679b64' ]
2021-03-07T12:51:08.302Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P\n                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 2 record(s); took 2 msec
2021-03-07T12:51:08.303Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 11, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-6077-71c8-91ea-a09c6e0a79c9', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-07T12:51:08.303Z, 0 ]
2021-03-07T12:51:08.304Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2021-03-07T12:51:08.305Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 11, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-07T12:51:08.304Z, 0 ]
2021-03-07T12:51:08.305Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2021-03-07T12:51:08.307Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 13 ms
2021-03-07T12:55:34.818Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : userCredentials , sendTo : getvisa@gmail.com
2021-03-07T12:55:34.819Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"CH68","param1":"x0bijov5"}'
2021-03-07T12:55:34.820Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'userCredentialsEmailTemplate', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"CH68","param1":"x0bijov5"}' }
2021-03-07T12:55:34.982Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'a918d373-ef85-4bc3-af32-0e4d2d85a1ff' }, MessageId: '010901780cc1dcbe-32d50c12-73ae-4e14-b4bc-2d74c47cf020-000000' }
2021-03-07T12:55:35.039Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-07T12:55:35.039Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-07T12:55:35.040Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-07T12:55:35.042Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 2 record(s); took 2 msec
2021-03-07T12:55:36.912Z |-[34mdebug[39m [router:payment-order-creation]: Generate payment order.
2021-03-07T12:55:36.913Z |-[34mdebug[39m [service:payment-order-creation]: Payment order generation.
2021-03-07T12:55:37.202Z |-[34mdebug[39m [service:payment-order-creation]: Saving Payment order id order_Gjlt8PYuaOuMbC for org 0
2021-03-07T12:55:37.203Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 0, 'order_Gjlt8PYuaOuMbC', null, null, 7788, null, 'ORDER_CREATED', 0, 0 ]
2021-03-07T12:55:37.209Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 6 msec
2021-03-07T12:55:37.209Z |-[34mdebug[39m [service:payment-order-creation]: successfully update the order details
2021-03-07T12:55:57.331Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2021-03-07T12:55:57.332Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2021-03-07T12:55:57.332Z |-[34mdebug[39m [service:update-payment]: [object Object]
2021-03-07T12:55:57.332Z |-[34mdebug[39m [service:update-payment]: validating the signature return by razopay
2021-03-07T12:55:57.333Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2021-03-07T12:55:57.333Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2021-03-07T12:55:57.334Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,
                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?'; values=[ 17, 'pay_GjltQzjI3XEw3K', 'c5c6983269a2461e57f8c9f8a30dbeebf9df0ce658d70521b09f8bb5eb8aaa15', 'order_Gjlt8PYuaOuMbC' ]
2021-03-07T12:55:57.336Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,\n                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?"': undefined record(s); took 2 msec
2021-03-07T12:55:57.337Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 17, 'order_Gjlt8PYuaOuMbC', 'online', 7788, 7788, 'SUCCESS', 0, 0, 'Registration' ]
2021-03-07T12:55:57.337Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 0 msec
2021-03-07T12:55:57.338Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update pharmacy set is_inactive = 0 where id = ?'; values=[ 17 ]
2021-03-07T12:55:57.339Z |-[34mdebug[39m [service:update-payment]: Activating organization id 17 on successfull online payment.
2021-03-07T12:55:57.339Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 4f5a83ba-24f7-11eb-a980-0275bd679b64.
2021-03-07T12:55:57.339Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update pharmacy set is_inactive = 0 where id = ?'': undefined record(s); took 0 msec
2021-03-07T12:55:57.340Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P
                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '4f5a83ba-24f7-11eb-a980-0275bd679b64' ]
2021-03-07T12:55:57.341Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P\n                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 2 record(s); took 2 msec
2021-03-07T12:55:57.342Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 17, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-6077-71c8-91ea-a09c6e0a79c9', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-07T12:55:57.342Z, 0 ]
2021-03-07T12:55:57.343Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2021-03-07T12:55:57.343Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 17, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-07T12:55:57.343Z, 0 ]
2021-03-07T12:55:57.344Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2021-03-07T12:55:57.345Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 12 ms
2021-03-07T12:57:26.451Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Successfully updated username to ManasLB.'
2021-03-07T12:57:26.593Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135268939-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '3369135268939519', message: 'message Submitted successfully' }
2021-03-07T12:58:57.775Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Successfully updated username to Mataji.'
2021-03-07T12:58:57.788Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135269357-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7157135269357716', message: 'message Submitted successfully' }
2021-03-07T14:02:29.458Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Visalakshi
2021-03-07T14:02:29.460Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-07T14:02:29.755Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-07T14:07:04.596Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 4772.'
2021-03-07T14:07:04.700Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135287467-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '9986135287467764', message: 'message Submitted successfully' }
2021-03-07T14:18:59.564Z |-[34mdebug[39m [router:Consultation.js]: Error - Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
2021-03-07T14:18:59.574Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Visalakshi
2021-03-07T14:18:59.576Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-07T14:18:59.854Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-07T14:25:09.863Z |-[34mdebug[39m [router:Consultation.js]: Error - Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
2021-03-07T14:25:09.875Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Visalakshi
2021-03-07T14:25:09.877Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-07T14:25:10.162Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-07T14:25:21.708Z |-[34mdebug[39m [router:Consultation.js]: Error - Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
2021-03-07T14:25:21.717Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Visalakshi
2021-03-07T14:25:21.720Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-07T14:25:21.953Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-07T14:27:30.192Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-07T14:27:30.201Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-07T14:27:30.214Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-07T14:27:30.214Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Ramkumar","param1":"Visalakshi","param2":"Life care Hospital","param3":"07-03-2021 07:57 pm"}'
2021-03-07T14:27:30.215Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Ramkumar","param1":"Visalakshi","param2":"Life care Hospital","param3":"07-03-2021 07:57 pm"}' }
2021-03-07T14:27:30.209Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Visalakshi at Life care Hospital is booked for 07-03-2021 07:57 pm. \nBest Wishes and Warm Regards.'
2021-03-07T14:27:30.333Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '6a738a31-e319-4105-bf57-80980d4b34a6' }, MessageId: '010901780d160559-2f3a57ab-312f-4ec7-9c26-ac77546bebf5-000000' }
2021-03-07T14:27:30.372Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135292580-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '4228135292580567', message: 'message Submitted successfully' }
2021-03-07T14:28:02.209Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 07-03-2021 07:57 pm.'
2021-03-07T14:28:02.223Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135292680-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '9829135292680443', message: 'message Submitted successfully' }
2021-03-07T14:28:26.282Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T14:28:26.283Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T14:28:26.285Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T14:28:26.286Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T14:28:28.047Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T14:28:28.047Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T14:28:28.049Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T14:28:28.049Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T14:28:30.186Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body [Object: null prototype] { checkedIn: 'false', spotWalkin: '0', patientId: '33644', isVideo: 'true', consultationAmount: '100', preferredTime: '09:30 AM', duration: '', appointmentDate: '2021-3-8', checkedInTime: '', selectedDocUserMapping: '', selectedDocId: '', email: '', address: '', originalUserTypeId: 177, originalOrgUserMappingId: 514, userTypeId: 177, orgUserMappingId: 514, timeInterval: '15', orgId: 155, type: 'Doctor', userId: 557, tzOffset: 330 }
2021-03-07T14:28:30.185Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-07T14:28:30.195Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-07T14:28:30.209Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Razorpay Account could not be found for the Organisation!
2021-03-07T14:28:30.210Z |-[31merror[39m [service:appointment]: Error Occured : { status: false, Message: 'Razorpay Account could not be found for the Organisation!' }
2021-03-07T14:28:30.211Z |-[32minfo[39m [service:appointment]: Payment Link failed. Appointment not booked!
2021-03-07T14:28:30.212Z |-[31merror[39m [service:appointment]: error { status: false, Message: 'Payment Link failed. Appointment not booked!' }
2021-03-07T14:28:30.214Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T14:28:30.225Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : getvisa@gmail.com
2021-03-07T14:28:30.226Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"08-03-2021 09:30 am"}'
2021-03-07T14:28:30.226Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"08-03-2021 09:30 am"}' }
2021-03-07T14:28:30.224Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nRamkumar has booked Video Appointment for 08-03-2021 09:30 am.'
2021-03-07T14:28:30.243Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135292805-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '9821135292805529', message: 'message Submitted successfully' }
2021-03-07T14:28:30.368Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '4b55a2b3-e082-4e6a-a3af-11331bb9f1c2' }, MessageId: '010901780d16efb0-819c4b9c-5007-4798-b974-4ab99c7f0ac6-000000' }
2021-03-07T14:28:30.500Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T14:28:30.501Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T14:28:30.503Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T14:28:30.503Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T14:29:21.861Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-07T14:29:21.870Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Razorpay Account could not be found for the Organisation!
2021-03-07T14:29:21.871Z |-[31merror[39m [service:appointment]: Error Occured : { status: false, Message: 'Razorpay Account could not be found for the Organisation!' }
2021-03-07T14:29:21.871Z |-[32minfo[39m [service:appointment]: Payment Link failed. Appointment not booked!
2021-03-07T14:29:21.875Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T14:29:21.886Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : getvisa@gmail.com
2021-03-07T14:29:21.886Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 07:59 pm"}'
2021-03-07T14:29:21.887Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 07:59 pm"}' }
2021-03-07T14:29:21.885Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nRamkumar has booked Video Appointment for 07-03-2021 07:59 pm.'
2021-03-07T14:29:21.904Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135292994-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2227135292994516', message: 'message Submitted successfully' }
2021-03-07T14:29:22.148Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '142281bc-67fa-48fa-bd57-2fb4a515da0e' }, MessageId: '010901780d17b97d-be0c3990-655d-4ef9-972d-01402dadd00f-000000' }
2021-03-07T14:37:54.227Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1917, org_doctor_mapping_id: 514, patient_id: 33644, preffered_time: 'SpotTeleConsultation', checked_in_time: '19:59:21', created_at: 2021-03-07T14:29:21.000Z, checked_in: 0, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T19:59:00.000Z, end_time: 2021-03-07T20:13:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-07T14:37:54.236Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Razorpay Account could not be found for the Organisation!
2021-03-07T14:37:54.237Z |-[31merror[39m [service:appointment]: Error Occured : { status: false, Message: 'Razorpay Account could not be found for the Organisation!' }
2021-03-07T14:37:54.237Z |-[32minfo[39m [service:appointment]: Payment Link failed. Appointment not booked!
2021-03-07T14:37:54.242Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T14:37:54.253Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : getvisa@gmail.com
2021-03-07T14:37:54.254Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 08:07 pm"}'
2021-03-07T14:37:54.254Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 08:07 pm"}' }
2021-03-07T14:37:54.252Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nRamkumar has booked Video Appointment for 07-03-2021 08:07 pm.'
2021-03-07T14:37:54.285Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135295171-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '6158135295171583', message: 'message Submitted successfully' }
2021-03-07T14:37:54.446Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'ec2726d2-ffa0-4732-b22a-a20b0f204b6b' }, MessageId: '010901780d1f8afa-0dcc2ee3-5317-44cc-895a-c72d9e751cbf-000000' }
2021-03-07T14:38:37.316Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 07-03-2021 07:59 pm.'
2021-03-07T14:38:37.329Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135295364-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '5466135295364729', message: 'message Submitted successfully' }
2021-03-07T14:43:13.675Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1918, org_doctor_mapping_id: 514, patient_id: 33644, preffered_time: 'SpotTeleConsultation', checked_in_time: '20:07:54', created_at: 2021-03-07T14:37:54.000Z, checked_in: 0, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T20:07:00.000Z, end_time: 2021-03-07T20:21:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-07T14:43:13.683Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Razorpay Account could not be found for the Organisation!
2021-03-07T14:43:13.684Z |-[31merror[39m [service:appointment]: Error Occured : { status: false, Message: 'Razorpay Account could not be found for the Organisation!' }
2021-03-07T14:43:13.684Z |-[32minfo[39m [service:appointment]: Payment Link failed. Appointment not booked!
2021-03-07T14:43:13.687Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T14:43:13.697Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : getvisa@gmail.com
2021-03-07T14:43:13.697Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 08:13 pm"}'
2021-03-07T14:43:13.698Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 08:13 pm"}' }
2021-03-07T14:43:13.696Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nRamkumar has booked Video Appointment for 07-03-2021 08:13 pm.'
2021-03-07T14:43:13.842Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135296334-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '4648135296334165', message: 'message Submitted successfully' }
2021-03-07T14:43:13.858Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '7612e64d-38be-4a6b-a90d-340c69a7ad79' }, MessageId: '010901780d246abc-64e00a22-f902-4626-8d8f-481238a3f4f7-000000' }
2021-03-07T14:58:27.618Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-07T14:58:27.898Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-03-07T14:58:28.207Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-07T14:58:28.208Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-07T14:58:28.209Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-07T14:58:28.213Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 2 record(s); took 4 msec
2021-03-07T14:58:30.540Z |-[34mdebug[39m [router:payment-order-creation]: Generate payment order.
2021-03-07T14:58:30.540Z |-[34mdebug[39m [service:payment-order-creation]: Payment order generation.
2021-03-07T14:58:30.771Z |-[34mdebug[39m [service:payment-order-creation]: Saving Payment order id order_Gjnyx2ngAX572K for org 0
2021-03-07T14:58:30.772Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 0, 'order_Gjnyx2ngAX572K', null, null, 7788, null, 'ORDER_CREATED', 0, 0 ]
2021-03-07T14:58:30.780Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 8 msec
2021-03-07T14:58:30.780Z |-[34mdebug[39m [service:payment-order-creation]: successfully update the order details
2021-03-07T14:58:51.422Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2021-03-07T14:58:51.423Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2021-03-07T14:58:51.423Z |-[34mdebug[39m [service:update-payment]: [object Object]
2021-03-07T14:58:51.424Z |-[34mdebug[39m [service:update-payment]: validating the signature return by razopay
2021-03-07T14:58:51.426Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2021-03-07T14:58:51.426Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2021-03-07T14:58:51.427Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,
                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?'; values=[ 157, 'pay_GjnzEoWcL2DH3N', 'ada0dd624248352304428f7a971770cfc6ac10f9a51651c016dc0fe806cea014', 'order_Gjnyx2ngAX572K' ]
2021-03-07T14:58:51.429Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,\n                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?"': undefined record(s); took 2 msec
2021-03-07T14:58:51.430Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 157, 'order_Gjnyx2ngAX572K', 'online', 7788, 7788, 'SUCCESS', 0, 0, 'Registration' ]
2021-03-07T14:58:51.432Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 2 msec
2021-03-07T14:58:51.432Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update organisation set is_inactive = 0 where id = ?'; values=[ 157 ]
2021-03-07T14:58:51.433Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update organisation set is_inactive = 0 where id = ?'': undefined record(s); took 1 msec
2021-03-07T14:58:51.433Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update doctor set payment_status = 1 where id = ?'; values=[ '180' ]
2021-03-07T14:58:51.434Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update doctor set payment_status = 1 where id = ?'': undefined record(s); took 1 msec
2021-03-07T14:58:51.434Z |-[34mdebug[39m [service:update-payment]: Activating organization id 157 on successfull online payment.
2021-03-07T14:58:51.435Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 4f5a83ba-24f7-11eb-a980-0275bd679b64.
2021-03-07T14:58:51.435Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P
                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '4f5a83ba-24f7-11eb-a980-0275bd679b64' ]
2021-03-07T14:58:51.438Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P\n                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 2 record(s); took 3 msec
2021-03-07T14:58:51.438Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 157, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-6077-71c8-91ea-a09c6e0a79c9', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-07T14:58:51.438Z, 0 ]
2021-03-07T14:58:51.440Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 2 msec
2021-03-07T14:58:51.440Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 157, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-07T14:58:51.440Z, 0 ]
2021-03-07T14:58:51.441Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2021-03-07T14:58:51.442Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 16 ms
2021-03-07T15:00:43.636Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : userCredentials , sendTo : getvisa@gmail.com
2021-03-07T15:00:43.637Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"LB68","param1":"0nl2warp"}'
2021-03-07T15:00:43.637Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'userCredentialsEmailTemplate', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"LB68","param1":"0nl2warp"}' }
2021-03-07T15:00:43.810Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-07T15:00:43.811Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-07T15:00:43.811Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-07T15:00:43.813Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 2 record(s); took 2 msec
2021-03-07T15:00:43.832Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '26fb284b-94ba-4650-ac15-3c7fe5e765f0' }, MessageId: '010901780d347014-a1119dd4-c763-4e15-9f67-aa302af6d440-000000' }
2021-03-07T15:00:46.230Z |-[34mdebug[39m [router:payment-order-creation]: Generate payment order.
2021-03-07T15:00:46.230Z |-[34mdebug[39m [service:payment-order-creation]: Payment order generation.
2021-03-07T15:00:46.457Z |-[34mdebug[39m [service:payment-order-creation]: Saving Payment order id order_Gjo1L9BbvoeXsX for org 0
2021-03-07T15:00:46.457Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 0, 'order_Gjo1L9BbvoeXsX', null, null, 7788, null, 'ORDER_CREATED', 0, 0 ]
2021-03-07T15:00:46.463Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 6 msec
2021-03-07T15:00:46.464Z |-[34mdebug[39m [service:payment-order-creation]: successfully update the order details
2021-03-07T15:01:08.333Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2021-03-07T15:01:08.334Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2021-03-07T15:01:08.334Z |-[34mdebug[39m [service:update-payment]: [object Object]
2021-03-07T15:01:08.334Z |-[34mdebug[39m [service:update-payment]: validating the signature return by razopay
2021-03-07T15:01:08.335Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2021-03-07T15:01:08.335Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2021-03-07T15:01:08.336Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,
                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?'; values=[ 12, 'pay_Gjo1fUjY1GyjQC', 'ec403132b77ecadadcf5b2c8ac4573a07c448bd2d592f3357fd3b78c887c4cd8', 'order_Gjo1L9BbvoeXsX' ]
2021-03-07T15:01:08.338Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,\n                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?"': undefined record(s); took 1 msec
2021-03-07T15:01:08.338Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 12, 'order_Gjo1L9BbvoeXsX', 'online', 7788, 7788, 'SUCCESS', 0, 0, 'Registration' ]
2021-03-07T15:01:08.339Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 1 msec
2021-03-07T15:01:08.339Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update lab set is_inactive = 0 where id = ?'; values=[ 12 ]
2021-03-07T15:01:08.340Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update lab set is_inactive = 0 where id = ?'': undefined record(s); took 1 msec
2021-03-07T15:01:08.340Z |-[34mdebug[39m [service:update-payment]: Activating organization id 12 on successfull online payment.
2021-03-07T15:01:08.341Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 4f5a83ba-24f7-11eb-a980-0275bd679b64.
2021-03-07T15:01:08.341Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P
                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '4f5a83ba-24f7-11eb-a980-0275bd679b64' ]
2021-03-07T15:01:08.343Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P\n                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 2 record(s); took 2 msec
2021-03-07T15:01:08.344Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 12, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-6077-71c8-91ea-a09c6e0a79c9', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-07T15:01:08.344Z, 0 ]
2021-03-07T15:01:08.344Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 0 msec
2021-03-07T15:01:08.345Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 12, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-07T15:01:08.345Z, 0 ]
2021-03-07T15:01:08.346Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2021-03-07T15:01:08.346Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 11 ms
2021-03-07T15:03:57.351Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number undefined and messageData! 'Successfully updated username to adminbnj.'
2021-03-07T15:03:57.372Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ13', message: 'please enter numbers to send sms' }
2021-03-07T15:13:55.598Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Successfully updated username to Nagaraj.'
2021-03-07T15:13:55.619Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135303167-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '8927135303167423', message: 'message Submitted successfully' }
2021-03-07T15:16:23.393Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 07-03-2021 08:13 pm.'
2021-03-07T15:16:23.405Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135303666-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '7227135303666729', message: 'message Submitted successfully' }
2021-03-07T15:16:24.624Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 07-03-2021 08:07 pm.'
2021-03-07T15:16:24.635Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135303672-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '1741135303672452', message: 'message Submitted successfully' }
2021-03-07T15:16:31.914Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-07T15:16:31.930Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Razorpay Account could not be found for the Organisation!
2021-03-07T15:16:31.934Z |-[31merror[39m [service:appointment]: Error Occured : { status: false, Message: 'Razorpay Account could not be found for the Organisation!' }
2021-03-07T15:16:31.935Z |-[32minfo[39m [service:appointment]: Payment Link failed. Appointment not booked!
2021-03-07T15:16:31.941Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T15:16:31.952Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : getvisa@gmail.com
2021-03-07T15:16:31.954Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 08:46 pm"}'
2021-03-07T15:16:31.954Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 08:46 pm"}' }
2021-03-07T15:16:31.951Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nRamkumar has booked Video Appointment for 07-03-2021 08:46 pm.'
2021-03-07T15:16:31.974Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135303693-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7644135303693958', message: 'message Submitted successfully' }
2021-03-07T15:16:32.126Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '80263170-0ad3-44ff-9670-0190c4f97572' }, MessageId: '010901780d42e874-5ae3ed25-3670-46ae-a8f3-afa5bd496982-000000' }
2021-03-07T15:17:32.416Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your login otp is 9711.'
2021-03-07T15:17:32.428Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135303876-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '9686135303876549', message: 'message Submitted successfully' }
2021-03-07T15:18:16.428Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T15:18:16.428Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T15:18:16.431Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T15:18:16.431Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T15:18:17.729Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T15:18:17.729Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T15:18:17.731Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T15:18:17.731Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T15:18:19.404Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body [Object: null prototype] { checkedIn: 'false', spotWalkin: '0', patientId: '33644', isVideo: 'true', consultationAmount: '100', preferredTime: '12:15 PM', duration: '', appointmentDate: '2021-3-8', checkedInTime: '', selectedDocUserMapping: '', selectedDocId: '', email: '', address: '', originalUserTypeId: 177, originalOrgUserMappingId: 514, userTypeId: 177, orgUserMappingId: 514, timeInterval: '15', orgId: 155, type: 'Doctor', userId: 557, tzOffset: 330 }
2021-03-07T15:18:19.403Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-07T15:18:19.419Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1916, org_doctor_mapping_id: 514, patient_id: 33644, preffered_time: '09:30 AM', checked_in_time: '19:58:30', created_at: 2021-03-07T14:28:30.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T09:30:00.000Z, end_time: 2021-03-08T09:44:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-07T15:18:19.429Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Razorpay Account could not be found for the Organisation!
2021-03-07T15:18:19.430Z |-[31merror[39m [service:appointment]: Error Occured : { status: false, Message: 'Razorpay Account could not be found for the Organisation!' }
2021-03-07T15:18:19.432Z |-[32minfo[39m [service:appointment]: Payment Link failed. Appointment not booked!
2021-03-07T15:18:19.433Z |-[31merror[39m [service:appointment]: error { status: false, Message: 'Payment Link failed. Appointment not booked!' }
2021-03-07T15:18:19.435Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T15:18:19.446Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : getvisa@gmail.com
2021-03-07T15:18:19.446Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"08-03-2021 12:15 pm"}'
2021-03-07T15:18:19.447Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Visalakshi","param1":"Ramkumar","param2":"Video","param3":"08-03-2021 12:15 pm"}' }
2021-03-07T15:18:19.444Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Dear Visalakshi,\nRamkumar has booked Video Appointment for 08-03-2021 12:15 pm.'
2021-03-07T15:18:19.527Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135304013-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2749135304013911', message: 'message Submitted successfully' }
2021-03-07T15:18:19.576Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'bba4718d-6e45-4382-88f0-d3f7b4f225c8' }, MessageId: '010901780d448c53-ea735433-ba0e-4f1e-9fa1-a65277b98d10-000000' }
2021-03-07T15:18:19.667Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T15:18:19.667Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T15:18:19.679Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T15:18:19.679Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T15:23:15.536Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : userCredentials , sendTo : getvisa@gmail.com
2021-03-07T15:23:15.539Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"NU77","param1":"0n5cuglr"}'
2021-03-07T15:23:15.541Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'userCredentialsEmailTemplate', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"NU77","param1":"0n5cuglr"}' }
2021-03-07T15:23:15.663Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'f92b23d5-7bb6-4ef5-bcdb-937723008fdf' }, MessageId: '010901780d4910fc-ab32f57c-2327-49cd-b825-6afb6d9a6668-000000' }
2021-03-07T15:25:33.856Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Successfully updated username to Anand.'
2021-03-07T15:25:33.875Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135305544-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2481135305544982', message: 'message Submitted successfully' }
2021-03-07T15:26:49.460Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : userCredentials , sendTo : getvisa@gmail.com
2021-03-07T15:26:49.461Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"CH69","param1":"l63quc0c"}'
2021-03-07T15:26:49.461Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'userCredentialsEmailTemplate', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"CH69","param1":"l63quc0c"}' }
2021-03-07T15:26:49.650Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'eb59962d-7f8e-4c80-9d15-2215c294a985' }, MessageId: '010901780d4c5495-02cf5a2a-bbd3-4eb3-9ca2-487292716f81-000000' }
2021-03-07T15:26:50.004Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-07T15:26:50.005Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-07T15:26:50.005Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-03-07T15:26:50.007Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 2 record(s); took 2 msec
2021-03-07T15:26:52.761Z |-[34mdebug[39m [router:payment-order-creation]: Generate payment order.
2021-03-07T15:26:52.762Z |-[34mdebug[39m [service:payment-order-creation]: Payment order generation.
2021-03-07T15:26:52.992Z |-[34mdebug[39m [service:payment-order-creation]: Saving Payment order id order_GjoSv39Vd48Rsx for org 0
2021-03-07T15:26:52.994Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 0, 'order_GjoSv39Vd48Rsx', null, null, 7788, null, 'ORDER_CREATED', 0, 0 ]
2021-03-07T15:26:52.999Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 5 msec
2021-03-07T15:26:52.999Z |-[34mdebug[39m [service:payment-order-creation]: successfully update the order details
2021-03-07T15:27:11.569Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2021-03-07T15:27:11.570Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2021-03-07T15:27:11.570Z |-[34mdebug[39m [service:update-payment]: [object Object]
2021-03-07T15:27:11.570Z |-[34mdebug[39m [service:update-payment]: validating the signature return by razopay
2021-03-07T15:27:11.571Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2021-03-07T15:27:11.572Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2021-03-07T15:27:11.572Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,
                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?'; values=[ 18, 'pay_GjoTCO7d4A4Qgf', '08079d6552adeaa72b4855002964f8a44d655f4b4c8ec466cfa6afcc18729ace', 'order_GjoSv39Vd48Rsx' ]
2021-03-07T15:27:11.574Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"update razopay_details set ORG_ID = ?, RAZORPAY_PAY_ID = ?, RAZORPAY_SIGNATURE = ?,\n                            STATUS = 'RECEIVED', PAID_DATE = CREATED_DATE where RAZORPAY_ORDER_ID = ?"': undefined record(s); took 2 msec
2021-03-07T15:27:11.575Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 18, 'order_GjoSv39Vd48Rsx', 'online', 7788, 7788, 'SUCCESS', 0, 0, 'Registration' ]
2021-03-07T15:27:11.576Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO payments (ORG_ID,RAZORPAY_ORDER_ID,PAYMENT_MODE,AMOUNT,AMOUNT_RECEIVED,STATUS,MODIFIED_BY,CREATED_BY,PAYMENT_FOR) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 1 msec
2021-03-07T15:27:11.576Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update pharmacy set is_inactive = 0 where id = ?'; values=[ 18 ]
2021-03-07T15:27:11.577Z |-[34mdebug[39m [service:update-payment]: Activating organization id 18 on successfull online payment.
2021-03-07T15:27:11.578Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 4f5a83ba-24f7-11eb-a980-0275bd679b64.
2021-03-07T15:27:11.577Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update pharmacy set is_inactive = 0 where id = ?'': undefined record(s); took 1 msec
2021-03-07T15:27:11.579Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P
                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '4f5a83ba-24f7-11eb-a980-0275bd679b64' ]
2021-03-07T15:27:11.580Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P\n                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 2 record(s); took 2 msec
2021-03-07T15:27:11.581Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 18, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-6077-71c8-91ea-a09c6e0a79c9', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-07T15:27:11.581Z, 0 ]
2021-03-07T15:27:11.583Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 2 msec
2021-03-07T15:27:11.584Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 18, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-03-07T15:27:11.584Z, 0 ]
2021-03-07T15:27:11.585Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 1 msec
2021-03-07T15:27:11.587Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 15 ms
2021-03-07T15:28:33.449Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Successfully updated username to Marry.'
2021-03-07T15:28:33.462Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135306052-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '3587135306052936', message: 'message Submitted successfully' }
2021-03-07T15:31:12.220Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Successfully updated username to chirayu.'
2021-03-07T15:31:12.238Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135306644-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '2781135306644793', message: 'message Submitted successfully' }
2021-03-07T15:31:12.353Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Successfully updated username to chirayu.'
2021-03-07T15:31:12.364Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135306645-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '3481135306645234', message: 'message Submitted successfully' }
2021-03-07T15:31:12.396Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Successfully updated username to chirayu.'
2021-03-07T15:31:12.410Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135306646-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7837135306646832', message: 'message Submitted successfully' }
2021-03-07T15:38:17.433Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Successfully updated username to Marry.'
2021-03-07T15:38:17.455Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135307955-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '4665135307955996', message: 'message Submitted successfully' }
2021-03-07T15:44:18.831Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T15:44:18.832Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T15:44:18.834Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T15:44:18.834Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T15:44:18.836Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T15:44:18.836Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T15:44:18.837Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T15:44:18.837Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T15:44:18.849Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T15:44:18.849Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T15:44:18.863Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T15:44:18.863Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T15:59:49.115Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-07', startTime: '21:29 PM', timeType: 'today', addSlot: null, originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T15:59:49.116Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-07T15:59:49.116Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Sunday
2021-03-07T15:59:49.115Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-07T15:59:54.409Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%bhuvanes%', '%bhuvanes%', '%bhuvanes%', '%bhuvanes%' ]
2021-03-07T15:59:54.408Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T15:59:55.032Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%' ]
2021-03-07T15:59:55.031Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T16:00:25.404Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-07T16:00:25.413Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-07T16:00:25.422Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T16:00:25.422Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"bhuvaneswari","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 09:30 pm"}'
2021-03-07T16:00:25.423Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"bhuvaneswari","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 09:30 pm"}' }
2021-03-07T16:00:25.421Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear bhuvaneswari,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 07-03-2021 09:30 pm. \nBest Wishes and Warm Regards.'
2021-03-07T16:00:25.463Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135311752-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '3156135311752756', message: 'message Submitted successfully' }
2021-03-07T16:00:25.577Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '02fc4215-0742-449b-a2e3-0b8ddc36023f' }, MessageId: '010901780d6b176c-67bcaf31-569e-4f0f-8467-f9765ecde3ea-000000' }
2021-03-07T16:00:42.036Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-07', startTime: '05:30 AM', timeType: 'today', addSlot: null, originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T16:00:42.036Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-07T16:00:42.037Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Sunday
2021-03-07T16:00:42.035Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-07T16:00:42.221Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%' ]
2021-03-07T16:00:42.221Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T16:00:52.124Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-07', startTime: '21:30 PM', timeType: 'today', addSlot: null, originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T16:00:52.125Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-07T16:00:52.125Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Sunday
2021-03-07T16:00:52.124Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-07T16:00:57.126Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sudhar%', '%sudhar%', '%sudhar%', '%sudhar%' ]
2021-03-07T16:00:57.125Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T16:00:57.898Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sudharshan%', '%sudharshan%', '%sudharshan%', '%sudharshan%' ]
2021-03-07T16:00:57.897Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T16:01:24.488Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-07T16:01:24.497Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-07T16:01:24.502Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T16:01:24.502Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 09:45 pm"}'
2021-03-07T16:01:24.503Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 09:45 pm"}' }
2021-03-07T16:01:24.499Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sudharshan,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 07-03-2021 09:45 pm. \nBest Wishes and Warm Regards.'
2021-03-07T16:01:24.516Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135311907-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '1462135311907795', message: 'message Submitted successfully' }
2021-03-07T16:01:24.602Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '3277e814-cda0-41d7-8e3d-09b6927aeb0e' }, MessageId: '010901780d6bfe36-fb97ecfe-dc54-4867-bfcb-036299a2ff7e-000000' }
2021-03-07T16:01:27.553Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-07', startTime: '05:30 AM', timeType: 'today', addSlot: '09:45 PM', originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T16:01:27.553Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-07T16:01:27.554Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Sunday
2021-03-07T16:01:27.562Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-07', startTime: '05:30 AM', timeType: 'today', addSlot: null, originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T16:01:27.563Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-07T16:01:27.563Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Sunday
2021-03-07T16:01:27.552Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-07T16:01:27.562Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-07T16:01:27.757Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sudharshan%', '%sudharshan%', '%sudharshan%', '%sudharshan%' ]
2021-03-07T16:01:27.757Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T16:01:30.968Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Your appointment with Nagaraj at Bone and Joint clinic has been cancelled for 07-03-2021 09:45 pm.'
2021-03-07T16:01:30.980Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135311927-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '4692135311927998', message: 'message Submitted successfully' }
2021-03-07T16:01:38.358Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-07', startTime: '21:31 PM', timeType: 'today', addSlot: null, originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T16:01:38.359Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-07T16:01:38.359Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Sunday
2021-03-07T16:01:38.358Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-07T16:01:43.749Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sud%', '%sud%', '%sud%', '%sud%' ]
2021-03-07T16:01:43.749Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T16:01:45.037Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sudharshan%', '%sudharshan%', '%sudharshan%', '%sudharshan%' ]
2021-03-07T16:01:45.037Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T16:01:47.297Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '10:45 PM', checkedIn: 'false', duration: '', appointmentDate: 'Sun Mar 07 2021 21:31:39 GMT+0530 (India Standard Time)', spotWalkin: '0', patientId: '33646', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'true', email: 'bhuvaneswari@naturalminds.co.in', address: '', originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T16:01:47.296Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-07T16:01:47.302Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-07T16:01:48.049Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'sudharshan', email: 'bhuvaneswari@naturalminds.co.in', contact: '9629869926' }
2021-03-07T16:01:48.050Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-07T16:01:48.050Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-07T16:01:48.052Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T16:01:48.060Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T16:01:48.060Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"sudharshan","param2":"Video","param3":"07-03-2021 10:45 pm"}'
2021-03-07T16:01:48.061Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"sudharshan","param2":"Video","param3":"07-03-2021 10:45 pm"}' }
2021-03-07T16:01:48.059Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nsudharshan has booked Video Appointment for 07-03-2021 10:45 pm.'
2021-03-07T16:01:48.076Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135311950-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '7387135311950536', message: 'message Submitted successfully' }
2021-03-07T16:01:48.244Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '80bb9c96-905f-49d0-8e8b-55deb681d31c' }, MessageId: '010901780d6c5a3f-483d544c-fe49-4f37-93bd-e727c94e45c0-000000' }
2021-03-07T16:08:05.452Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1922, org_doctor_mapping_id: 520, patient_id: 33645, preffered_time: '09:30 PM', checked_in_time: '21:30:25', created_at: 2021-03-07T16:00:25.000Z, checked_in: 0, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T21:30:00.000Z, end_time: 2021-03-07T21:44:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-07T16:08:06.157Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'bhuvaneswari', email: 'bhuvaneswari@naturalminds.co.in', contact: '9629869926' }
2021-03-07T16:08:06.157Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-07T16:08:06.158Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-07T16:08:06.160Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T16:08:06.167Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T16:08:06.168Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"bhuvaneswari","param2":"Video","param3":"07-03-2021 09:38 pm"}'
2021-03-07T16:08:06.168Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"bhuvaneswari","param2":"Video","param3":"07-03-2021 09:38 pm"}' }
2021-03-07T16:08:06.167Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nbhuvaneswari has booked Video Appointment for 07-03-2021 09:38 pm.'
2021-03-07T16:08:06.310Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135312789-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '4448135312789397', message: 'message Submitted successfully' }
2021-03-07T16:08:06.328Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '5f88f18e-4efc-4e99-86d3-c95d2ff66b44' }, MessageId: '010901780d721f37-3c23677a-a663-42e1-90a1-6aba31ab4de8-000000' }
2021-03-07T16:32:58.123Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Need an appointment with Nagaraj? Please click on https://www.naturalminds.in/appointment/Bone%20and%20Joint%20clinic/Nagaraj to book your appointment now!'
2021-03-07T16:32:58.139Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135316311-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '5455135316311316', message: 'message Submitted successfully' }
2021-03-07T16:33:16.797Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:33:16.797Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:33:16.800Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:33:16.800Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:33:16.801Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:33:16.802Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T16:33:16.809Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:33:16.809Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T16:33:16.821Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:33:16.822Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:33:16.823Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:33:16.824Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T16:33:18.755Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Need an appointment with Nagaraj? Please click on https://www.naturalminds.in/appointment/Bone%20and%20Joint%20clinic/Nagaraj to book your appointment now!'
2021-03-07T16:33:18.772Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135316361-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '5127135316361412', message: 'message Submitted successfully' }
2021-03-07T16:33:19.312Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:33:19.312Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:33:19.314Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:33:19.314Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T16:33:30.567Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-07T16:33:30.567Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '10:15 PM', checkedIn: false, appointmentDate: '2021-3-7', spotWalkin: 0, profileId: 32798, selectedDocId: 180, orgId: 157, isVideo: 'false', phoneNoOrig: '7019204410', tzOffset: 330 }
2021-03-07T16:33:30.613Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-07T16:33:30.628Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-07T16:33:30.629Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 07-03-2021 10:15 pm. \nBest Wishes and Warm Regards.'
2021-03-07T16:33:30.643Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135316389-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '3281135316389277', message: 'message Submitted successfully' }
2021-03-07T16:33:30.882Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:33:30.882Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:33:30.885Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:33:30.885Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T16:33:30.897Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:33:30.897Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:33:30.898Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:33:30.899Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:33:30.901Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:33:30.901Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T16:33:30.911Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:33:30.911Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T16:33:30.945Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:33:30.946Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:33:30.952Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:33:30.952Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T16:35:13.745Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-07T16:35:13.746Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Ramkumar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 10:15 pm"}'
2021-03-07T16:35:13.746Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Ramkumar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 10:15 pm"}' }
2021-03-07T16:35:13.744Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 07-03-2021 10:15 pm. \nBest Wishes and Warm Regards.'
2021-03-07T16:35:13.763Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135316655-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '8571135316655174', message: 'message Submitted successfully' }
2021-03-07T16:35:13.888Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'febcf769-8342-48c9-ae84-d8a299257bcb' }, MessageId: '010901780d8af4f0-49deffb1-4014-44fe-bcab-ddaadef1360a-000000' }
2021-03-07T16:37:59.872Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-07', startTime: '22:08 PM', timeType: 'today', addSlot: null, originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T16:37:59.873Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-07T16:37:59.874Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Sunday
2021-03-07T16:37:59.869Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-07T16:38:03.780Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-08', addSlot: null, originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T16:38:03.781Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-07T16:38:03.781Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-03-07T16:38:03.780Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-07T16:38:08.632Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%b%', '%b%', '%b%', '%b%' ]
2021-03-07T16:38:08.631Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T16:38:08.798Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%bh%', '%bh%', '%bh%', '%bh%' ]
2021-03-07T16:38:08.797Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T16:38:09.018Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%bhu%', '%bhu%', '%bhu%', '%bhu%' ]
2021-03-07T16:38:09.017Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T16:38:09.849Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%' ]
2021-03-07T16:38:09.848Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T16:38:12.449Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '08:00 AM', checkedIn: 'false', duration: '', appointmentDate: 'Mon Mar 08 2021 11:59:59 GMT+0530 (India Standard Time)', spotWalkin: '0', patientId: '33645', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'true', email: 'bhuvaneswari@naturalminds.co.in', address: '', originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T16:38:12.448Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-07T16:38:12.459Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-07T16:38:13.186Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'bhuvaneswari', email: 'bhuvaneswari@naturalminds.co.in', contact: '9629869926' }
2021-03-07T16:38:13.187Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-07T16:38:13.187Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-07T16:38:13.192Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T16:38:13.203Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T16:38:13.203Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"bhuvaneswari","param2":"Video","param3":"08-03-2021 08:00 am"}'
2021-03-07T16:38:13.204Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"bhuvaneswari","param2":"Video","param3":"08-03-2021 08:00 am"}' }
2021-03-07T16:38:13.199Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nbhuvaneswari has booked Video Appointment for 08-03-2021 08:00 am.'
2021-03-07T16:38:13.231Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135317007-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '6812135317007981', message: 'message Submitted successfully' }
2021-03-07T16:38:13.332Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '2e2274e6-b323-41b0-93e6-24f769d111bf' }, MessageId: '010901780d8db1ea-cb464261-b7d7-447d-a696-b83ba589bbea-000000' }
2021-03-07T16:51:03.384Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:51:03.385Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:51:03.389Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:51:03.389Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T16:51:03.421Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:51:03.422Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:51:03.425Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:51:03.426Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T16:51:03.438Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:51:03.438Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:51:03.440Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:51:03.440Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T16:51:05.389Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:51:05.389Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:51:05.392Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:51:05.393Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T16:51:06.661Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:51:06.662Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:51:06.665Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:51:06.666Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T16:51:11.404Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-07T16:51:11.405Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '10:30 PM', checkedIn: false, appointmentDate: '2021-3-7', spotWalkin: 0, profileId: 32798, selectedDocId: 180, orgId: 157, isVideo: 'true', phoneNoOrig: '7019204410', tzOffset: 330 }
2021-03-07T16:51:11.423Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1926, org_doctor_mapping_id: 520, patient_id: 33647, preffered_time: '10:15 PM', checked_in_time: '22:05:51', created_at: 2021-03-07T16:33:30.000Z, checked_in: 1, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T22:15:00.000Z, end_time: 2021-03-07T22:29:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 0, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-07T16:51:12.270Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'Ramkumar', email: undefined, contact: '7019204410' }
2021-03-07T16:51:12.270Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-07T16:51:12.271Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-07T16:51:12.275Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T16:51:12.291Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T16:51:12.292Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 10:30 pm"}'
2021-03-07T16:51:12.293Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 10:30 pm"}' }
2021-03-07T16:51:12.285Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 07-03-2021 10:30 pm. \nBest Wishes and Warm Regards.'
2021-03-07T16:51:12.289Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nRamkumar has booked Video Appointment for 07-03-2021 10:30 pm.'
2021-03-07T16:51:12.353Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135318491-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '6925135318491496', message: 'message Submitted successfully' }
2021-03-07T16:51:12.356Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135318492-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '3541135318492447', message: 'message Submitted successfully' }
2021-03-07T16:51:12.492Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '8ee31867-2d77-44c6-b801-d9186e02db22' }, MessageId: '010901780d99955d-8c3f2678-51a2-41e2-a400-d46667fb8b6a-000000' }
2021-03-07T16:51:14.155Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:51:14.155Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:51:14.167Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:51:14.176Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:51:14.167Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T16:51:14.176Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:51:14.182Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:51:14.193Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:51:14.183Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T16:51:14.193Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:51:14.202Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:51:14.204Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:51:14.212Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:51:14.212Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T16:51:14.225Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:51:14.225Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T16:52:14.582Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 08-03-2021 12:15 pm.'
2021-03-07T16:52:14.594Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135318611-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '3117135318611274', message: 'message Submitted successfully' }
2021-03-07T16:52:17.659Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 08-03-2021 09:30 am.'
2021-03-07T16:52:17.673Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135318617-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '9418135318617977', message: 'message Submitted successfully' }
2021-03-07T16:52:21.134Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Visalakshi at Life care Hospital has been cancelled for 07-03-2021 08:46 pm.'
2021-03-07T16:52:21.147Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135318625-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '6453135318625721', message: 'message Submitted successfully' }
2021-03-07T16:52:58.726Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:52:58.726Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:52:58.728Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:52:58.729Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T16:52:58.741Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:52:58.742Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:52:58.744Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:52:58.744Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:52:58.746Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:52:58.746Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T16:52:58.755Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:52:58.756Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T16:53:00.154Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:53:00.154Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:53:00.160Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:53:00.160Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T16:53:07.612Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-07T16:53:07.612Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '08:15 AM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32798, selectedDocId: 180, orgId: 157, isVideo: 'true', phoneNoOrig: '7019204410', tzOffset: 330 }
2021-03-07T16:53:07.631Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-07T16:53:08.399Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'Ramkumar', email: undefined, contact: '7019204410' }
2021-03-07T16:53:08.400Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-07T16:53:08.401Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-07T16:53:08.403Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T16:53:08.414Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T16:53:08.415Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"Ramkumar","param2":"Video","param3":"08-03-2021 08:15 am"}'
2021-03-07T16:53:08.416Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"Ramkumar","param2":"Video","param3":"08-03-2021 08:15 am"}' }
2021-03-07T16:53:08.410Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 08:15 am. \nBest Wishes and Warm Regards.'
2021-03-07T16:53:08.413Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nRamkumar has booked Video Appointment for 08-03-2021 08:15 am.'
2021-03-07T16:53:08.443Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135318698-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '8682135318698157', message: 'message Submitted successfully' }
2021-03-07T16:53:08.445Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135318697-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '1594135318697324', message: 'message Submitted successfully' }
2021-03-07T16:53:08.558Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'd0d62b0b-44a5-41ed-a728-06c65f38a37c' }, MessageId: '010901780d9b5ae0-38176974-eb13-41f3-b6c3-536cf99a7bf3-000000' }
2021-03-07T16:53:09.736Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:53:09.736Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:53:09.738Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:53:09.745Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:53:09.738Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T16:53:09.745Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:53:09.748Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:53:09.749Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T16:53:09.760Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:53:09.760Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:53:09.765Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:53:09.765Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T16:53:09.828Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T16:53:09.829Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T16:53:09.832Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T16:53:09.833Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T16:53:42.372Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1926, org_doctor_mapping_id: 520, patient_id: 33647, preffered_time: '10:15 PM', checked_in_time: '22:05:51', created_at: 2021-03-07T16:33:30.000Z, checked_in: 1, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T22:15:00.000Z, end_time: 2021-03-07T22:29:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 0, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1928, org_doctor_mapping_id: 520, patient_id: 33647, preffered_time: '10:30 PM', checked_in_time: '22:21:11', created_at: 2021-03-07T16:51:11.000Z, checked_in: 0, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T22:30:00.000Z, end_time: 2021-03-07T22:44:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_GjptzSBG6Gqc62', razorpay_inv_id: 'inv_GjptyskXHufOXF', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-07T16:53:43.113Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'Ramkumar', email: 'getvisa@gmail.com', contact: '7019204410' }
2021-03-07T16:53:43.114Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-07T16:53:43.115Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-07T16:53:43.120Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T16:53:43.130Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T16:53:43.130Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 10:23 pm"}'
2021-03-07T16:53:43.131Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"Ramkumar","param2":"Video","param3":"07-03-2021 10:23 pm"}' }
2021-03-07T16:53:43.129Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nRamkumar has booked Video Appointment for 07-03-2021 10:23 pm.'
2021-03-07T16:53:43.153Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135318753-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '4836135318753325', message: 'message Submitted successfully' }
2021-03-07T16:53:43.263Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '45470545-3334-4303-8459-1b651e86a049' }, MessageId: '010901780d9be273-69f0faba-31a2-4314-b255-ba5e9f80b92c-000000' }
2021-03-07T16:57:31.375Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1926, org_doctor_mapping_id: 520, patient_id: 33647, preffered_time: '10:15 PM', checked_in_time: '22:05:51', created_at: 2021-03-07T16:33:30.000Z, checked_in: 1, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T22:15:00.000Z, end_time: 2021-03-07T22:29:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 0, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1928, org_doctor_mapping_id: 520, patient_id: 33647, preffered_time: '10:30 PM', checked_in_time: '22:21:11', created_at: 2021-03-07T16:51:11.000Z, checked_in: 0, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T22:30:00.000Z, end_time: 2021-03-07T22:44:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_GjptzSBG6Gqc62', razorpay_inv_id: 'inv_GjptyskXHufOXF', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1930, org_doctor_mapping_id: 520, patient_id: 33647, preffered_time: 'SpotTeleConsultation', checked_in_time: '22:23:42', created_at: 2021-03-07T16:53:42.000Z, checked_in: 0, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T22:23:00.000Z, end_time: 2021-03-07T22:37:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_Gjpwe7zLBT4Lrz', razorpay_inv_id: 'inv_GjpwdczcfK1alI', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-07T16:57:31.385Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-07T16:57:31.389Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-07T16:57:31.389Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Ramkumar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 10:27 pm"}'
2021-03-07T16:57:31.389Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Ramkumar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 10:27 pm"}' }
2021-03-07T16:57:31.388Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 07-03-2021 10:27 pm. \nBest Wishes and Warm Regards.'
2021-03-07T16:57:31.410Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135319152-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '7749135319152742', message: 'message Submitted successfully' }
2021-03-07T16:57:31.499Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '96b3e479-28ee-454c-9774-276fa4bf2028' }, MessageId: '010901780d9f5e0c-b3d3b471-a4ce-4c01-ba9c-d7b7ebb81a67-000000' }
2021-03-07T17:14:41.165Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-07T17:14:41.170Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-07T17:14:41.465Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-07T17:17:59.347Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:17:59.348Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:17:59.350Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:17:59.351Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T17:17:59.399Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:17:59.400Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:17:59.402Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:17:59.402Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T17:17:59.415Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:17:59.415Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:17:59.417Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:17:59.418Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T17:18:03.873Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:18:03.873Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:18:03.875Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:18:03.875Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T17:18:13.838Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-07T17:18:13.839Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '08:30 AM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32798, selectedDocId: 180, orgId: 157, isVideo: 'true', phoneNoOrig: '7019204410', tzOffset: 330 }
2021-03-07T17:18:13.856Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1929, org_doctor_mapping_id: 520, patient_id: 33647, preffered_time: '08:15 AM', checked_in_time: '22:23:07', created_at: 2021-03-07T16:53:07.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T08:15:00.000Z, end_time: 2021-03-08T08:29:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_Gjpw2FxKmKtUQl', razorpay_inv_id: 'inv_Gjpw1iat70CIrJ', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-07T17:18:14.740Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'Ramkumar', email: undefined, contact: '7019204410' }
2021-03-07T17:18:14.741Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-07T17:18:14.741Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-07T17:18:14.743Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T17:18:14.756Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T17:18:14.757Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"Ramkumar","param2":"Video","param3":"08-03-2021 08:30 am"}'
2021-03-07T17:18:14.757Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"Ramkumar","param2":"Video","param3":"08-03-2021 08:30 am"}' }
2021-03-07T17:18:14.750Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 08:30 am. \nBest Wishes and Warm Regards.'
2021-03-07T17:18:14.755Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nRamkumar has booked Video Appointment for 08-03-2021 08:30 am.'
2021-03-07T17:18:14.786Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135321589-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '9868135321589126', message: 'message Submitted successfully' }
2021-03-07T17:18:14.788Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135321590-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '2412135321590261', message: 'message Submitted successfully' }
2021-03-07T17:18:14.894Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'aebbc54d-3932-4983-aa90-d9c045445c6f' }, MessageId: '010901780db25709-ab478736-24f2-4af5-9453-39b35bb8dbbb-000000' }
2021-03-07T17:18:17.595Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:18:17.595Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:18:17.599Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:18:17.599Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T17:18:17.612Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:18:17.612Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:18:17.618Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:18:17.618Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:18:17.620Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:18:17.620Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T17:18:17.640Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:18:17.640Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T17:18:17.658Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:18:17.658Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:18:17.665Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:18:17.666Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T17:18:50.210Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Nagaraj at Bone and Joint clinic has been cancelled for 08-03-2021 08:30 am.'
2021-03-07T17:18:50.227Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135321668-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '5494135321668873', message: 'message Submitted successfully' }
2021-03-07T17:18:53.609Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Nagaraj at Bone and Joint clinic has been cancelled for 08-03-2021 08:15 am.'
2021-03-07T17:18:53.622Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135321673-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '8326135321673198', message: 'message Submitted successfully' }
2021-03-07T17:18:56.540Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Nagaraj at Bone and Joint clinic has been cancelled for 07-03-2021 10:23 pm.'
2021-03-07T17:18:56.553Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135321679-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '3816135321679512', message: 'message Submitted successfully' }
2021-03-07T17:18:59.204Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Nagaraj at Bone and Joint clinic has been cancelled for 07-03-2021 10:30 pm.'
2021-03-07T17:18:59.217Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135321682-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '5652135321682431', message: 'message Submitted successfully' }
2021-03-07T17:19:02.153Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:19:02.153Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:19:02.156Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:19:02.156Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T17:19:02.172Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:19:02.173Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:19:02.176Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:19:02.176Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:19:02.178Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:19:02.178Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T17:19:02.187Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:19:02.187Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T17:19:03.602Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:19:03.602Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:19:03.604Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:19:03.604Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T17:19:11.368Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-07T17:19:11.369Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '08:15 AM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32798, selectedDocId: 180, orgId: 157, isVideo: 'true', phoneNoOrig: '7019204410', tzOffset: 330 }
2021-03-07T17:19:11.387Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-07T17:19:12.082Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'Ramkumar', email: undefined, contact: '7019204410' }
2021-03-07T17:19:12.082Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-07T17:19:12.082Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-07T17:19:12.085Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-07T17:19:12.098Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T17:19:12.100Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"Ramkumar","param2":"Video","param3":"08-03-2021 08:15 am"}'
2021-03-07T17:19:12.100Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"Ramkumar","param2":"Video","param3":"08-03-2021 08:15 am"}' }
2021-03-07T17:19:12.092Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 08:15 am. \nBest Wishes and Warm Regards.'
2021-03-07T17:19:12.096Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nRamkumar has booked Video Appointment for 08-03-2021 08:15 am.'
2021-03-07T17:19:12.123Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135321700-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '1377135321700331', message: 'message Submitted successfully' }
2021-03-07T17:19:12.126Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135321699-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '3418135321699888', message: 'message Submitted successfully' }
2021-03-07T17:19:12.235Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'e1802161-27a5-4d69-b490-2b298ade1fd3' }, MessageId: '010901780db33708-bf254773-6b06-40fc-86f6-df913afb2d34-000000' }
2021-03-07T17:19:13.414Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:19:13.414Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:19:13.416Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:19:13.417Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-07T17:19:13.471Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:19:13.471Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:19:13.472Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:19:13.473Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:19:13.487Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:19:13.488Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T17:19:13.499Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:19:13.500Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Sunday
2021-03-07T17:19:13.520Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-07T17:19:13.521Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-07T17:19:13.526Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-07T17:19:13.527Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-07T17:19:36.946Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-07T17:19:36.948Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-07T17:19:37.150Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-07T17:23:14.689Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1924, org_doctor_mapping_id: 520, patient_id: 33646, preffered_time: '10:45 PM', checked_in_time: '21:31:47', created_at: 2021-03-07T16:01:47.000Z, checked_in: 0, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T22:45:00.000Z, end_time: 2021-03-07T22:59:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_Gjp3nunW26Mkiy', razorpay_inv_id: 'inv_Gjp3nQEdsUczTe', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-07T17:23:14.700Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-07T17:23:14.706Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T17:23:14.706Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 10:53 pm"}'
2021-03-07T17:23:14.707Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 10:53 pm"}' }
2021-03-07T17:23:14.704Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sudharshan,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 07-03-2021 10:53 pm. \nBest Wishes and Warm Regards.'
2021-03-07T17:23:14.730Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135322096-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '2618135322096658', message: 'message Submitted successfully' }
2021-03-07T17:23:14.805Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '3080c24f-bd38-44f7-958d-7463cf015f9c' }, MessageId: '010901780db6eaaf-453699c5-2c3c-44a0-8a2d-fb1dc30fdaec-000000' }
2021-03-07T17:24:37.087Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-07T17:24:37.089Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-07T17:24:37.308Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-07T17:30:12.520Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-07T17:30:12.522Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-07T17:30:12.720Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-07T17:31:45.981Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1924, org_doctor_mapping_id: 520, patient_id: 33646, preffered_time: '10:45 PM', checked_in_time: '21:31:47', created_at: 2021-03-07T16:01:47.000Z, checked_in: 0, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T22:45:00.000Z, end_time: 2021-03-07T22:59:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_Gjp3nunW26Mkiy', razorpay_inv_id: 'inv_Gjp3nQEdsUczTe', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1934, org_doctor_mapping_id: 520, patient_id: 33646, preffered_time: 'SpotWalkin', checked_in_time: '22:53:28', created_at: 2021-03-07T17:23:14.000Z, checked_in: 1, appointment_date: 2021-03-07T00:00:00.000Z, start_time: 2021-03-07T22:53:00.000Z, end_time: 2021-03-07T23:07:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-07T17:31:45.990Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-07T17:31:45.994Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T17:31:45.997Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 11:01 pm"}'
2021-03-07T17:31:45.997Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"07-03-2021 11:01 pm"}' }
2021-03-07T17:31:45.993Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sudharshan,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 07-03-2021 11:01 pm. \nBest Wishes and Warm Regards.'
2021-03-07T17:31:46.013Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135322867-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '1218135322867256', message: 'message Submitted successfully' }
2021-03-07T17:31:46.136Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '7c05be1b-adc4-4ee4-9893-d4777ae2cc0e' }, MessageId: '010901780dbeb7f4-7c3a0895-945c-4599-8298-9a5f636ba2d9-000000' }
2021-03-07T17:32:33.462Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-07T17:32:33.464Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-07T17:32:33.652Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-07T17:42:46.257Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-07', startTime: '23:12 PM', timeType: 'today', addSlot: null, originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T17:42:46.259Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-07T17:42:46.259Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Sunday
2021-03-07T17:42:46.256Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-07T17:42:52.976Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-08', addSlot: null, originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T17:42:52.977Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-07T17:42:52.977Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-03-07T17:42:52.976Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-07T17:43:06.513Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%V%', '%V%', '%V%', '%V%' ]
2021-03-07T17:43:06.512Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T17:43:08.498Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%', '%bhuvaneswari%' ]
2021-03-07T17:43:08.496Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-07T17:43:14.135Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '08:45 AM', checkedIn: 'false', duration: '', appointmentDate: 'Mon Mar 08 2021 11:59:59 GMT+0530 (India Standard Time)', spotWalkin: '0', patientId: '33645', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: 'bhuvaneswari@naturalminds.co.in', address: '', originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-07T17:43:14.133Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-07T17:43:14.145Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1927, org_doctor_mapping_id: 520, patient_id: 33645, preffered_time: '08:00 AM', checked_in_time: '22:08:12', created_at: 2021-03-07T16:38:12.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T08:00:00.000Z, end_time: 2021-03-08T08:14:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_GjpgH3BZJAftkI', razorpay_inv_id: 'inv_GjpgGZFGt0PSDZ', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-07T17:43:14.154Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-07T17:43:14.159Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-07T17:43:14.160Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"bhuvaneswari","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 08:45 am"}'
2021-03-07T17:43:14.162Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"bhuvaneswari","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 08:45 am"}' }
2021-03-07T17:43:14.158Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear bhuvaneswari,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 08:45 am. \nBest Wishes and Warm Regards.'
2021-03-07T17:43:14.182Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135323688-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '3886135323688588', message: 'message Submitted successfully' }
2021-03-07T17:43:14.260Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '9288d2e1-c8d7-4560-9529-1da7231a3364' }, MessageId: '010901780dc93810-ca528d35-cbba-4535-b217-50fbff868e01-000000' }
2021-03-07T18:07:58.263Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your login otp is 4155.'
2021-03-07T18:07:58.398Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135325271-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '2797135325271593', message: 'message Submitted successfully' }
2021-03-08T05:53:31.072Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Your login otp is 8012.'
2021-03-08T05:53:31.091Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135457707-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '8894135457707623', message: 'message Submitted successfully' }
2021-03-08T05:56:28.436Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9818829124 and messageData! 'Your login otp is 2564.'
2021-03-08T05:56:28.459Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135458987-1', mobile: '919818829124', status: 'SUBMITTED' } ], msgid: '8964135458987246', message: 'message Submitted successfully' }
2021-03-08T06:00:57.600Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-08', startTime: '11:30 AM', timeType: 'today', selectedDoctorUserId: 180, addSlot: null, originalUserTypeId: 77, originalOrgUserMappingId: 522, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Nurse', userId: 571, tzOffset: 330 }
2021-03-08T06:00:57.600Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-08T06:00:57.604Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-08T06:00:57.604Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-03-08T06:01:02.241Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%s%', '%s%', '%s%', '%s%' ]
2021-03-08T06:01:02.240Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T06:01:02.609Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%su%', '%su%', '%su%', '%su%' ]
2021-03-08T06:01:02.608Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T06:01:03.255Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sud%', '%sud%', '%sud%', '%sud%' ]
2021-03-08T06:01:03.255Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T06:01:03.998Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sudharshan%', '%sudharshan%', '%sudharshan%', '%sudharshan%' ]
2021-03-08T06:01:03.998Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T06:01:06.855Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '12:00 PM', checkedIn: 'false', duration: '', appointmentDate: 'Mon Mar 08 2021 11:30:58 GMT+0530 (India Standard Time)', spotWalkin: '0', patientId: '33646', checkedInTime: 'null', selectedDocUserMapping: '520', selectedDocId: '180', isVideo: 'false', email: 'bhuvaneswari@naturalminds.co.in', address: '', originalUserTypeId: 77, originalOrgUserMappingId: 522, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Nurse', userId: 571, tzOffset: 330 }
2021-03-08T06:01:06.854Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-08T06:01:06.864Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-08T06:01:06.876Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T06:01:06.880Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-08T06:01:06.881Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 12:00 pm"}'
2021-03-08T06:01:06.881Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 12:00 pm"}' }
2021-03-08T06:01:06.879Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sudharshan,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 12:00 pm. \nBest Wishes and Warm Regards.'
2021-03-08T06:01:06.912Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135460950-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '4276135460950288', message: 'message Submitted successfully' }
2021-03-08T06:01:07.069Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'e77a044f-ff97-42d4-b733-15f17557615d' }, MessageId: '01090178106cc46c-fcb5f534-8256-4d98-91a0-251b14c7882c-000000' }
2021-03-08T06:03:17.327Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:03:17.327Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:03:17.329Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:03:17.329Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:03:18.286Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:03:18.286Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:03:18.287Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:03:18.288Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:03:21.003Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body [Object: null prototype] { checkedIn: 'false', spotWalkin: '0', patientId: '33647', isVideo: 'false', consultationAmount: '100', preferredTime: '11:45 AM', duration: '', appointmentDate: '2021-3-9', checkedInTime: '', selectedDocUserMapping: '', selectedDocId: '', email: '', address: '', originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-08T06:03:21.002Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-08T06:03:21.012Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-08T06:03:21.021Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T06:03:21.025Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 09-03-2021 11:45 am. \nBest Wishes and Warm Regards.'
2021-03-08T06:03:21.042Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135461926-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '3875135461926578', message: 'message Submitted successfully' }
2021-03-08T06:03:21.519Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:03:21.520Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:03:21.523Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:03:21.523Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:03:47.679Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your appointment with Nagaraj at Bone and Joint clinic has been cancelled for 09-03-2021 11:45 am.'
2021-03-08T06:03:47.707Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135462116-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '2499135462116985', message: 'message Submitted successfully' }
2021-03-08T06:05:33.619Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1933, org_doctor_mapping_id: 520, patient_id: 33647, preffered_time: '08:15 AM', checked_in_time: '22:49:11', created_at: 2021-03-07T17:19:11.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T08:15:00.000Z, end_time: 2021-03-08T08:29:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_GjqNZ4DTMMzqvT', razorpay_inv_id: 'inv_GjqNYZa3dCELGE', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T06:05:33.627Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T06:05:33.634Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-08T06:05:33.635Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Ramkumar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 11:35 am"}'
2021-03-08T06:05:33.635Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Ramkumar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 11:35 am"}' }
2021-03-08T06:05:33.633Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 11:35 am. \nBest Wishes and Warm Regards.'
2021-03-08T06:05:33.693Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135462810-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '4926135462810965', message: 'message Submitted successfully' }
2021-03-08T06:05:33.845Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '8417f8d5-d089-4686-9fc5-bbf99b660628' }, MessageId: '010901781070d686-dea30a80-3cef-4473-90ac-616c924770e3-000000' }
2021-03-08T06:16:03.120Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Your login otp is 6153.'
2021-03-08T06:16:03.147Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135466945-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '5499135466945752', message: 'message Submitted successfully' }
2021-03-08T06:17:30.611Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 4073.'
2021-03-08T06:17:30.647Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135467486-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '6142135467486725', message: 'message Submitted successfully' }
2021-03-08T06:22:15.107Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9818829124 and messageData! 'Your login otp is 7021.'
2021-03-08T06:22:15.128Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135469214-1', mobile: '919818829124', status: 'SUBMITTED' } ], msgid: '8216135469214442', message: 'message Submitted successfully' }
2021-03-08T06:25:49.638Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9818829124 and messageData! 'Your login otp is 5765.'
2021-03-08T06:25:49.655Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135470629-1', mobile: '919818829124', status: 'SUBMITTED' } ], msgid: '9737135470629971', message: 'message Submitted successfully' }
2021-03-08T06:32:41.695Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Your login otp is 3864.'
2021-03-08T06:32:41.721Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135474097-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '5795135474097923', message: 'message Submitted successfully' }
2021-03-08T06:33:06.287Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 8525.'
2021-03-08T06:33:06.312Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135474233-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '3574135474233456', message: 'message Submitted successfully' }
2021-03-08T06:33:40.782Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:33:40.782Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:33:40.785Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:33:40.795Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:33:40.786Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:33:40.796Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:33:40.801Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:33:40.801Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:33:40.812Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:33:40.812Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:33:40.824Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:33:40.824Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:35:10.847Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:35:10.847Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:35:10.851Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:35:10.851Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:35:10.864Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:35:10.864Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:35:10.866Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:35:10.866Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:35:10.881Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:35:10.882Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:35:10.886Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:35:10.886Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:35:58.020Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:35:58.020Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:35:58.024Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:35:58.024Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:35:58.047Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:35:58.047Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:35:58.050Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:35:58.051Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:35:58.052Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:35:58.052Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:35:58.060Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:35:58.060Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:35:59.783Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:35:59.783Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:35:59.787Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:35:59.787Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:36:16.508Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-08T06:36:16.508Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '12:15 PM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32788, selectedDocId: 180, orgId: 157, isVideo: 'true', phoneNoOrig: '9650777225', tzOffset: 330 }
2021-03-08T06:36:16.545Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-08T06:36:17.309Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'Dhanendra Singh', email: undefined, contact: '9650777225' }
2021-03-08T06:36:17.309Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-08T06:36:17.310Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-08T06:36:17.313Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-08T06:36:17.326Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-08T06:36:17.327Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"Dhanendra Singh","param2":"Video","param3":"08-03-2021 12:15 pm"}'
2021-03-08T06:36:17.327Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"Dhanendra Singh","param2":"Video","param3":"08-03-2021 12:15 pm"}' }
2021-03-08T06:36:17.322Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Dear Dhanendra Singh,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 12:15 pm. \nBest Wishes and Warm Regards.'
2021-03-08T06:36:17.325Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nDhanendra Singh has booked Video Appointment for 08-03-2021 12:15 pm.'
2021-03-08T06:36:17.366Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135475497-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '1823135475497562', message: 'message Submitted successfully' }
2021-03-08T06:36:17.368Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135475498-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '9461135475498376', message: 'message Submitted successfully' }
2021-03-08T06:36:17.579Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'c297ddac-1214-43a9-9567-34a109edf654' }, MessageId: '01090178108cf84e-a4173f1d-cdef-4dab-b4b9-9ab7d849f0c2-000000' }
2021-03-08T06:36:21.530Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:21.530Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:21.531Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:21.532Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:36:21.541Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:21.541Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:21.543Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:21.543Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:36:21.559Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:21.559Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:21.560Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:21.560Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:21.563Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:21.565Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:36:21.573Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:21.573Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:36:38.320Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:38.321Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:38.325Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:38.325Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:36:38.336Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:38.337Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:38.339Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:38.340Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:36:38.372Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:38.372Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:38.374Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:38.374Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:36:40.655Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:40.655Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:40.660Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:40.660Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:36:51.170Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-08T06:36:51.170Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '12:30 PM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32797, selectedDocId: 180, orgId: 157, isVideo: 'false', phoneNoOrig: '9629869926', tzOffset: 330 }
2021-03-08T06:36:51.213Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-08T06:36:51.228Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T06:36:51.230Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sankar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 12:30 pm. \nBest Wishes and Warm Regards.'
2021-03-08T06:36:51.253Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135475685-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '8187135475685146', message: 'message Submitted successfully' }
2021-03-08T06:36:51.483Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:51.483Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:51.488Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:51.489Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:36:51.497Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:51.497Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:51.501Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:51.501Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:36:51.525Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:51.526Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:51.547Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:36:51.548Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:36:51.550Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:51.551Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:36:51.558Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:36:51.558Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:37:53.258Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:37:53.258Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:37:53.260Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:37:53.261Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:38:18.576Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-08T06:38:18.576Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '01:30 PM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32797, selectedDocId: 180, orgId: 157, id: 1941, appointmentId: 1941, isVideo: 'false', phoneNoOrig: '9629869926', tzOffset: 330 }
2021-03-08T06:38:18.592Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1941, org_doctor_mapping_id: 520, patient_id: 33649, preffered_time: '12:30 PM', checked_in_time: '12:06:51', created_at: 2021-03-08T06:36:51.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T12:30:00.000Z, end_time: 2021-03-08T12:44:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T06:38:18.594Z |-[32minfo[39m [service:appointment]: In update appointment 1941
2021-03-08T06:38:18.609Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sankar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 01:30 pm. \nBest Wishes and Warm Regards.'
2021-03-08T06:38:18.612Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nsankar has booked In Person Appointment for 08-03-2021 01:30 pm.'
2021-03-08T06:38:18.632Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135476134-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '9768135476134424', message: 'message Submitted successfully' }
2021-03-08T06:38:18.634Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135476135-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '8275135476135224', message: 'message Submitted successfully' }
2021-03-08T06:38:18.855Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:38:18.856Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:38:18.859Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:38:18.859Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:38:34.529Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Your appointment with Nagaraj at Bone and Joint clinic has been cancelled for 08-03-2021 01:30 pm.'
2021-03-08T06:38:34.548Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135476229-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '3766135476229692', message: 'message Submitted successfully' }
2021-03-08T06:38:46.297Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:38:46.298Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:38:46.302Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:38:46.302Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:38:46.304Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:38:46.305Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:38:46.305Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:38:46.306Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:38:46.312Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:38:46.312Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:38:46.321Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:38:46.321Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:38:47.909Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:38:47.909Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:38:47.915Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:38:47.915Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:38:48.858Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:38:48.858Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:38:48.860Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:38:48.860Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:39:00.672Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-08T06:39:00.672Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '08:30 AM', checkedIn: false, appointmentDate: '2021-3-9', spotWalkin: 0, profileId: 32797, selectedDocId: 180, orgId: 157, isVideo: 'true', phoneNoOrig: '9629869926', tzOffset: 330 }
2021-03-08T06:39:00.688Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-08T06:39:01.444Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'sankar', email: undefined, contact: '9629869926' }
2021-03-08T06:39:01.444Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-08T06:39:01.445Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-08T06:39:01.447Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-08T06:39:01.457Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-08T06:39:01.457Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"sankar","param2":"Video","param3":"09-03-2021 08:30 am"}'
2021-03-08T06:39:01.457Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"sankar","param2":"Video","param3":"09-03-2021 08:30 am"}' }
2021-03-08T06:39:01.453Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sankar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 09-03-2021 08:30 am. \nBest Wishes and Warm Regards.'
2021-03-08T06:39:01.456Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nsankar has booked Video Appointment for 09-03-2021 08:30 am.'
2021-03-08T06:39:01.481Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135476406-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '3929135476406464', message: 'message Submitted successfully' }
2021-03-08T06:39:01.483Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135476407-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '8353135476407667', message: 'message Submitted successfully' }
2021-03-08T06:39:01.587Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '8e491516-5dda-44dd-a201-7713bb3df5cb' }, MessageId: '01090178108f7976-9443ef52-ece2-4209-b146-23a8c37bc677-000000' }
2021-03-08T06:39:02.921Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:39:02.921Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:39:02.924Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:39:02.924Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:39:02.936Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:39:02.936Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:39:02.959Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:39:02.960Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:39:02.960Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:39:02.961Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:39:02.975Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:39:02.975Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:39:02.992Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:39:02.993Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:39:03.006Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:39:03.007Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:41:44.476Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-08T06:41:45.183Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'sankar', email: 'bhuvaneswari@naturalminds.co.in', contact: '9629869926' }
2021-03-08T06:41:45.184Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-08T06:41:45.184Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-08T06:41:45.188Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-08T06:41:45.196Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-08T06:41:45.197Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"sankar","param2":"Video","param3":"08-03-2021 12:11 pm"}'
2021-03-08T06:41:45.197Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"sankar","param2":"Video","param3":"08-03-2021 12:11 pm"}' }
2021-03-08T06:41:45.195Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nsankar has booked Video Appointment for 08-03-2021 12:11 pm.'
2021-03-08T06:41:45.216Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135477380-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '1828135477380495', message: 'message Submitted successfully' }
2021-03-08T06:41:45.389Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '0de5bb2e-23e6-4dbf-a933-b5ec843de06f' }, MessageId: '010901781091f90b-43f2d398-90ef-47f8-aaf2-89db75042b4e-000000' }
2021-03-08T06:42:43.837Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:42:43.837Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:42:43.839Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:42:43.840Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:42:44.813Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:42:44.813Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:42:44.814Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:42:44.815Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:42:58.164Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body [Object: null prototype] { checkedIn: 'false', spotWalkin: '0', patientId: '33649', isVideo: 'true', consultationAmount: '100', preferredTime: '11:15 AM', duration: '', appointmentDate: '2021-3-9', checkedInTime: '', selectedDocUserMapping: '', selectedDocId: '', email: '', address: '', originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-08T06:42:58.164Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-08T06:42:58.170Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1942, org_doctor_mapping_id: 520, patient_id: 33649, preffered_time: '08:30 AM', checked_in_time: '12:09:00', created_at: 2021-03-08T06:39:00.000Z, checked_in: 0, appointment_date: 2021-03-09T00:00:00.000Z, start_time: 2021-03-09T08:30:00.000Z, end_time: 2021-03-09T08:44:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_Gk40RZoARtBAET', razorpay_inv_id: 'inv_Gk40R3kT9ZMnoB', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T06:42:58.729Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Customer Details : { name: 'sankar', email: '', contact: '9629869926' }
2021-03-08T06:42:58.729Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Amount for which the link has been generated 114.75
2021-03-08T06:42:58.730Z |-[32minfo[39m [utilities -> AppointmentUtility.js]: Payment link has been sent!
2021-03-08T06:42:58.732Z |-[32minfo[39m [service:appointment]: In Video Appointment
2021-03-08T06:42:58.742Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentNotification , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-08T06:42:58.742Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"Nagaraj","param1":"sankar","param2":"Video","param3":"09-03-2021 11:15 am"}'
2021-03-08T06:42:58.743Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmailForDoctor', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Nagaraj","param1":"sankar","param2":"Video","param3":"09-03-2021 11:15 am"}' }
2021-03-08T06:42:58.740Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear Nagaraj,\nsankar has booked Video Appointment for 09-03-2021 11:15 am.'
2021-03-08T06:42:58.766Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135477815-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '3821135477815476', message: 'message Submitted successfully' }
2021-03-08T06:42:58.932Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '5e1080b1-97d6-4a81-9eb0-e1a1c477a0b1' }, MessageId: '0109017810931858-c64bf700-9091-4f9f-baa5-2b34694ef4b2-000000' }
2021-03-08T06:42:59.177Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:42:59.177Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:42:59.179Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:42:59.179Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:43:43.200Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 1667.'
2021-03-08T06:43:43.223Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135478143-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '6771135478143255', message: 'message Submitted successfully' }
2021-03-08T06:44:18.455Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 9021.'
2021-03-08T06:44:18.473Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135478368-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '3143135478368579', message: 'message Submitted successfully' }
2021-03-08T06:44:57.302Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:44:57.302Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:44:57.304Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:44:57.304Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:44:57.307Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:44:57.308Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:44:57.320Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:44:57.320Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:44:57.336Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:44:57.336Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:44:57.338Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:44:57.339Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:45:02.714Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:45:02.714Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:45:02.716Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:45:02.717Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:45:02.731Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:45:02.731Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:45:02.738Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:45:02.738Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:45:02.762Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:45:02.762Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:45:02.767Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:45:02.767Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:46:18.675Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:46:18.675Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:46:18.679Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:46:18.680Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:46:18.695Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:46:18.681Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:46:18.681Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:46:18.698Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:46:18.700Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:46:18.700Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:46:18.705Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:46:18.705Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:46:27.814Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:46:27.815Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:46:27.818Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:46:27.818Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:46:27.834Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:46:27.835Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:46:27.838Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:46:27.845Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:46:27.839Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:46:27.845Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:46:27.850Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:46:27.850Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:48:10.559Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 5471.'
2021-03-08T06:48:10.576Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135479924-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '7415135479924668', message: 'message Submitted successfully' }
2021-03-08T06:48:41.688Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8884406335 and messageData! 'Your login otp is 7481.'
2021-03-08T06:48:41.704Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135480103-1', mobile: '918884406335', status: 'SUBMITTED' } ], msgid: '8336135480103127', message: 'message Submitted successfully' }
2021-03-08T06:49:16.384Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:49:16.384Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:49:16.389Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:49:16.389Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:49:16.396Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:49:16.396Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:49:16.398Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:49:16.398Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:49:16.399Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:49:16.399Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:49:16.405Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:49:16.406Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:51:05.843Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:51:05.843Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:51:05.845Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:51:05.845Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:51:05.856Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:51:05.856Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:51:05.861Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:51:05.861Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:51:05.879Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:51:05.879Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:51:05.880Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:51:05.883Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:51:06.972Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:51:06.972Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:51:06.975Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:51:06.976Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:51:10.139Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-08T06:51:10.139Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '01:00 PM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32797, selectedDocId: 180, orgId: 157, isVideo: 'false', phoneNoOrig: '9629869926', tzOffset: 330 }
2021-03-08T06:51:10.156Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1943, org_doctor_mapping_id: 520, patient_id: 33649, preffered_time: 'SpotTeleConsultation', checked_in_time: '12:11:44', created_at: 2021-03-08T06:41:44.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T12:11:00.000Z, end_time: 2021-03-08T12:25:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_Gk43KKRtBc3jp5', razorpay_inv_id: 'inv_Gk43JpbXfmIHv9', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T06:51:10.164Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T06:51:10.166Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sankar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 01:00 pm. \nBest Wishes and Warm Regards.'
2021-03-08T06:51:10.183Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135480938-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '4741135480938199', message: 'message Submitted successfully' }
2021-03-08T06:51:10.378Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:51:10.378Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:51:10.379Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:51:10.381Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:51:10.380Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:51:10.381Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:51:10.383Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:51:10.384Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:51:10.391Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:51:10.391Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T06:51:10.402Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:51:10.402Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T06:51:10.436Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T06:51:10.436Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T06:51:10.448Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T06:51:10.448Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T06:54:17.987Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T06:54:17.989Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-08T06:54:18.177Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T06:54:39.389Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T06:54:39.390Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-08T06:54:39.538Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T06:54:39.539Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendPrescriptionEmail function of AWSSESUtility class  =>  Patient Name : sankar , patient Email : bhuvaneswari@naturalminds.co.in
2021-03-08T07:39:46.117Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T07:39:46.119Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T07:39:46.122Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T07:39:46.132Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T07:39:46.123Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T07:39:46.133Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T07:39:46.134Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T07:39:46.134Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T07:39:46.137Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T07:39:46.137Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T07:39:46.149Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T07:39:46.149Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T07:41:20.588Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T07:41:20.588Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T07:41:20.590Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T07:41:20.590Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T07:41:20.617Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T07:41:20.617Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T07:41:20.618Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T07:41:20.619Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T07:41:20.634Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T07:41:20.634Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T07:41:20.638Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T07:41:20.638Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T07:46:20.832Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1943, org_doctor_mapping_id: 520, patient_id: 33649, preffered_time: 'SpotTeleConsultation', checked_in_time: '12:11:44', created_at: 2021-03-08T06:41:44.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T12:11:00.000Z, end_time: 2021-03-08T12:25:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_Gk43KKRtBc3jp5', razorpay_inv_id: 'inv_Gk43JpbXfmIHv9', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1945, org_doctor_mapping_id: 520, patient_id: 33649, preffered_time: '01:00 PM', checked_in_time: '12:21:18', created_at: 2021-03-08T06:51:10.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T13:00:00.000Z, end_time: 2021-03-08T13:14:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T07:46:20.841Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T07:46:20.852Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-08T07:46:20.853Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"sankar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 01:16 pm"}'
2021-03-08T07:46:20.853Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"sankar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 01:16 pm"}' }
2021-03-08T07:46:20.848Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sankar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 01:16 pm. \nBest Wishes and Warm Regards.'
2021-03-08T07:46:21.004Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135501112-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '9143135501112898', message: 'message Submitted successfully' }
2021-03-08T07:46:21.027Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '9385888c-3449-47c8-810d-9c45f65162f9' }, MessageId: '0109017810cd1c5b-8da703fd-de09-4266-a8e0-71a041c533ab-000000' }
2021-03-08T07:47:09.019Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T07:47:09.021Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-08T07:47:09.220Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T07:47:10.419Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T07:47:10.420Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-08T07:47:10.559Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T07:50:19.832Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1933, org_doctor_mapping_id: 520, patient_id: 33647, preffered_time: '08:15 AM', checked_in_time: '22:49:11', created_at: 2021-03-07T17:19:11.000Z, checked_in: 0, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T08:15:00.000Z, end_time: 2021-03-08T08:29:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_GjqNZ4DTMMzqvT', razorpay_inv_id: 'inv_GjqNYZa3dCELGE', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1939, org_doctor_mapping_id: 520, patient_id: 33647, preffered_time: 'SpotWalkin', checked_in_time: '11:35:37', created_at: 2021-03-08T06:05:33.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T11:35:00.000Z, end_time: 2021-03-08T11:49:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T07:50:19.840Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T07:50:19.844Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.com
2021-03-08T07:50:19.845Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.com and TemplateData! '{"param0":"Ramkumar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 01:20 pm"}'
2021-03-08T07:50:19.845Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Ramkumar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 01:20 pm"}' }
2021-03-08T07:50:19.843Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 01:20 pm. \nBest Wishes and Warm Regards.'
2021-03-08T07:50:19.909Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135502569-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '2161135502569973', message: 'message Submitted successfully' }
2021-03-08T07:50:20.017Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'f216666c-4b29-4d9c-9d06-7f22533e175d' }, MessageId: '0109017810d0c1e0-8cf531b3-5aaf-484b-8255-63316054aec0-000000' }
2021-03-08T07:51:10.671Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T07:51:10.672Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-08T07:51:10.764Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T07:51:13.647Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T07:51:13.649Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-08T07:51:13.752Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T10:18:57.687Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-08', startTime: '15:48 PM', timeType: 'today', selectedDoctorUserId: 180, addSlot: null, originalUserTypeId: 77, originalOrgUserMappingId: 522, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Nurse', userId: 571, tzOffset: 330 }
2021-03-08T10:18:57.686Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-08T10:18:57.690Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-08T10:18:57.690Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-03-08T10:19:07.862Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sa%', '%sa%', '%sa%', '%sa%' ]
2021-03-08T10:19:07.861Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:19:10.982Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sa%', '%sa%', '%sa%', '%sa%' ]
2021-03-08T10:19:10.981Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:19:11.222Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sar%', '%sar%', '%sar%', '%sar%' ]
2021-03-08T10:19:11.221Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:19:12.702Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%s%', '%s%', '%s%', '%s%' ]
2021-03-08T10:19:12.701Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:19:12.942Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%su%', '%su%', '%su%', '%su%' ]
2021-03-08T10:19:12.941Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:19:13.402Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sudha%', '%sudha%', '%sudha%', '%sudha%' ]
2021-03-08T10:19:13.401Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:19:14.342Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sudharshan%', '%sudharshan%', '%sudharshan%', '%sudharshan%' ]
2021-03-08T10:19:14.341Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:19:16.995Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '04:00 PM', checkedIn: 'false', duration: '', appointmentDate: 'Mon Mar 08 2021 15:48:57 GMT+0530 (India Standard Time)', spotWalkin: '0', patientId: '33646', checkedInTime: 'null', selectedDocUserMapping: '520', selectedDocId: '180', isVideo: 'false', email: 'bhuvaneswari@naturalminds.co.in', address: '', originalUserTypeId: 77, originalOrgUserMappingId: 522, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Nurse', userId: 571, tzOffset: 330 }
2021-03-08T10:19:16.994Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-08T10:19:17.000Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1937, org_doctor_mapping_id: 520, patient_id: 33646, preffered_time: '12:00 PM', checked_in_time: '11:31:13', created_at: 2021-03-08T06:01:06.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T12:00:00.000Z, end_time: 2021-03-08T12:14:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T10:19:17.008Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T10:19:17.014Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-08T10:19:17.015Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 04:00 pm"}'
2021-03-08T10:19:17.015Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 04:00 pm"}' }
2021-03-08T10:19:17.010Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sudharshan,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 04:00 pm. \nBest Wishes and Warm Regards.'
2021-03-08T10:19:17.156Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '76c25009-3500-4aa2-8f02-b6b0da729a23' }, MessageId: '01090178115920d1-832832a8-8725-4698-89b0-07e377afcd87-000000' }
2021-03-08T10:19:17.172Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135574720-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '2743135574720588', message: 'message Submitted successfully' }
2021-03-08T10:34:09.721Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-08', startTime: '16:04 PM', timeType: 'today', selectedDoctorUserId: 180, addSlot: null, originalUserTypeId: 77, originalOrgUserMappingId: 522, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Nurse', userId: 571, tzOffset: 330 }
2021-03-08T10:34:09.720Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-08T10:34:09.723Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-08T10:34:09.723Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-03-08T10:34:17.261Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%v%', '%v%', '%v%', '%v%' ]
2021-03-08T10:34:17.261Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:34:17.741Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%vis%', '%vis%', '%vis%', '%vis%' ]
2021-03-08T10:34:17.741Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:34:18.037Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%visa%', '%visa%', '%visa%', '%visa%' ]
2021-03-08T10:34:18.036Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:34:19.321Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%s%', '%s%', '%s%', '%s%' ]
2021-03-08T10:34:19.321Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:34:19.567Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%su%', '%su%', '%su%', '%su%' ]
2021-03-08T10:34:19.566Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:34:20.201Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sud%', '%sud%', '%sud%', '%sud%' ]
2021-03-08T10:34:20.200Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:34:22.241Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sudharshan%', '%sudharshan%', '%sudharshan%', '%sudharshan%' ]
2021-03-08T10:34:22.240Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:35:04.536Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sudharsha%', '%sudharsha%', '%sudharsha%', '%sudharsha%' ]
2021-03-08T10:35:04.536Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:35:05.281Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sudharsh%', '%sudharsh%', '%sudharsh%', '%sudharsh%' ]
2021-03-08T10:35:05.281Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:35:06.582Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%sudharshan%', '%sudharshan%', '%sudharshan%', '%sudharshan%' ]
2021-03-08T10:35:06.581Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T10:35:14.683Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '04:15 PM', checkedIn: 'false', duration: '', appointmentDate: 'Mon Mar 08 2021 16:04:09 GMT+0530 (India Standard Time)', spotWalkin: '0', patientId: '33646', checkedInTime: 'null', selectedDocUserMapping: '520', selectedDocId: '180', isVideo: 'false', email: 'bhuvaneswari@naturalminds.co.in', address: '', originalUserTypeId: 77, originalOrgUserMappingId: 522, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Nurse', userId: 571, tzOffset: 330 }
2021-03-08T10:35:14.683Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-08T10:35:14.689Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1937, org_doctor_mapping_id: 520, patient_id: 33646, preffered_time: '12:00 PM', checked_in_time: '11:31:13', created_at: 2021-03-08T06:01:06.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T12:00:00.000Z, end_time: 2021-03-08T12:14:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1948, org_doctor_mapping_id: 520, patient_id: 33646, preffered_time: '04:00 PM', checked_in_time: '15:56:41', created_at: 2021-03-08T10:19:17.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T16:00:00.000Z, end_time: 2021-03-08T16:14:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T10:35:14.696Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T10:35:14.699Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-08T10:35:14.699Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 04:15 pm"}'
2021-03-08T10:35:14.699Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"sudharshan","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 04:15 pm"}' }
2021-03-08T10:35:14.698Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sudharshan,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 04:15 pm. \nBest Wishes and Warm Regards.'
2021-03-08T10:35:14.720Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135590063-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '5912135590063554', message: 'message Submitted successfully' }
2021-03-08T10:35:14.834Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '9c961fcf-100e-4977-8e77-46cebe97d450' }, MessageId: '010901781167bdac-e611a0e7-8d0c-47d5-a2a0-c49b7c8c01a2-000000' }
2021-03-08T11:57:57.126Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T11:57:57.126Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T11:57:57.127Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T11:57:57.128Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T11:57:57.183Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T11:57:57.183Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T11:57:57.185Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T11:57:57.185Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T11:57:57.194Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T11:57:57.194Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T11:57:57.196Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T11:57:57.196Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T11:57:58.443Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T11:57:58.444Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T11:57:58.447Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T11:57:58.447Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T11:58:15.394Z |-[32minfo[39m [router:appointment]: in bookpatientappointment
2021-03-08T11:58:15.394Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '10:00 PM', checkedIn: false, appointmentDate: '2021-3-8', spotWalkin: 0, profileId: 32801, selectedDocId: 180, orgId: 157, isVideo: 'false', phoneNoOrig: '9818829124', tzOffset: 330 }
2021-03-08T11:58:15.424Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-08T11:58:15.430Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T11:58:15.431Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9818829124 and messageData! 'Dear DapinderSingh,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 10:00 pm. \nBest Wishes and Warm Regards.'
2021-03-08T11:58:15.449Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135624596-1', mobile: '919818829124', status: 'SUBMITTED' } ], msgid: '5596135624596736', message: 'message Submitted successfully' }
2021-03-08T11:58:15.905Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T11:58:15.905Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T11:58:15.907Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T11:58:15.907Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T11:58:15.930Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T11:58:15.930Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T11:58:15.934Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T11:58:15.934Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T11:58:15.935Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T11:58:15.935Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T11:58:15.945Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T11:58:15.945Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T11:58:15.946Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T11:58:15.947Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T11:58:15.963Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T11:58:15.963Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T12:04:13.564Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:04:13.565Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:04:13.725Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:04:18.048Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:04:18.049Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:04:18.154Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:06:27.776Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:06:27.777Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:06:27.877Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:07:32.984Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:07:32.985Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:07:33.093Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:07:35.454Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:07:35.455Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:07:35.549Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:07:39.551Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:07:39.552Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:07:39.671Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:08:24.446Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:08:24.448Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:08:24.550Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:08:24.557Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:08:24.562Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:08:24.685Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:08:28.612Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:08:28.613Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:08:28.711Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:08:32.703Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:08:32.704Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:08:32.787Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:08:32.788Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:08:32.790Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:08:32.944Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:08:57.446Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:08:57.447Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:08:57.547Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:09:10.873Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-08T12:09:10.881Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T12:09:10.891Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.cim
2021-03-08T12:09:10.891Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.cim and TemplateData! '{"param0":"Khwaiish","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 05:39 pm"}'
2021-03-08T12:09:10.891Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.cim' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Khwaiish","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 05:39 pm"}' }
2021-03-08T12:09:10.887Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9108663343 and messageData! 'Dear Khwaiish,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 05:39 pm. \nBest Wishes and Warm Regards.'
2021-03-08T12:09:10.955Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135628285-1', mobile: '919108663343', status: 'SUBMITTED' } ], msgid: '2624135628285473', message: 'message Submitted successfully' }
2021-03-08T12:09:11.050Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'de50a405-589b-46e8-a8e9-e47e8b822256' }, MessageId: '0109017811bdbe0b-1d823840-6233-481c-9d6b-8c4ef7437ae4-000000' }
2021-03-08T12:09:23.056Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:09:23.057Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:09:23.140Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:09:25.395Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:09:25.396Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:09:25.466Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:09:51.142Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:09:51.143Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T12:09:51.217Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:09:51.220Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendPrescriptionEmail function of AWSSESUtility class  =>  Patient Name : DapinderSingh , patient Email : dapinder.singh@naturalminds.co.in
2021-03-08T12:10:50.041Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:10:50.042Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.cim
2021-03-08T12:10:50.118Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:24:39.529Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:39.529Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:39.531Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:39.531Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:39.532Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:39.532Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:39.534Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:39.534Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T12:24:39.541Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:39.541Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T12:24:39.548Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:39.549Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T12:24:42.564Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:42.564Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:42.566Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:42.566Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:42.568Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:42.568Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T12:24:42.575Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:42.581Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:42.575Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T12:24:42.581Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:42.583Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:42.583Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T12:24:46.311Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:46.312Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:46.314Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:46.314Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T12:24:46.320Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:46.320Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:46.322Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:46.323Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T12:24:46.340Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:46.340Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:46.342Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:46.342Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T12:24:49.133Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:49.133Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:49.135Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:49.136Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:49.138Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:49.138Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T12:24:49.150Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:24:49.144Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:49.144Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T12:24:49.150Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:24:49.153Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:24:49.153Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T12:26:10.064Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:26:10.064Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:26:10.065Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:26:10.066Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T12:26:10.075Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:26:10.075Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:26:10.078Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:26:10.079Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Wednesday
2021-03-08T12:26:10.087Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T12:26:10.087Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T12:26:10.090Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T12:26:10.090Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T12:54:43.622Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:54:43.623Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.cim
2021-03-08T12:54:43.730Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:54:46.809Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:54:46.810Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.cim
2021-03-08T12:54:46.887Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:56:56.965Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1951, org_doctor_mapping_id: 520, patient_id: 33651, preffered_time: 'SpotWalkin', checked_in_time: '17:39:19', created_at: 2021-03-08T12:09:10.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T17:39:00.000Z, end_time: 2021-03-08T17:53:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T12:56:56.973Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T12:56:56.982Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.cim
2021-03-08T12:56:56.982Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.cim and TemplateData! '{"param0":"Khwaiish","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 06:26 pm"}'
2021-03-08T12:56:56.983Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.cim' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Khwaiish","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 06:26 pm"}' }
2021-03-08T12:56:56.978Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9108663343 and messageData! 'Dear Khwaiish,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 06:26 pm. \nBest Wishes and Warm Regards.'
2021-03-08T12:56:57.003Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135643240-1', mobile: '919108663343', status: 'SUBMITTED' } ], msgid: '4677135643240436', message: 'message Submitted successfully' }
2021-03-08T12:56:57.091Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '7cd54858-6f6b-4698-a121-51e37d5b264b' }, MessageId: '0109017811e979b5-5321870b-e19a-405b-88df-7f0c86ebff50-000000' }
2021-03-08T12:58:10.337Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:58:10.338Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.cim
2021-03-08T12:58:10.423Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T12:58:12.819Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T12:58:12.820Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.cim
2021-03-08T12:58:12.914Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T13:04:58.270Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T13:04:58.270Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T13:04:58.272Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T13:04:58.272Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T13:04:58.730Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T13:04:58.730Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T13:04:58.732Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T13:04:58.733Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T13:05:00.831Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body [Object: null prototype] { checkedIn: 'false', spotWalkin: '0', patientId: '33647', isVideo: 'false', consultationAmount: '100', preferredTime: '10:45 AM', duration: '', appointmentDate: '2021-3-9', checkedInTime: '', selectedDocUserMapping: '', selectedDocId: '', email: '', address: '', originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-08T13:05:00.831Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-08T13:05:00.836Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-08T13:05:00.843Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T13:05:00.846Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 7019204410 and messageData! 'Dear Ramkumar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 09-03-2021 10:45 am. \nBest Wishes and Warm Regards.'
2021-03-08T13:05:00.863Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135645869-1', mobile: '917019204410', status: 'SUBMITTED' } ], msgid: '3388135645869833', message: 'message Submitted successfully' }
2021-03-08T13:05:01.302Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T13:05:01.302Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T13:05:01.305Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T13:05:01.305Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Tuesday
2021-03-08T13:06:09.394Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T13:06:09.395Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-08T13:06:09.498Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T13:06:11.948Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T13:06:11.949Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.com
2021-03-08T13:06:12.024Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T13:08:43.561Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T13:08:43.561Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T13:08:43.562Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T13:08:43.562Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T13:08:55.265Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T13:08:55.265Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T13:08:55.267Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T13:08:55.267Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Monday
2021-03-08T13:08:56.061Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T13:08:56.061Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T13:08:56.062Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T13:08:56.063Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-03-08T13:08:58.322Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body [Object: null prototype] { checkedIn: 'false', spotWalkin: '0', patientId: '33645', isVideo: 'false', consultationAmount: '100', preferredTime: '10:30 AM', duration: '', appointmentDate: '2021-3-11', checkedInTime: '', selectedDocUserMapping: '', selectedDocId: '', email: '', address: '', originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-08T13:08:58.321Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-08T13:08:58.327Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-08T13:08:58.333Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T13:08:58.336Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear bhuvaneswari,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 11-03-2021 10:30 am. \nBest Wishes and Warm Regards.'
2021-03-08T13:08:58.355Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135647116-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '7724135647116554', message: 'message Submitted successfully' }
2021-03-08T13:08:58.785Z |-[34mdebug[39m [router:appointment]: Get Slot for booking.
2021-03-08T13:08:58.786Z |-[34mdebug[39m [service:appointment]: [object Object]
2021-03-08T13:08:58.787Z |-[34mdebug[39m [service:appointment]: timeInterval is 15
2021-03-08T13:08:58.787Z |-[34mdebug[39m [service:appointment]: selectedDaysWeekday is Thursday
2021-03-08T13:10:22.058Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T13:10:22.063Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-08T13:10:22.325Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T13:10:24.796Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T13:10:24.797Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-08T13:10:25.040Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T13:18:00.091Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T13:18:00.092Z |-[32minfo[39m [router:Consultation.js]: patient email address is null
2021-03-08T13:18:00.270Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T13:18:02.665Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T13:18:02.667Z |-[32minfo[39m [router:Consultation.js]: patient email address is null
2021-03-08T13:18:02.844Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T13:31:05.798Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1951, org_doctor_mapping_id: 520, patient_id: 33651, preffered_time: 'SpotWalkin', checked_in_time: '17:39:19', created_at: 2021-03-08T12:09:10.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T17:39:00.000Z, end_time: 2021-03-08T17:53:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1952, org_doctor_mapping_id: 520, patient_id: 33651, preffered_time: 'SpotWalkin', checked_in_time: '18:27:05', created_at: 2021-03-08T12:56:56.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T18:26:00.000Z, end_time: 2021-03-08T18:40:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T13:31:05.806Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T13:31:05.816Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.cim
2021-03-08T13:31:05.816Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.cim and TemplateData! '{"param0":"Khwaiish","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:01 pm"}'
2021-03-08T13:31:05.817Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.cim' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Khwaiish","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:01 pm"}' }
2021-03-08T13:31:05.812Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9108663343 and messageData! 'Dear Khwaiish,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 07:01 pm. \nBest Wishes and Warm Regards.'
2021-03-08T13:31:05.880Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135654058-1', mobile: '919108663343', status: 'SUBMITTED' } ], msgid: '1996135654058367', message: 'message Submitted successfully' }
2021-03-08T13:31:05.976Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '417b9a99-d5ee-4769-a2d2-9868fbedb0b1' }, MessageId: '010901781208bd02-9d469538-2abe-40c1-a343-67a6eec97f08-000000' }
2021-03-08T13:32:38.923Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T13:32:38.924Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.cim
2021-03-08T13:32:39.060Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T13:32:41.476Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T13:32:41.477Z |-[32minfo[39m [router:Consultation.js]: patient email address is getvisa@gmail.cim
2021-03-08T13:32:41.590Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T13:37:10.977Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1950, org_doctor_mapping_id: 520, patient_id: 33650, preffered_time: '10:00 PM', checked_in_time: '17:29:03', created_at: 2021-03-08T11:58:15.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T22:00:00.000Z, end_time: 2021-03-08T22:14:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T13:37:10.986Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T13:37:10.990Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : dapinder.singh@naturalminds.co.in
2021-03-08T13:37:10.990Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses dapinder.singh@naturalminds.co.in and TemplateData! '{"param0":"DapinderSingh","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:07 pm"}'
2021-03-08T13:37:10.991Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'dapinder.singh@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"DapinderSingh","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:07 pm"}' }
2021-03-08T13:37:10.989Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9818829124 and messageData! 'Dear DapinderSingh,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 07:07 pm. \nBest Wishes and Warm Regards.'
2021-03-08T13:37:11.014Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135656151-1', mobile: '919818829124', status: 'SUBMITTED' } ], msgid: '6646135656151896', message: 'message Submitted successfully' }
2021-03-08T13:37:11.206Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'c16e772a-7732-4c84-b553-f652d444d241' }, MessageId: '01090178120e4f69-0b8b3972-f6fc-498d-8864-ca23f1233858-000000' }
2021-03-08T13:55:16.170Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1943, org_doctor_mapping_id: 520, patient_id: 33649, preffered_time: 'SpotTeleConsultation', checked_in_time: '16:01:23', created_at: 2021-03-08T06:41:44.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T12:11:00.000Z, end_time: 2021-03-08T12:25:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_Gk43KKRtBc3jp5', razorpay_inv_id: 'inv_Gk43JpbXfmIHv9', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1945, org_doctor_mapping_id: 520, patient_id: 33649, preffered_time: '01:00 PM', checked_in_time: '12:21:18', created_at: 2021-03-08T06:51:10.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T13:00:00.000Z, end_time: 2021-03-08T13:14:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1946, org_doctor_mapping_id: 520, patient_id: 33649, preffered_time: 'SpotWalkin', checked_in_time: '13:16:24', created_at: 2021-03-08T07:46:20.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T13:16:00.000Z, end_time: 2021-03-08T13:30:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T13:55:16.179Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T13:55:16.183Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-08T13:55:16.183Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"sankar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:25 pm"}'
2021-03-08T13:55:16.184Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"sankar","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:25 pm"}' }
2021-03-08T13:55:16.182Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear sankar,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 07:25 pm. \nBest Wishes and Warm Regards.'
2021-03-08T13:55:16.207Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135662061-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '3818135662061359', message: 'message Submitted successfully' }
2021-03-08T13:55:16.355Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: 'e34ce40d-059f-4f81-b14c-24889299b748' }, MessageId: '01090178121ede75-2f55b400-5e12-4f21-8880-4cc22e878da1-000000' }
2021-03-08T13:56:41.120Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T13:56:41.121Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-08T13:56:41.226Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T13:56:43.599Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T13:56:43.600Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-08T13:56:43.700Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T13:59:41.167Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-08', startTime: '19:29 PM', timeType: 'today', addSlot: null, originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-08T13:59:41.169Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-08T13:59:41.169Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-03-08T13:59:41.166Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-08T13:59:50.663Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%k%', '%k%', '%k%', '%k%' ]
2021-03-08T13:59:50.662Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T14:00:05.462Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%Khwaiish%', '%Khwaiish%', '%Khwaiish%', '%Khwaiish%' ]
2021-03-08T14:00:05.461Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T14:00:12.144Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '07:30 PM', checkedIn: 'false', duration: '', appointmentDate: 'Mon Mar 08 2021 19:29:40 GMT+0530 (India Standard Time)', spotWalkin: '0', patientId: '33651', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: 'getvisa@gmail.cim', address: '', originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-08T14:00:12.143Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-08T14:00:12.150Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1951, org_doctor_mapping_id: 520, patient_id: 33651, preffered_time: 'SpotWalkin', checked_in_time: '17:39:19', created_at: 2021-03-08T12:09:10.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T17:39:00.000Z, end_time: 2021-03-08T17:53:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1952, org_doctor_mapping_id: 520, patient_id: 33651, preffered_time: 'SpotWalkin', checked_in_time: '18:27:05', created_at: 2021-03-08T12:56:56.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T18:26:00.000Z, end_time: 2021-03-08T18:40:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1955, org_doctor_mapping_id: 520, patient_id: 33651, preffered_time: 'SpotWalkin', checked_in_time: '19:01:16', created_at: 2021-03-08T13:31:05.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T19:01:00.000Z, end_time: 2021-03-08T19:15:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T14:00:12.152Z |-[31merror[39m [service:appointment]: In reject -> Time slot already occupied
2021-03-08T14:00:12.152Z |-[31merror[39m [service:appointment]: error { status: false, Message: 'Time slot already occupied' }
2021-03-08T14:00:16.950Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-08', startTime: '19:30 PM', timeType: 'today', addSlot: null, originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-08T14:00:16.950Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-08T14:00:16.951Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-03-08T14:00:16.949Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-08T14:00:21.388Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%p%', '%p%', '%p%', '%p%' ]
2021-03-08T14:00:21.387Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T14:00:25.462Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%pa%', '%pa%', '%pa%', '%pa%' ]
2021-03-08T14:00:25.461Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T14:00:26.407Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%p%', '%p%', '%p%', '%p%' ]
2021-03-08T14:00:26.406Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T14:00:29.867Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 157, '%Khwaiish%', '%Khwaiish%', '%Khwaiish%', '%Khwaiish%' ]
2021-03-08T14:00:29.867Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-08T14:00:34.219Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '08:15 PM', checkedIn: 'false', duration: '', appointmentDate: 'Mon Mar 08 2021 19:30:16 GMT+0530 (India Standard Time)', spotWalkin: '0', patientId: '33651', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: 'getvisa@gmail.cim', address: '', originalUserTypeId: 180, originalOrgUserMappingId: 520, userTypeId: 180, orgUserMappingId: 520, timeInterval: '15', orgId: 157, type: 'Doctor', userId: 567, tzOffset: 330 }
2021-03-08T14:00:34.218Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-08T14:00:34.225Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1951, org_doctor_mapping_id: 520, patient_id: 33651, preffered_time: 'SpotWalkin', checked_in_time: '17:39:19', created_at: 2021-03-08T12:09:10.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T17:39:00.000Z, end_time: 2021-03-08T17:53:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1952, org_doctor_mapping_id: 520, patient_id: 33651, preffered_time: 'SpotWalkin', checked_in_time: '18:27:05', created_at: 2021-03-08T12:56:56.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T18:26:00.000Z, end_time: 2021-03-08T18:40:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1955, org_doctor_mapping_id: 520, patient_id: 33651, preffered_time: 'SpotWalkin', checked_in_time: '19:01:16', created_at: 2021-03-08T13:31:05.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T19:01:00.000Z, end_time: 2021-03-08T19:15:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T14:00:34.233Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T14:00:34.236Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : getvisa@gmail.cim
2021-03-08T14:00:34.237Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses getvisa@gmail.cim and TemplateData! '{"param0":"Khwaiish","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 08:15 pm"}'
2021-03-08T14:00:34.237Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'getvisa@gmail.cim' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Khwaiish","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 08:15 pm"}' }
2021-03-08T14:00:34.235Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9108663343 and messageData! 'Dear Khwaiish,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 08:15 pm. \nBest Wishes and Warm Regards.'
2021-03-08T14:00:34.342Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '67c9c424-70f5-4a75-bacd-048b9c18b90f' }, MessageId: '010901781223b8d8-d959eb4e-4793-4974-a8c2-e5f93ac7de2d-000000' }
2021-03-08T14:00:34.560Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135663842-1', mobile: '919108663343', status: 'SUBMITTED' } ], msgid: '2918135663842899', message: 'message Submitted successfully' }
2021-03-08T14:04:09.210Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1927, org_doctor_mapping_id: 520, patient_id: 33645, preffered_time: '08:00 AM', checked_in_time: '18:39:17', created_at: 2021-03-07T16:38:12.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T08:00:00.000Z, end_time: 2021-03-08T08:14:59.000Z, duration: '15', appointment_type: 'video', payment_pending: 1, razorpay_order_id: 'order_GjpgH3BZJAftkI', razorpay_inv_id: 'inv_GjpgGZFGt0PSDZ', pending_notification: 1, status: 1, doctor_called_by_nurse: 0 }, RowDataPacket { id: 1936, org_doctor_mapping_id: 520, patient_id: 33645, preffered_time: '08:45 AM', checked_in_time: '23:13:27', created_at: 2021-03-07T17:43:14.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T08:45:00.000Z, end_time: 2021-03-08T08:59:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T14:04:09.217Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T14:04:09.220Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : bhuvaneswari@naturalminds.co.in
2021-03-08T14:04:09.221Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses bhuvaneswari@naturalminds.co.in and TemplateData! '{"param0":"bhuvaneswari","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:34 pm"}'
2021-03-08T14:04:09.222Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'bhuvaneswari@naturalminds.co.in' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"bhuvaneswari","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:34 pm"}' }
2021-03-08T14:04:09.219Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9629869926 and messageData! 'Dear bhuvaneswari,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 07:34 pm. \nBest Wishes and Warm Regards.'
2021-03-08T14:04:09.240Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135665056-1', mobile: '919629869926', status: 'SUBMITTED' } ], msgid: '6869135665056587', message: 'message Submitted successfully' }
2021-03-08T14:04:09.318Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '7f368f7e-cb25-47c3-a1ff-c8bd9cde878b' }, MessageId: '010901781227009b-5f1c0fcd-022d-4ad1-912f-ad98c955dbca-000000' }
2021-03-08T14:04:59.935Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:04:59.936Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-08T14:05:00.122Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:05:02.526Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:05:02.528Z |-[32minfo[39m [router:Consultation.js]: patient email address is bhuvaneswari@naturalminds.co.in
2021-03-08T14:05:02.667Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:08:15.900Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-08T14:08:15.910Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T14:08:15.920Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : nathans441@gmail.com
2021-03-08T14:08:15.920Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses nathans441@gmail.com and TemplateData! '{"param0":"Sabari","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:38 pm"}'
2021-03-08T14:08:15.921Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'nathans441@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Sabari","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:38 pm"}' }
2021-03-08T14:08:15.916Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Dear Sabari,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 07:38 pm. \nBest Wishes and Warm Regards.'
2021-03-08T14:08:15.945Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135666512-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '8584135666512793', message: 'message Submitted successfully' }
2021-03-08T14:08:16.083Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '6cbe65d8-af35-42a3-af06-b92fca599fe2' }, MessageId: '01090178122ac456-afbcdf11-9597-4f72-97bc-fd573e063f64-000000' }
2021-03-08T14:09:33.882Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:09:33.883Z |-[32minfo[39m [router:Consultation.js]: patient email address is nathans441@gmail.com
2021-03-08T14:09:33.981Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:09:36.284Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:09:36.285Z |-[32minfo[39m [router:Consultation.js]: patient email address is nathans441@gmail.com
2021-03-08T14:09:36.386Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:11:45.604Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:11:45.606Z |-[32minfo[39m [router:Consultation.js]: patient email address is nathans441@gmail.com
2021-03-08T14:11:45.714Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:11:48.139Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:11:48.141Z |-[32minfo[39m [router:Consultation.js]: patient email address is nathans441@gmail.com
2021-03-08T14:11:48.237Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:18:00.127Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1960, org_doctor_mapping_id: 520, patient_id: 33652, preffered_time: 'SpotWalkin', checked_in_time: '19:38:31', created_at: 2021-03-08T14:08:15.000Z, checked_in: 1, appointment_date: 2021-03-08T00:00:00.000Z, start_time: 2021-03-08T19:38:00.000Z, end_time: 2021-03-08T19:52:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-08T14:18:00.136Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-08T14:18:00.145Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : nathans441@gmail.com
2021-03-08T14:18:00.145Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses nathans441@gmail.com and TemplateData! '{"param0":"Sabari","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:48 pm"}'
2021-03-08T14:18:00.145Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'nathans441@gmail.com' ] }, Source: '<HelloToHealth@naturalminds.in>', TemplateData: '{"param0":"Sabari","param1":"Nagaraj","param2":"Bone and Joint clinic","param3":"08-03-2021 07:48 pm"}' }
2021-03-08T14:18:00.141Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Dear Sabari,\nYour appointment with Nagaraj at Bone and Joint clinic is booked for 08-03-2021 07:48 pm. \nBest Wishes and Warm Regards.'
2021-03-08T14:18:00.288Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '135669957-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '3975135669957219', message: 'message Submitted successfully' }
2021-03-08T14:18:00.324Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '5e812379-c03f-4a89-af57-64f834d5b3f0' }, MessageId: '010901781233ae73-65e336df-0545-4a31-b943-1a83a2024ed2-000000' }
2021-03-08T14:19:50.771Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:19:50.772Z |-[32minfo[39m [router:Consultation.js]: patient email address is nathans441@gmail.com
2021-03-08T14:19:50.858Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:19:53.233Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:19:53.234Z |-[32minfo[39m [router:Consultation.js]: patient email address is nathans441@gmail.com
2021-03-08T14:19:53.336Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:21:13.116Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:21:13.118Z |-[32minfo[39m [router:Consultation.js]: patient email address is nathans441@gmail.com
2021-03-08T14:21:13.212Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:21:15.503Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:21:15.505Z |-[32minfo[39m [router:Consultation.js]: patient email address is nathans441@gmail.com
2021-03-08T14:21:15.580Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:23:38.836Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:23:38.838Z |-[32minfo[39m [router:Consultation.js]: patient email address is nathans441@gmail.com
2021-03-08T14:23:38.950Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:23:40.153Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:23:40.154Z |-[32minfo[39m [router:Consultation.js]: patient email address is nathans441@gmail.com
2021-03-08T14:23:40.239Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:46:20.384Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:46:20.387Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T14:46:20.596Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:46:22.961Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:46:22.962Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T14:46:23.089Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:46:28.137Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:46:28.138Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T14:46:28.224Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:46:36.984Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:46:36.985Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T14:46:37.072Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-08T14:47:07.191Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are Nagaraj
2021-03-08T14:47:07.192Z |-[32minfo[39m [router:Consultation.js]: patient email address is dapinder.singh@naturalminds.co.in
2021-03-08T14:47:07.282Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-03-11T12:51:19.285Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-11', startTime: '18:21 PM', timeType: 'today', addSlot: null, originalUserTypeId: 2, originalOrgUserMappingId: 3, userTypeId: 2, orgUserMappingId: 3, timeInterval: '15', orgId: 1, type: 'Doctor', userId: 4, tzOffset: 330 }
2021-03-11T12:51:19.289Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-11T12:51:19.289Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Thursday
2021-03-11T12:51:19.283Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-11T12:51:22.012Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 1, '%d%', '%d%', '%d%', '%d%' ]
2021-03-11T12:51:22.011Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T12:51:22.581Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 1, '%dh%', '%dh%', '%dh%', '%dh%' ]
2021-03-11T12:51:22.581Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T12:51:24.386Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 1, '%SUDHA%', '%SUDHA%', '%SUDHA%', '%SUDHA%' ]
2021-03-11T12:51:24.386Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T12:51:32.155Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '06:30 PM', checkedIn: 'false', duration: '', appointmentDate: 'Thu Mar 11 2021 18:21:19 GMT+0530 (IST)', spotWalkin: '0', patientId: '56', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: 'latharani@naturalminds.in', address: '', originalUserTypeId: 2, originalOrgUserMappingId: 3, userTypeId: 2, orgUserMappingId: 3, timeInterval: '15', orgId: 1, type: 'Doctor', userId: 4, tzOffset: 330 }
2021-03-11T12:51:32.154Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-11T12:51:32.168Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'phone_no' of undefined
    at Object.module.exports.bookPatientAppointment (/Users/dhanendra/NMDS/spot/services/Appointments.js:486:41)
    at processTicksAndRejections (node:internal/process/task_queues:93:5)
2021-03-11T13:03:57.854Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-11', startTime: '18:33 PM', timeType: 'today', addSlot: null, originalUserTypeId: 2, originalOrgUserMappingId: 3, userTypeId: 2, orgUserMappingId: 3, timeInterval: '15', orgId: 1, type: 'Doctor', userId: 4, tzOffset: 330 }
2021-03-11T13:03:57.855Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-11T13:03:57.855Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Thursday
2021-03-11T13:03:57.854Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-11T13:04:02.847Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 1, '%d%', '%d%', '%d%', '%d%' ]
2021-03-11T13:04:02.847Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T13:04:06.088Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 1, '%DSApoint%', '%DSApoint%', '%DSApoint%', '%DSApoint%' ]
2021-03-11T13:04:06.088Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T13:04:14.782Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '06:45 PM', checkedIn: 'false', duration: '', appointmentDate: 'Thu Mar 11 2021 18:33:57 GMT+0530 (IST)', spotWalkin: '0', patientId: '12', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: 'dapinder.singh@naturalminds.in', address: '', originalUserTypeId: 2, originalOrgUserMappingId: 3, userTypeId: 2, orgUserMappingId: 3, timeInterval: '15', orgId: 1, type: 'Doctor', userId: 4, tzOffset: 330 }
2021-03-11T13:04:14.782Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-11T13:04:14.786Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'phone_no' of undefined
    at Object.module.exports.bookPatientAppointment (/Users/dhanendra/NMDS/spot/services/Appointments.js:486:41)
    at processTicksAndRejections (node:internal/process/task_queues:93:5)
2021-03-11T13:05:44.268Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-11', startTime: '18:35 PM', timeType: 'today', addSlot: null, originalUserTypeId: 5, originalOrgUserMappingId: 6, userTypeId: 5, orgUserMappingId: 6, timeInterval: '30', orgId: 1, type: 'Doctor', userId: 7, tzOffset: 330 }
2021-03-11T13:05:44.269Z |-[34mdebug[39m [service:appointment]: Time Interval is : 30
2021-03-11T13:05:44.270Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Thursday
2021-03-11T13:05:44.268Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-11T13:05:47.212Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 1, '%d%', '%d%', '%d%', '%d%' ]
2021-03-11T13:05:47.211Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T13:05:47.681Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 1, '%dh%', '%dh%', '%dh%', '%dh%' ]
2021-03-11T13:05:47.681Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T13:05:50.455Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 1, '%sudharshan%', '%sudharshan%', '%sudharshan%', '%sudharshan%' ]
2021-03-11T13:05:50.455Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T13:05:57.001Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '07:00 PM', checkedIn: 'false', duration: '', appointmentDate: 'Thu Mar 11 2021 18:35:44 GMT+0530 (IST)', spotWalkin: '0', patientId: '178', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: 'bhuvaneswari@naturalminds.in', address: '', originalUserTypeId: 5, originalOrgUserMappingId: 6, userTypeId: 5, orgUserMappingId: 6, timeInterval: '30', orgId: 1, type: 'Doctor', userId: 7, tzOffset: 330 }
2021-03-11T13:05:57.000Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-11T13:05:57.004Z |-[31merror[39m [service:appointment]: error TypeError: Cannot read property 'phone_no' of undefined
    at Object.module.exports.bookPatientAppointment (/Users/dhanendra/NMDS/spot/services/Appointments.js:486:41)
    at processTicksAndRejections (node:internal/process/task_queues:93:5)
2021-03-11T13:07:30.984Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-11', startTime: '18:37 PM', timeType: 'today', addSlot: null, originalUserTypeId: 5, originalOrgUserMappingId: 6, userTypeId: 5, orgUserMappingId: 6, timeInterval: '30', orgId: 1, type: 'Doctor', userId: 7, tzOffset: 330 }
2021-03-11T13:07:30.984Z |-[34mdebug[39m [service:appointment]: Time Interval is : 30
2021-03-11T13:07:30.985Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Thursday
2021-03-11T13:07:30.984Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-11T13:11:08.586Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-11', startTime: '18:41 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-03-11T13:11:08.586Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-11T13:11:08.586Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Thursday
2021-03-11T13:11:08.586Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-11T13:11:12.956Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%d%', '%d%', '%d%', '%d%' ]
2021-03-11T13:11:12.955Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T13:11:13.183Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dh%', '%dh%', '%dh%', '%dh%' ]
2021-03-11T13:11:13.183Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T13:11:13.465Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dha%', '%dha%', '%dha%', '%dha%' ]
2021-03-11T13:11:13.464Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T13:11:15.411Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Dhanendra%', '%Dhanendra%', '%Dhanendra%', '%Dhanendra%' ]
2021-03-11T13:11:15.411Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-11T13:11:18.567Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '06:45 PM', checkedIn: 'false', duration: '', appointmentDate: 'Thu Mar 11 2021 18:41:08 GMT+0530 (IST)', spotWalkin: '0', patientId: '247', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: '', address: '', originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-03-11T13:11:18.566Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-11T13:11:18.576Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-11T13:11:18.581Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-11T13:11:18.583Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Dear Dhanendra,\nYour appointment with shephaalie shrivastavaa at Child care is booked for 11-03-2021 06:45 pm. \nBest Wishes and Warm Regards.'
2021-03-11T13:11:19.004Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '136832531-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '9481136832531551', message: 'message Submitted successfully' }
2021-03-12T01:12:45.930Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-12', startTime: '06:42 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-03-12T01:12:45.933Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-12T01:12:45.933Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Friday
2021-03-12T01:12:45.928Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-12T01:12:50.660Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%d%', '%d%', '%d%', '%d%' ]
2021-03-12T01:12:50.659Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-12T01:12:51.187Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dh%', '%dh%', '%dh%', '%dh%' ]
2021-03-12T01:12:51.186Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-12T01:12:52.527Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Dhanendra%', '%Dhanendra%', '%Dhanendra%', '%Dhanendra%' ]
2021-03-12T01:12:52.526Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-12T01:12:56.019Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '08:00 AM', checkedIn: 'false', duration: '', appointmentDate: 'Fri Mar 12 2021 06:42:45 GMT+0530 (IST)', spotWalkin: '0', patientId: '247', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: '', address: '', originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-03-12T01:12:56.018Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-12T01:12:56.033Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-12T01:12:56.037Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-12T01:12:56.040Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Dear Dhanendra,\nYour appointment with shephaalie shrivastavaa at Child care is booked for 12-03-2021 08:00 am. \nBest Wishes and Warm Regards.'
2021-03-12T01:12:56.241Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '136915959-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '2688136915959489', message: 'message Submitted successfully' }
2021-03-12T01:58:34.178Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-12', startTime: '07:28 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-03-12T01:58:34.181Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-12T01:58:34.181Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Friday
2021-03-12T01:58:34.176Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-12T01:58:39.302Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%d%', '%d%', '%d%', '%d%' ]
2021-03-12T01:58:39.301Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-12T01:58:39.925Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dh%', '%dh%', '%dh%', '%dh%' ]
2021-03-12T01:58:39.925Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-12T01:58:41.232Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Dhanendra%', '%Dhanendra%', '%Dhanendra%', '%Dhanendra%' ]
2021-03-12T01:58:41.232Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-12T01:58:44.098Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '08:15 AM', checkedIn: 'false', duration: '', appointmentDate: 'Fri Mar 12 2021 07:28:34 GMT+0530 (IST)', spotWalkin: '0', patientId: '247', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: '', address: '', originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-03-12T01:58:44.097Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-12T01:58:44.106Z |-[32minfo[39m [service:appointment]: serch exesting appointment [ RowDataPacket { id: 1653, org_doctor_mapping_id: 210, patient_id: 247, preffered_time: '08:00 AM', checked_in_time: '07:02:38', created_at: 2021-03-12T06:42:56.000Z, checked_in: 1, appointment_date: 2021-03-12T00:00:00.000Z, start_time: 2021-03-12T08:00:00.000Z, end_time: 2021-03-12T08:14:59.000Z, duration: '15', appointment_type: 'f2f', payment_pending: 0, razorpay_order_id: null, razorpay_inv_id: null, pending_notification: 1, status: 1, doctor_called_by_nurse: 0 } ]
2021-03-12T01:58:44.110Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-12T01:58:44.113Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Dear Dhanendra,\nYour appointment with shephaalie shrivastavaa at Child care is booked for 12-03-2021 08:15 am. \nBest Wishes and Warm Regards.'
2021-03-12T01:58:44.298Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '136920402-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '2738136920402848', message: 'message Submitted successfully' }
2021-03-15T17:22:43.043Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Your login otp is 8738.'
2021-03-15T17:22:43.422Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '138432034-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '2696138432034744', message: 'message Submitted successfully' }
2021-03-15T17:23:13.046Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Your login otp is 1978.'
2021-03-15T17:23:13.182Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '138432096-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '7877138432096874', message: 'message Submitted successfully' }
2021-03-15T17:23:17.209Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Your login otp is 3242.'
2021-03-15T17:23:17.333Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '138432104-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '5827138432104374', message: 'message Submitted successfully' }
2021-03-15T17:23:47.070Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9788676493 and messageData! 'Your login otp is 7099.'
2021-03-15T17:23:47.209Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '138432166-1', mobile: '919788676493', status: 'SUBMITTED' } ], msgid: '6258138432166688', message: 'message Submitted successfully' }
2021-03-17T00:06:15.950Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-03-17', startTime: '05:36 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-03-17T00:06:15.953Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-03-17T00:06:15.953Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Wednesday
2021-03-17T00:06:15.947Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-03-17T00:06:20.798Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%d%', '%d%', '%d%', '%d%' ]
2021-03-17T00:06:20.798Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-17T00:06:21.401Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dh%', '%dh%', '%dh%', '%dh%' ]
2021-03-17T00:06:21.400Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-17T00:06:23.401Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Dhanendra%', '%Dhanendra%', '%Dhanendra%', '%Dhanendra%' ]
2021-03-17T00:06:23.400Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-03-17T00:06:28.418Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '08:00 AM', checkedIn: 'false', duration: '', appointmentDate: 'Wed Mar 17 2021 05:36:15 GMT+0530 (IST)', spotWalkin: '0', patientId: '247', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: '', address: '', originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-03-17T00:06:28.417Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-03-17T00:06:28.435Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-03-17T00:06:28.438Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-03-17T00:06:28.440Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Dear Dhanendra,\nYour appointment with shephaalie shrivastavaa at Child care is booked for 17-03-2021 08:00 am. \nBest Wishes and Warm Regards.'
2021-03-17T00:06:28.716Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '138804711-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '7235138804711442', message: 'message Submitted successfully' }
2021-03-17T05:30:58.017Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9650777225 and messageData! 'Your login otp is 1256.'
2021-03-17T05:30:58.370Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '138903334-1', mobile: '919650777225', status: 'SUBMITTED' } ], msgid: '3281138903334263', message: 'message Submitted successfully' }
2021-03-25T08:36:00.409Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 70.
2021-03-25T08:36:00.458Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 70.
2021-03-25T08:36:00.534Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from org_plan_units_inventory  OP
                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '70' ]
2021-03-25T08:36:00.611Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2021-03-25T08:36:00.613Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 70.
2021-03-25T08:36:00.615Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '70' ]
2021-03-25T08:36:00.717Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 102 msec
2021-03-25T08:36:00.901Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE\n                        from org_plan_units_inventory  OP\n                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID"': 1 record(s); took 367 msec
2021-03-25T08:36:45.191Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 70.
2021-03-25T08:36:45.519Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 70.
2021-03-25T08:36:45.855Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from org_plan_units_inventory  OP
                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '70' ]
2021-03-25T08:36:46.327Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE\n                        from org_plan_units_inventory  OP\n                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID"': 1 record(s); took 472 msec
2021-03-25T08:36:46.919Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2021-03-25T08:36:47.311Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 70.
2021-03-25T08:36:47.559Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '70' ]
2021-03-25T08:36:47.944Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 385 msec
2021-03-25T09:14:39.709Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 70.
2021-03-25T09:14:39.735Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 70.
2021-03-25T09:14:39.758Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from org_plan_units_inventory  OP
                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '70' ]
2021-03-25T09:14:39.823Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2021-03-25T09:14:39.888Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 70.
2021-03-25T09:14:40.036Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '70' ]
2021-03-25T09:14:40.149Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE\n                        from org_plan_units_inventory  OP\n                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID"': 1 record(s); took 391 msec
2021-03-25T09:14:40.282Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 247 msec
2021-03-25T09:14:57.819Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-25T09:14:57.827Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-25T09:14:57.856Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-03-25T09:14:58.152Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 295 msec
2021-03-31T04:55:41.398Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 70.
2021-03-31T04:55:41.413Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 70.
2021-03-31T04:55:41.423Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from org_plan_units_inventory  OP
                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '70' ]
2021-03-31T04:55:41.431Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2021-03-31T04:55:41.439Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 70.
2021-03-31T04:55:41.439Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '70' ]
2021-03-31T04:55:41.672Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 233 msec
2021-03-31T04:55:41.822Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE\n                        from org_plan_units_inventory  OP\n                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID"': 1 record(s); took 399 msec
2021-03-31T04:55:47.185Z |-[34mdebug[39m [router:service-list]: Get All service names.
2021-03-31T04:55:47.185Z |-[32minfo[39m [service:service-list]: Service type listing.
2021-03-31T04:55:47.193Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE
                        WHERE IS_DELETED = false'; values=[]
2021-03-31T04:55:47.193Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE\n                        WHERE IS_DELETED = false'': 2 record(s); took 0 msec
2021-03-31T07:32:56.350Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-31T07:32:56.474Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-31T07:32:56.481Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-03-31T07:32:56.655Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 174 msec
2021-03-31T07:57:49.930Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-31T07:57:49.955Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-31T07:57:49.963Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-03-31T07:57:50.008Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 51 msec
2021-03-31T08:03:25.573Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-31T08:03:25.592Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-31T08:03:25.913Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-03-31T08:03:26.295Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 382 msec
2021-03-31T11:11:09.475Z |-[34mdebug[39m [router:plan-type-list]: Get All Plan Type Details.
2021-03-31T11:11:09.555Z |-[32minfo[39m [service:plan-types-list]: Plan type listing.
2021-03-31T11:11:09.592Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE
                        WHERE IS_DELETED = false'; values=[]
2021-03-31T11:11:09.709Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false'': 2 record(s); took 117 msec
2021-03-31T11:11:09.741Z |-[34mdebug[39m [router:duration-type-list]: Get All Duration Type Details.
2021-03-31T11:11:09.746Z |-[32minfo[39m [service:duration-types-list]: Duration type listing.
2021-03-31T11:11:09.751Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(DURATION_TYPE_ID) TYPE_ID, TYPE_DESC FROM DURATION_TYPE
                        WHERE IS_DELETED = false'; values=[]
2021-03-31T11:11:09.756Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(DURATION_TYPE_ID) TYPE_ID, TYPE_DESC FROM DURATION_TYPE\n                        WHERE IS_DELETED = false'': 3 record(s); took 5 msec
2021-03-31T11:11:09.788Z |-[34mdebug[39m [router:service-list]: Get All service names.
2021-03-31T11:11:09.790Z |-[32minfo[39m [service:service-list]: Service type listing.
2021-03-31T11:11:09.792Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE
                        WHERE IS_DELETED = false'; values=[]
2021-03-31T11:11:09.797Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE\n                        WHERE IS_DELETED = false'': 2 record(s); took 5 msec
2021-03-31T11:11:18.973Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-31T11:11:18.983Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-31T11:11:18.991Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,
                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'; values=[ 'ALL' ]
2021-03-31T11:11:19.060Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,\n                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'': 3 record(s); took 69 msec
2021-03-31T11:11:21.008Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-31T11:11:21.008Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-31T11:11:21.023Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,
                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'; values=[ 'ALL' ]
2021-03-31T11:11:21.039Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,\n                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'': 3 record(s); took 16 msec
2021-03-31T11:11:25.328Z |-[34mdebug[39m [router:coupon-list]: Get All Payment Details.
2021-03-31T11:11:25.341Z |-[32minfo[39m [service:coupon-list]: plan listing.
2021-03-31T11:11:25.345Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,
		                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C
                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID
                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID
                        WHERE  C.IS_DELETED = false ;'; values=[]
2021-03-31T11:11:25.529Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,\n\t\t                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C\n                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID\n                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID\n                        WHERE  C.IS_DELETED = false ;"': 8 record(s); took 184 msec
2021-03-31T11:12:35.804Z |-[34mdebug[39m [router:coupon-list]: Get All Payment Details.
2021-03-31T11:12:35.805Z |-[32minfo[39m [service:coupon-list]: plan listing.
2021-03-31T11:12:35.806Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,
		                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C
                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID
                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID
                        WHERE  C.IS_DELETED = false ;'; values=[]
2021-03-31T11:12:35.814Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,\n\t\t                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C\n                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID\n                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID\n                        WHERE  C.IS_DELETED = false ;"': 8 record(s); took 8 msec
2021-03-31T11:14:46.910Z |-[34mdebug[39m [router:coupon-list]: Get All Payment Details.
2021-03-31T11:14:46.910Z |-[32minfo[39m [service:coupon-list]: plan listing.
2021-03-31T11:14:46.910Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,
		                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C
                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID
                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID
                        WHERE  C.IS_DELETED = false ;'; values=[]
2021-03-31T11:14:47.040Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,\n\t\t                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C\n                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID\n                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID\n                        WHERE  C.IS_DELETED = false ;"': 8 record(s); took 130 msec
2021-03-31T11:15:08.789Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-03-31T11:15:08.789Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-03-31T11:15:08.789Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-03-31T11:15:08.797Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 8 msec
2021-04-01T06:35:26.086Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T06:35:26.693Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T06:35:26.757Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T06:35:29.195Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 2416 msec
2021-04-01T06:37:30.957Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T06:37:30.959Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T06:37:30.971Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T06:37:31.121Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 150 msec
2021-04-01T06:58:21.672Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 70.
2021-04-01T06:58:21.683Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 70.
2021-04-01T06:58:21.720Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from org_plan_units_inventory  OP
                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '70' ]
2021-04-01T06:58:21.866Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2021-04-01T06:58:21.973Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 70.
2021-04-01T06:58:22.016Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '70' ]
2021-04-01T06:58:22.409Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 393 msec
2021-04-01T06:58:22.742Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE\n                        from org_plan_units_inventory  OP\n                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID"': 1 record(s); took 1023 msec
2021-04-01T06:58:25.396Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T06:58:25.397Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T06:58:25.399Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T06:58:25.425Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 26 msec
2021-04-01T07:28:29.388Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T07:28:29.389Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T07:28:29.390Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T07:28:29.423Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 31 msec
2021-04-01T07:57:44.202Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T07:57:44.240Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T07:57:44.505Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T07:57:44.738Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 233 msec
2021-04-01T08:27:11.495Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T08:27:11.508Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T08:27:11.513Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T08:27:11.781Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 270 msec
2021-04-01T08:34:53.309Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T08:34:53.317Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T08:34:53.320Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T08:34:53.371Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 52 msec
2021-04-01T08:37:43.315Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T08:37:43.328Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T08:37:43.331Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T08:37:43.437Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 106 msec
2021-04-01T09:02:19.283Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2021-04-01T09:02:19.299Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 70.
2021-04-01T09:02:19.301Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '70' ]
2021-04-01T09:02:19.376Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 70.
2021-04-01T09:02:19.378Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 70.
2021-04-01T09:02:19.379Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from org_plan_units_inventory  OP
                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '70' ]
2021-04-01T09:02:20.383Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 1082 msec
2021-04-01T09:02:20.529Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE\n                        from org_plan_units_inventory  OP\n                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID"': 1 record(s); took 1150 msec
2021-04-01T09:02:21.017Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T09:02:21.021Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T09:02:21.022Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T09:02:21.206Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 184 msec
2021-04-01T09:03:42.700Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T09:03:42.710Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T09:03:42.712Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T09:03:42.724Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 12 msec
2021-04-01T10:45:19.237Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T10:45:19.274Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T10:45:19.284Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T10:45:20.615Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 1331 msec
2021-04-01T10:46:56.188Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T10:46:56.191Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T10:46:56.196Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T10:46:56.223Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 28 msec
2021-04-01T12:38:00.359Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-01T12:38:00.369Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-01T12:38:00.366Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-01T12:38:00.733Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 365 msec
2021-04-02T04:45:05.370Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-02', startTime: '10:15 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-02T04:45:05.346Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-02T04:45:05.397Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-02T04:45:05.405Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Friday
2021-04-02T05:11:22.987Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-02', startTime: '10:41 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-02T05:11:22.995Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-02T05:11:22.995Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Friday
2021-04-02T05:11:22.987Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-02T05:12:12.830Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%kalyan%', '%kalyan%', '%kalyan%', '%kalyan%' ]
2021-04-02T05:12:12.822Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-02T05:12:41.533Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%kalya%', '%kalya%', '%kalya%', '%kalya%' ]
2021-04-02T05:12:41.533Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-02T05:12:56.129Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%R%', '%R%', '%R%', '%R%' ]
2021-04-02T05:12:56.113Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-02T05:12:56.417Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Ra%', '%Ra%', '%Ra%', '%Ra%' ]
2021-04-02T05:12:56.369Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-02T05:12:56.671Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Raja%', '%Raja%', '%Raja%', '%Raja%' ]
2021-04-02T05:12:56.655Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-02T06:55:43.435Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-02', startTime: '12:25 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-02T06:55:43.583Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-02T06:55:43.586Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Friday
2021-04-02T06:55:43.150Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-02T06:56:00.510Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%V%', '%V%', '%V%', '%V%' ]
2021-04-02T06:56:00.510Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-02T06:56:00.818Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Va%', '%Va%', '%Va%', '%Va%' ]
2021-04-02T06:56:00.771Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-02T06:56:01.468Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Varu%', '%Varu%', '%Varu%', '%Varu%' ]
2021-04-02T06:56:01.467Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-02T06:56:01.872Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Varun%', '%Varun%', '%Varun%', '%Varun%' ]
2021-04-02T06:56:01.870Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-02T10:03:55.086Z |-[34mdebug[39m [router:coupon-list]: Get All Payment Details.
2021-04-02T10:03:55.192Z |-[32minfo[39m [service:coupon-list]: plan listing.
2021-04-02T10:03:55.275Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,
		                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C
                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID
                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID
                        WHERE  C.IS_DELETED = false ;'; values=[]
2021-04-02T10:03:56.373Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,\n\t\t                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C\n                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID\n                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID\n                        WHERE  C.IS_DELETED = false ;"': 8 record(s); took 1114 msec
2021-04-02T10:03:59.514Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-02T10:03:59.613Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-02T10:03:59.627Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,
                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'; values=[ 'ALL' ]
2021-04-02T10:03:59.717Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,\n                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'': 3 record(s); took 91 msec
2021-04-02T10:04:05.783Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-02T10:04:05.784Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-02T10:04:05.787Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,
                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'; values=[ 'ALL' ]
2021-04-02T10:04:05.805Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,\n                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'': 3 record(s); took 18 msec
2021-04-02T10:04:08.732Z |-[34mdebug[39m [router:plan-type-list]: Get All Plan Type Details.
2021-04-02T10:04:08.756Z |-[32minfo[39m [service:plan-types-list]: Plan type listing.
2021-04-02T10:04:08.855Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE
                        WHERE IS_DELETED = false'; values=[]
2021-04-02T10:04:08.906Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false'': 2 record(s); took 51 msec
2021-04-02T10:04:09.045Z |-[34mdebug[39m [router:duration-type-list]: Get All Duration Type Details.
2021-04-02T10:04:09.067Z |-[32minfo[39m [service:duration-types-list]: Duration type listing.
2021-04-02T10:04:09.123Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(DURATION_TYPE_ID) TYPE_ID, TYPE_DESC FROM DURATION_TYPE
                        WHERE IS_DELETED = false'; values=[]
2021-04-02T10:04:09.185Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(DURATION_TYPE_ID) TYPE_ID, TYPE_DESC FROM DURATION_TYPE\n                        WHERE IS_DELETED = false'': 3 record(s); took 62 msec
2021-04-02T10:04:09.302Z |-[34mdebug[39m [router:service-list]: Get All service names.
2021-04-02T10:04:09.393Z |-[32minfo[39m [service:service-list]: Service type listing.
2021-04-02T10:04:09.504Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE
                        WHERE IS_DELETED = false'; values=[]
2021-04-02T10:04:09.521Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE\n                        WHERE IS_DELETED = false'': 2 record(s); took 17 msec
2021-04-02T10:07:06.765Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 70.
2021-04-02T10:07:06.809Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 70.
2021-04-02T10:07:06.814Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from org_plan_units_inventory  OP
                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '70' ]
2021-04-02T10:07:06.837Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2021-04-02T10:07:06.881Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 70.
2021-04-02T10:07:06.884Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '70' ]
2021-04-02T10:07:06.996Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 112 msec
2021-04-02T10:07:07.064Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE\n                        from org_plan_units_inventory  OP\n                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID"': 1 record(s); took 250 msec
2021-04-02T10:07:12.234Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-02T10:07:12.235Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-02T10:07:12.237Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-02T10:07:12.254Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 17 msec
2021-04-03T04:16:18.680Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-03', startTime: '09:46 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-03T04:16:18.711Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-03T04:16:18.714Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Saturday
2021-04-03T04:16:18.642Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-03T04:16:29.568Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%KU%', '%KU%', '%KU%', '%KU%' ]
2021-04-03T04:16:29.455Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T04:16:29.792Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%KUma%', '%KUma%', '%KUma%', '%KUma%' ]
2021-04-03T04:16:29.790Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T04:16:30.130Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%KUmar%', '%KUmar%', '%KUmar%', '%KUmar%' ]
2021-04-03T04:16:30.128Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T04:16:31.043Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%KU%', '%KU%', '%KU%', '%KU%' ]
2021-04-03T04:16:31.040Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T04:16:31.397Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%K%', '%K%', '%K%', '%K%' ]
2021-04-03T04:16:31.390Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T04:16:32.325Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Ku%', '%Ku%', '%Ku%', '%Ku%' ]
2021-04-03T04:16:32.179Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T04:16:32.990Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Kuma%', '%Kuma%', '%Kuma%', '%Kuma%' ]
2021-04-03T04:16:32.860Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T04:16:33.312Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Kumar%', '%Kumar%', '%Kumar%', '%Kumar%' ]
2021-04-03T04:16:33.214Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:33:25.797Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-03', startTime: '11:03 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-03T05:33:25.818Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-03T05:33:25.820Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Saturday
2021-04-03T05:33:25.569Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-03T05:33:32.694Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%san%', '%san%', '%san%', '%san%' ]
2021-04-03T05:33:32.557Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:33:33.855Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%sa%', '%sa%', '%sa%', '%sa%' ]
2021-04-03T05:33:33.805Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:33:34.286Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%s%', '%s%', '%s%', '%s%' ]
2021-04-03T05:33:34.280Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:34:35.079Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Pa%', '%Pa%', '%Pa%', '%Pa%' ]
2021-04-03T05:34:35.000Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:34:35.392Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Palla%', '%Palla%', '%Palla%', '%Palla%' ]
2021-04-03T05:34:35.342Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:34:35.877Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Pallavi%', '%Pallavi%', '%Pallavi%', '%Pallavi%' ]
2021-04-03T05:34:35.838Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:34:38.930Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Pal%', '%Pal%', '%Pal%', '%Pal%' ]
2021-04-03T05:34:38.913Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:34:39.487Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%P%', '%P%', '%P%', '%P%' ]
2021-04-03T05:34:39.484Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:34:40.977Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Ptavall%', '%Ptavall%', '%Ptavall%', '%Ptavall%' ]
2021-04-03T05:34:40.974Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:34:41.631Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Ptavallika%', '%Ptavallika%', '%Ptavallika%', '%Ptavallika%' ]
2021-04-03T05:34:41.629Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:34:44.165Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Pavallika%', '%Pavallika%', '%Pavallika%', '%Pavallika%' ]
2021-04-03T05:34:44.164Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T05:34:44.631Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Pravallika%', '%Pravallika%', '%Pravallika%', '%Pravallika%' ]
2021-04-03T05:34:44.630Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T06:06:53.713Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-03', startTime: '11:36 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-03T06:06:53.853Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-03T06:06:54.109Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Saturday
2021-04-03T06:06:53.414Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-03T06:07:05.188Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Vijay%', '%Vijay%', '%Vijay%', '%Vijay%' ]
2021-04-03T06:07:04.952Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T06:13:48.571Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-04-03T06:13:48.804Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-04-03T06:13:48.814Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8900987789 and messageData! 'Dear Vijay,\nYour appointment with shephaalie shrivastavaa at Child care is booked for 03-04-2021 08:00 pm. \nBest Wishes and Warm Regards.'
2021-04-03T06:13:49.689Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-03T06:14:18.238Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-03', startTime: '05:30 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-03T06:14:18.334Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-03T06:14:18.428Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Saturday
2021-04-03T06:14:17.865Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-03T06:14:18.806Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-03', startTime: '05:30 AM', timeType: 'today', addSlot: '08:00 PM', originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-03T06:14:18.816Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-03T06:14:18.882Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Saturday
2021-04-03T06:14:18.754Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-03T06:14:19.094Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Vijay%', '%Vijay%', '%Vijay%', '%Vijay%' ]
2021-04-03T06:14:19.091Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T06:14:32.836Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-03', startTime: '05:30 AM', timeType: 'today', addSlot: '08:00 PM', originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-03T06:14:33.078Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-03T06:14:33.093Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Saturday
2021-04-03T06:14:32.366Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-03T06:14:33.416Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-03', startTime: '05:30 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-03T06:14:33.429Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-03T06:14:33.433Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Saturday
2021-04-03T06:14:33.314Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-03T06:14:33.780Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Vijay%', '%Vijay%', '%Vijay%', '%Vijay%' ]
2021-04-03T06:14:33.760Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T07:11:55.043Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-03', startTime: '12:41 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-03T07:11:54.865Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-03T07:11:55.206Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-03T07:11:55.212Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Saturday
2021-04-03T07:12:03.013Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Solo%', '%Solo%', '%Solo%', '%Solo%' ]
2021-04-03T07:12:03.010Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T07:12:03.866Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Solom%', '%Solom%', '%Solom%', '%Solom%' ]
2021-04-03T07:12:03.833Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T07:12:04.428Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Solomn%', '%Solomn%', '%Solomn%', '%Solomn%' ]
2021-04-03T07:12:04.423Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T07:12:07.143Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Solom%', '%Solom%', '%Solom%', '%Solom%' ]
2021-04-03T07:12:07.140Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T07:12:09.324Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Solomo%', '%Solomo%', '%Solomo%', '%Solomo%' ]
2021-04-03T07:12:09.340Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Solomon%', '%Solomon%', '%Solomon%', '%Solomon%' ]
2021-04-03T07:12:09.319Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T07:12:09.339Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T07:12:18.831Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Ma%', '%Ma%', '%Ma%', '%Ma%' ]
2021-04-03T07:12:18.828Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T07:12:19.921Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Mahes%', '%Mahes%', '%Mahes%', '%Mahes%' ]
2021-04-03T07:12:19.920Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T07:12:20.100Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Mahesh%', '%Mahesh%', '%Mahesh%', '%Mahesh%' ]
2021-04-03T07:12:20.038Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T07:12:43.746Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-04-03T07:12:43.939Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-04-03T07:12:44.097Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9090989873 and messageData! 'Dear Mahesh,\nYour appointment with shephaalie shrivastavaa at Child care is booked for 03-04-2021 03:00 pm. \nBest Wishes and Warm Regards.'
2021-04-03T07:12:44.810Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-03T07:12:51.786Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-03', startTime: '05:30 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-03T07:12:51.810Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-03T07:12:51.811Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Saturday
2021-04-03T07:12:51.779Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-03T07:12:51.912Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-03', startTime: '05:30 AM', timeType: 'today', addSlot: '03:00 PM', originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-03T07:12:52.113Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-03T07:12:52.248Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Saturday
2021-04-03T07:12:51.892Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-03T07:12:53.026Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Mahesh%', '%Mahesh%', '%Mahesh%', '%Mahesh%' ]
2021-04-03T07:12:52.897Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-03T07:18:28.591Z |-[32minfo[39m [router:Consultation.js]: Doctor Informations are shephaalie shrivastavaa
2021-04-03T07:18:28.594Z |-[32minfo[39m [router:Consultation.js]: patient email address is 
2021-04-03T07:18:31.316Z |-[34mdebug[39m [router:Consultation.js]: Prescription is generated successfully. Email will be sent now.
2021-04-03T07:18:31.338Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendPrescriptionEmail function of AWSSESUtility class  =>  Patient Name : Mahesh , patient Email : 
2021-04-03T07:18:35.266Z |-[34mdebug[39m [utilities : AWSSESEmailUtility.js]: Some error in email sending Empty required header 'To'.
2021-04-03T08:58:58.984Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T08:59:07.982Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T08:59:35.054Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T09:00:09.406Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T09:04:05.530Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T09:48:51.957Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T12:11:30.639Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T12:15:10.358Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T12:16:22.837Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T12:18:35.618Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T13:16:41.838Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T13:16:50.712Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T13:21:08.048Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T13:25:59.095Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T13:28:31.588Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T14:56:52.020Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T15:02:20.015Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-03T15:04:22.560Z |-[34mdebug[39m [router:Consultation.js]: Error - Error: ER_BAD_NULL_ERROR: Column 'isSentToPharmacy' cannot be null
2021-04-05T03:51:59.121Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-05', startTime: '09:21 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-05T03:51:59.360Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-05T03:51:59.499Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-04-05T03:51:59.058Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-05T03:52:31.568Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Nare%', '%Nare%', '%Nare%', '%Nare%' ]
2021-04-05T03:52:31.565Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-05T03:52:32.009Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Naresh%', '%Naresh%', '%Naresh%', '%Naresh%' ]
2021-04-05T03:52:32.007Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-05T03:52:59.076Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-04-05T03:52:59.310Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-04-05T03:52:59.320Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8098789989 and messageData! 'Dear Naresh,\nYour appointment with shephaalie shrivastavaa at Child care is booked for 05-04-2021 09:45 pm. \nBest Wishes and Warm Regards.'
2021-04-05T03:52:59.873Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-05T03:53:05.415Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-05', startTime: '05:30 AM', timeType: 'today', addSlot: '09:45 PM', originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-05T03:53:05.420Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-05T03:53:05.423Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-04-05T03:53:05.411Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-05T03:53:05.750Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-05', startTime: '05:30 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-05T03:53:05.964Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-05T03:53:06.316Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-04-05T03:53:05.717Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-05T03:53:06.572Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Naresh%', '%Naresh%', '%Naresh%', '%Naresh%' ]
2021-04-05T03:53:06.547Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-08T12:20:06.928Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-08', startTime: '17:50 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-08T12:20:07.213Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-08T12:20:07.216Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Thursday
2021-04-08T12:20:06.219Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-12T07:38:22.596Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-12', startTime: '13:08 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-12T07:38:22.693Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-12T07:38:22.705Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-04-12T07:38:22.529Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-12T07:53:34.647Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-12', startTime: '13:23 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-12T07:53:34.678Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-12T07:53:34.710Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-04-12T07:53:34.038Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-12T08:11:59.479Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-12', startTime: '13:41 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-12T08:11:59.479Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-12T08:11:59.479Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-04-12T08:11:59.471Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-12T08:21:41.300Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-12', startTime: '13:51 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-12T08:21:41.300Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-12T08:21:41.308Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-04-12T08:21:41.284Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-12T08:23:03.474Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-12', startTime: '13:53 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-12T08:23:03.474Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-12T08:23:03.474Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-04-12T08:23:03.466Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-12T09:24:32.778Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-12', startTime: '14:54 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-12T09:24:32.786Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-12T09:24:32.786Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Monday
2021-04-12T09:24:32.754Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-12T09:24:40.810Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%S%', '%S%', '%S%', '%S%' ]
2021-04-12T09:24:40.810Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-12T09:24:41.330Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Sam%', '%Sam%', '%Sam%', '%Sam%' ]
2021-04-12T09:24:41.330Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-12T09:24:42.186Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Sampa%', '%Sampa%', '%Sampa%', '%Sampa%' ]
2021-04-12T09:24:42.154Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-12T09:24:42.570Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Sampath%', '%Sampath%', '%Sampath%', '%Sampath%' ]
2021-04-12T09:24:42.562Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-12T09:25:06.992Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-04-12T09:25:07.248Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-04-12T09:25:07.256Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8766876867 and messageData! 'Your appointment with Dr. shephaalie shrivastavaa at Child care is booked for 12-04-2021 09:00 pm. Best Wishes and Warm Regards.'
2021-04-12T09:25:08.624Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-12T10:53:57.859Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8500075532 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic undefined.Please use SpotCare CR App to avail various benefits. Click here to download https://www.spotcare.in/api/carereceiver/getcarereceiver'
2021-04-12T10:53:58.564Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-12T10:59:54.412Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9898778888 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic undefined.Please use SpotCare CR App to avail various benefits. Click here to download https://www.spotcare.in/api/carereceiver/getcarereceiver'
2021-04-12T10:59:55.123Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-12T11:41:53.796Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8989878798 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic undefined.Please use SpotCare CR App to avail various benefits. Click here to download https://www.spotcare.in/api/carereceiver/getcarereceiver'
2021-04-12T11:42:15.451Z |-[31merror[39m [utilities : SmsUtility.js -> sendSMS]: Received error while sending sms Error: connect ETIMEDOUT 15.206.223.80:80
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1137:16) {
  errno: 'ETIMEDOUT',
  code: 'ETIMEDOUT',
  syscall: 'connect',
  address: '15.206.223.80',
  port: 80
}
2021-04-12T11:46:03.262Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8778788908 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic undefined.Please use SpotCare CR App to avail various benefits. Click here to download https://www.spotcare.in/api/carereceiver/getcarereceiver'
2021-04-12T11:46:24.411Z |-[31merror[39m [utilities : SmsUtility.js -> sendSMS]: Received error while sending sms Error: connect ETIMEDOUT 15.206.223.80:80
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1137:16) {
  errno: 'ETIMEDOUT',
  code: 'ETIMEDOUT',
  syscall: 'connect',
  address: '15.206.223.80',
  port: 80
}
2021-04-12T11:49:57.889Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 5657609878 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic undefined.Please use SpotCare CR App to avail various benefits. Click here to download https://www.spotcare.in/api/carereceiver/getcarereceiver'
2021-04-12T11:50:23.800Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-12T11:52:21.211Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9888987877 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic undefined.Please use SpotCare CR App to avail various benefits. Click here to download https://www.spotcare.in/api/carereceiver/getcarereceiver'
2021-04-12T11:52:58.070Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-12T11:56:55.912Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8976789098 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic undefined.Please use SpotCare CR App to avail various benefits. Click here to download https://www.spotcare.in/api/carereceiver/getcarereceiver'
2021-04-12T11:57:17.523Z |-[31merror[39m [utilities : SmsUtility.js -> sendSMS]: Received error while sending sms Error: connect ETIMEDOUT 15.206.223.80:80
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1137:16) {
  errno: 'ETIMEDOUT',
  code: 'ETIMEDOUT',
  syscall: 'connect',
  address: '15.206.223.80',
  port: 80
}
2021-04-12T11:58:24.340Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9878098780 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic undefined.Please use SpotCare CR App to avail various benefits. Click here to download https://www.spotcare.in/api/carereceiver/getcarereceiver'
2021-04-12T11:58:45.678Z |-[31merror[39m [utilities : SmsUtility.js -> sendSMS]: Received error while sending sms Error: connect ETIMEDOUT 15.206.223.80:80
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1137:16) {
  errno: 'ETIMEDOUT',
  code: 'ETIMEDOUT',
  syscall: 'connect',
  address: '15.206.223.80',
  port: 80
}
2021-04-13T05:20:17.620Z |-[34mdebug[39m [router:service-list]: Get All service and plan details for given orgId 70.
2021-04-13T05:20:17.635Z |-[32minfo[39m [service:service-plan-by-org]: Service and plan listing for org 70.
2021-04-13T05:20:17.639Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, 
                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE
                        from org_plan_units_inventory  OP
                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK
                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID'; values=[ '70' ]
2021-04-13T05:20:17.654Z |-[34mdebug[39m [router:assigned-unit-list]: Get assigned service unit details.
2021-04-13T05:20:17.660Z |-[34mdebug[39m [service:plan-details]: Getting Assinged Unit details for org 70.
2021-04-13T05:20:17.663Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do
                        INNER JOIN org_user_mapping om on om.doctor_id = do.id
                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK
                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK
                        INNER JOIN organisation o on o.id = om.org_id
                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'; values=[ '70' ]
2021-04-13T05:20:18.071Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(ua.ID) ASSIGNMENT_ID, do.id USER_ID, do.name NAME, BIN_TO_UUID(ua.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC SERVICE_NAME, ua.UNITS_ASSIGNED, ua.UNITS_CONSUMED  from doctor do\n                        INNER JOIN org_user_mapping om on om.doctor_id = do.id\n                        INNER join user_units_assignment ua on ua.ORG_ID = om.org_id and do.id = ua.USER_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = ua.SERVICE_ID_FK\n                        INNER JOIN organisation o on o.id = om.org_id\n                        where om.org_id = ? and om.is_inactive = false and o.is_inactive = false;'': 0 record(s); took 408 msec
2021-04-13T05:20:18.399Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"select BIN_TO_UUID(OP.PLAN_ID_FK) PLAN_ID, PL.NAME, PL.PLAN_DESC ,BIN_TO_UUID(OP.SERVICE_ID_FK) SERVICE_ID, ST.TYPE_DESC, \n                        OP.FREE_UNITS, DATE_FORMAT(OP.EXPIRY_DATE, '%Y-%m-%d') EXPIRY_DATE\n                        from org_plan_units_inventory  OP\n                        inner join plans PL on PL.PLAN_ID = OP.PLAN_ID_FK\n                        INNER JOIN service_type ST ON ST.TYPE_ID = OP.SERVICE_ID_FK\n                        WHERE OP.ORG_ID = ? ORDER BY SERVICE_ID, PLAN_ID"': 1 record(s); took 761 msec
2021-04-13T05:20:51.175Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-13T05:20:51.175Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-13T05:20:51.181Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'TOPUP' ]
2021-04-13T05:20:51.317Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 1 record(s); took 136 msec
2021-04-13T05:22:57.432Z |-[34mdebug[39m [router:plan-type-list]: Get All Plan Type Details.
2021-04-13T05:22:57.435Z |-[32minfo[39m [service:plan-types-list]: Plan type listing.
2021-04-13T05:22:57.436Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE
                        WHERE IS_DELETED = false'; values=[]
2021-04-13T05:22:57.441Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM PLAN_TYPE\n                        WHERE IS_DELETED = false'': 2 record(s); took 5 msec
2021-04-13T05:22:57.601Z |-[34mdebug[39m [router:duration-type-list]: Get All Duration Type Details.
2021-04-13T05:22:57.603Z |-[32minfo[39m [service:duration-types-list]: Duration type listing.
2021-04-13T05:22:57.605Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(DURATION_TYPE_ID) TYPE_ID, TYPE_DESC FROM DURATION_TYPE
                        WHERE IS_DELETED = false'; values=[]
2021-04-13T05:22:57.611Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(DURATION_TYPE_ID) TYPE_ID, TYPE_DESC FROM DURATION_TYPE\n                        WHERE IS_DELETED = false'': 3 record(s); took 6 msec
2021-04-13T05:22:57.819Z |-[34mdebug[39m [router:service-list]: Get All service names.
2021-04-13T05:22:57.822Z |-[32minfo[39m [service:service-list]: Service type listing.
2021-04-13T05:22:57.825Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE
                        WHERE IS_DELETED = false'; values=[]
2021-04-13T05:22:57.830Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(TYPE_ID) TYPE_ID, TYPE_DESC FROM SERVICE_TYPE\n                        WHERE IS_DELETED = false'': 2 record(s); took 5 msec
2021-04-13T05:23:00.193Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-13T05:23:00.194Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-13T05:23:00.196Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,
                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'; values=[ 'ALL' ]
2021-04-13T05:23:00.202Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,\n                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'': 3 record(s); took 6 msec
2021-04-13T05:23:12.474Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-04-13T05:23:12.476Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-04-13T05:23:12.477Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,
                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'; values=[ 'ALL' ]
2021-04-13T05:23:12.483Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, PT.TYPE_DESC,\n                        P.PLAN_VALIDITY_DAYS validityInDays, lower(P.STATUS) STATUS FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE  P.IS_DELETED = false and PT.IS_DELETED = false;'': 3 record(s); took 5 msec
2021-04-13T05:23:15.618Z |-[34mdebug[39m [router:coupon-list]: Get All Payment Details.
2021-04-13T05:23:15.620Z |-[32minfo[39m [service:coupon-list]: plan listing.
2021-04-13T05:23:15.623Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,
		                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C
                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID
                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID
                        WHERE  C.IS_DELETED = false ;'; values=[]
2021-04-13T05:23:15.780Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,\n\t\t                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C\n                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID\n                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID\n                        WHERE  C.IS_DELETED = false ;"': 8 record(s); took 157 msec
2021-04-13T05:23:33.780Z |-[34mdebug[39m [router:update-plan-status]: Updating Coupon status.
2021-04-13T05:23:33.780Z |-[32minfo[39m [service:coupon-status]: update coupon status of couponId 2ef180de-0ab4-11eb-9190-0af6cee43c42.
2021-04-13T05:23:33.780Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update coupons SET IS_ACTIVE = ?, VERSION = IFNULL(VERSION, 0) + 1 where BIN_TO_UUID(COUPON_ID) = ? '; values=[ false, '2ef180de-0ab4-11eb-9190-0af6cee43c42' ]
2021-04-13T05:23:33.780Z |-[34mdebug[39m [router:update-plan-status]: Updating coupon status as false for couponId 2ef180de-0ab4-11eb-9190-0af6cee43c42
2021-04-13T05:23:33.853Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update coupons SET IS_ACTIVE = ?, VERSION = IFNULL(VERSION, 0) + 1 where BIN_TO_UUID(COUPON_ID) = ? '': undefined record(s); took 73 msec
2021-04-13T05:23:33.897Z |-[34mdebug[39m [router:coupon-list]: Get All Payment Details.
2021-04-13T05:23:33.897Z |-[32minfo[39m [service:coupon-list]: plan listing.
2021-04-13T05:23:33.897Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,
		                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C
                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID
                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID
                        WHERE  C.IS_DELETED = false ;'; values=[]
2021-04-13T05:23:33.897Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,\n\t\t                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C\n                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID\n                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID\n                        WHERE  C.IS_DELETED = false ;"': 8 record(s); took 0 msec
2021-04-13T05:23:53.585Z |-[34mdebug[39m [router:update-plan-status]: Updating Coupon status.
2021-04-13T05:23:53.587Z |-[32minfo[39m [service:coupon-status]: update coupon status of couponId 2ef180de-0ab4-11eb-9190-0af6cee43c42.
2021-04-13T05:23:53.589Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update coupons SET IS_ACTIVE = ?, VERSION = IFNULL(VERSION, 0) + 1 where BIN_TO_UUID(COUPON_ID) = ? '; values=[ true, '2ef180de-0ab4-11eb-9190-0af6cee43c42' ]
2021-04-13T05:23:53.586Z |-[34mdebug[39m [router:update-plan-status]: Updating coupon status as true for couponId 2ef180de-0ab4-11eb-9190-0af6cee43c42
2021-04-13T05:23:53.702Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update coupons SET IS_ACTIVE = ?, VERSION = IFNULL(VERSION, 0) + 1 where BIN_TO_UUID(COUPON_ID) = ? '': undefined record(s); took 113 msec
2021-04-13T05:23:53.740Z |-[34mdebug[39m [router:coupon-list]: Get All Payment Details.
2021-04-13T05:23:53.740Z |-[32minfo[39m [service:coupon-list]: plan listing.
2021-04-13T05:23:53.740Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,
		                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C
                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID
                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID
                        WHERE  C.IS_DELETED = false ;'; values=[]
2021-04-13T05:23:53.740Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE,C.DESCRIPTION, C.DISCOUNT, C.DISCOUNT_TYPE, C.START_DATE, C.END_DATE,\n\t\t                C.IS_ACTIVE, IFNULL(P.NAME,'') PLAN_NAME FROM coupons C\n                        INNER JOIN coupons_plan CP ON CP.COUPON_ID = C.COUPON_ID\n                        INNER JOIN plans P ON P.PLAN_ID = CP.PLAN_ID\n                        WHERE  C.IS_DELETED = false ;"': 8 record(s); took 0 msec
2021-04-13T05:37:10.724Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9900949343 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic undefined.Please use SpotCare CR App to avail various benefits. Click here to download https://www.spotcare.in/api/carereceiver/getcarereceiver'
2021-04-13T05:37:11.664Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-15T13:45:32.316Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-15', startTime: '19:15 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-15T13:45:32.572Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-15T13:45:32.576Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Thursday
2021-04-15T13:45:32.162Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-15T13:45:39.551Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%g%', '%g%', '%g%', '%g%' ]
2021-04-15T13:45:39.548Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-15T13:45:40.422Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%d%', '%d%', '%d%', '%d%' ]
2021-04-15T13:45:40.354Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-15T13:45:40.791Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dha%', '%dha%', '%dha%', '%dha%' ]
2021-04-15T13:45:40.788Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-15T13:45:50.395Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Dhanendra%', '%Dhanendra%', '%Dhanendra%', '%Dhanendra%' ]
2021-04-15T13:45:50.389Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-15T13:53:49.835Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-15', startTime: '19:23 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-15T13:53:49.839Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-15T13:53:49.840Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Thursday
2021-04-15T13:53:49.812Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-15T13:54:07.197Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-15', startTime: '19:24 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-15T13:54:07.262Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-15T13:54:07.271Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Thursday
2021-04-15T13:54:07.194Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-16T03:25:16.379Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-16', startTime: '08:55 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-16T03:25:16.392Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-16T03:25:16.396Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Friday
2021-04-16T03:25:16.371Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-16T03:25:20.003Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dha%', '%dha%', '%dha%', '%dha%' ]
2021-04-16T03:25:20.003Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-16T03:25:21.669Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Dhanendra%', '%Dhanendra%', '%Dhanendra%', '%Dhanendra%' ]
2021-04-16T03:25:21.651Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-16T03:25:46.365Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Dhanendr%', '%Dhanendr%', '%Dhanendr%', '%Dhanendr%' ]
2021-04-16T03:25:46.359Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-16T03:25:49.396Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dha%', '%dha%', '%dha%', '%dha%' ]
2021-04-16T03:25:49.391Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-16T03:25:52.183Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dhanendra%', '%dhanendra%', '%dhanendra%', '%dhanendra%' ]
2021-04-16T03:25:52.170Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-16T04:00:50.539Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-16', startTime: '09:30 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-16T04:00:50.544Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-16T04:00:50.546Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Friday
2021-04-16T04:00:50.532Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-16T04:00:57.232Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%d%', '%d%', '%d%', '%d%' ]
2021-04-16T04:00:57.230Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-16T04:00:57.733Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dh%', '%dh%', '%dh%', '%dh%' ]
2021-04-16T04:00:57.728Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-16T04:00:59.384Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Dhanendra%', '%Dhanendra%', '%Dhanendra%', '%Dhanendra%' ]
2021-04-16T04:00:59.381Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-16T10:29:10.126Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9886124422 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic Sri Vatsal Gurukul Vidyalaya.Please use SpotCare CR App to avail various benefits. Click here to download [url=https://www.spotcare.in/api/carereceiver/getcarereceiver]'
2021-04-16T10:29:11.693Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-19T06:05:45.775Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9900949343 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic Sri Vatsal Gurukul Vidyalaya.Please use SpotCare CR App to avail various benefits. Click here to download [url=https://www.spotcare.in/api/carereceiver/getcarereceiver]'
2021-04-19T06:05:46.843Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-19T06:23:11.158Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8909887880 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic Sri Vatsal Gurukul Vidyalaya.Please use SpotCare CR App to avail various benefits. Click here to download [url=https://www.spotcare.in/api/carereceiver/getcarereceiver]'
2021-04-19T06:23:12.125Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-19T07:53:08.361Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9098789098 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic Sri Vatsal Gurukul Vidyalaya.Please use SpotCare CR App to avail various benefits. Click here to download [url=https://www.spotcare.in/api/carereceiver/getcarereceiver]'
2021-04-19T07:53:09.068Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-19T07:56:51.145Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8909878909 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic Sri Vatsal Gurukul Vidyalaya.Please use SpotCare CR App to avail various benefits. Click here to download [url=https://www.spotcare.in/api/carereceiver/getcarereceiver]'
2021-04-19T07:56:53.688Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-19T09:41:42.033Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9098767890 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic Sri Vatsal Gurukul Vidyalaya.Please use SpotCare CR App to avail various benefits. Click here to download [url=https://www.spotcare.in/api/carereceiver/getcarereceiver]'
2021-04-19T09:41:43.842Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-19T11:30:30.963Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9849625827 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic Sri Vatsal Gurukul Vidyalaya.Please use SpotCare CR App to avail various benefits. Click here to download [url=https://www.spotcare.in/api/carereceiver/getcarereceiver]'
2021-04-19T11:30:32.558Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'AZQ01', message: 'Kindly provide apikey' }
2021-04-19T11:38:28.902Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9849625827 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic Sri Vatsal Gurukul Vidyalaya.Please use SpotCare CR App to avail various benefits. Click here to download [url=https://www.spotcare.in/api/carereceiver/getcarereceiver]'
2021-04-19T11:38:30.356Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '150728380-1', mobile: '919849625827', status: 'SUBMITTED' } ], msgid: '8823150728380659', message: 'message Submitted successfully' }
2021-04-20T04:40:33.282Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-20', startTime: '10:10 AM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-20T04:40:33.327Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-20T04:40:33.331Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Tuesday
2021-04-20T04:40:33.163Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-20T04:40:37.735Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%d%', '%d%', '%d%', '%d%' ]
2021-04-20T04:40:37.733Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-20T04:40:38.180Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dh%', '%dh%', '%dh%', '%dh%' ]
2021-04-20T04:40:38.177Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-20T04:40:40.777Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Dhanendra%', '%Dhanendra%', '%Dhanendra%', '%Dhanendra%' ]
2021-04-20T04:40:40.775Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-20T07:08:10.915Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-20', startTime: '12:38 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-20T07:08:10.979Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-20T07:08:11.066Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Tuesday
2021-04-20T07:08:10.800Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-20T07:08:16.159Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dha%', '%dha%', '%dha%', '%dha%' ]
2021-04-20T07:08:16.158Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-20T07:52:17.416Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-20', startTime: '13:22 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-20T07:52:17.821Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-20T07:52:17.825Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Tuesday
2021-04-20T07:52:17.017Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-20T08:02:50.100Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dh%', '%dh%', '%dh%', '%dh%' ]
2021-04-20T08:02:50.098Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-20T08:02:50.359Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%dha%', '%dha%', '%dha%', '%dha%' ]
2021-04-20T08:02:50.343Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-20T08:05:18.798Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Dhanendra Test%', '%Dhanendra Test%', '%Dhanendra Test%', '%Dhanendra Test%' ]
2021-04-20T08:05:18.669Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-20T08:05:46.476Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-20', startTime: '13:35 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-20T08:05:46.480Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-20T08:05:46.481Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Tuesday
2021-04-20T08:05:46.378Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-20T10:01:34.109Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-20', startTime: '15:31 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-20T10:01:34.463Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-20T10:01:34.467Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Tuesday
2021-04-20T10:01:33.835Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-20T10:01:38.660Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%g%', '%g%', '%g%', '%g%' ]
2021-04-20T10:01:38.650Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-20T10:01:40.106Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 66, '%Gowthami%', '%Gowthami%', '%Gowthami%', '%Gowthami%' ]
2021-04-20T10:01:40.082Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-04-21T09:20:49.474Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-04-21', startTime: '14:50 PM', timeType: 'today', addSlot: null, originalUserTypeId: 78, originalOrgUserMappingId: 210, userTypeId: 78, orgUserMappingId: 210, timeInterval: '15', orgId: 66, type: 'Doctor', userId: 258, tzOffset: 330 }
2021-04-21T09:20:49.534Z |-[34mdebug[39m [service:appointment]: Time Interval is : 15
2021-04-21T09:20:49.540Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Wednesday
2021-04-21T09:20:49.262Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-04-21T12:14:39.505Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9900949343 and messageData! 'Welcome to Spotcare. You have an invitation to join virtual clinic Sri Vatsal Gurukul Vidyalaya.Please use SpotCare CR App to avail various benefits. Click here to download [url=https://www.spotcare.in/api/carereceiver/getcarereceiver]'
2021-04-21T12:14:42.139Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '151511614-1', mobile: '919900949343', status: 'SUBMITTED' } ], msgid: '8589151511614791', message: 'message Submitted successfully' }
2021-11-24T12:17:00.697Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-11-24', startTime: '17:47 PM', timeType: 'today', addSlot: null, originalUserTypeId: 173, originalOrgUserMappingId: 506, userTypeId: 173, orgUserMappingId: 506, timeInterval: '10', orgId: 151, type: 'Doctor', userId: 549, tzOffset: 330 }
2021-11-24T12:17:00.706Z |-[34mdebug[39m [service:appointment]: Time Interval is : 10
2021-11-24T12:17:00.708Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Wednesday
2021-11-24T12:17:00.684Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-11-24T12:17:05.091Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 151, '%Sameeh%', '%Sameeh%', '%Sameeh%', '%Sameeh%' ]
2021-11-24T12:17:05.087Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-11-24T12:17:07.113Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 151, '%sameehnmds%', '%sameehnmds%', '%sameehnmds%', '%sameehnmds%' ]
2021-11-24T12:17:07.111Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-11-24T12:18:08.239Z |-[34mdebug[39m [service:appointment]: Request body recieved by getSlot : { date: '2021-11-24', startTime: '17:48 PM', timeType: 'today', addSlot: null, originalUserTypeId: 173, originalOrgUserMappingId: 506, userTypeId: 173, orgUserMappingId: 506, timeInterval: '10', orgId: 151, type: 'Doctor', userId: 549, tzOffset: 330 }
2021-11-24T12:18:08.240Z |-[34mdebug[39m [service:appointment]: Time Interval is : 10
2021-11-24T12:18:08.241Z |-[34mdebug[39m [service:appointment]: Selected Weekday is Wednesday
2021-11-24T12:18:08.237Z |-[34mdebug[39m [controllers -> /slots]: Get Slot for booking.
2021-11-24T12:18:21.149Z |-[32minfo[39m [service:appointment]: Parameters being passed to get_all_patient query :  [ 151, '%Sameeh%', '%Sameeh%', '%Sameeh%', '%Sameeh%' ]
2021-11-24T12:18:21.147Z |-[34mdebug[39m [controllers -> /getAllPatients]: getAllPatients for booking appointment
2021-11-24T12:18:28.187Z |-[32minfo[39m [service:appointment]: bookPatientAppointment request body { preferredTime: '06:30 PM', checkedIn: 'false', duration: '', appointmentDate: 'Wed Nov 24 2021 17:48:08 GMT+0530 (India Standard Time)', spotWalkin: '0', patientId: '34672', checkedInTime: 'null', selectedDocUserMapping: '', selectedDocId: '', isVideo: 'false', email: 'sameeh4321@gmail.com', address: 'Malappuram,kerala', originalUserTypeId: 173, originalOrgUserMappingId: 506, userTypeId: 173, orgUserMappingId: 506, timeInterval: '10', orgId: 151, type: 'Doctor', userId: 549, tzOffset: 330 }
2021-11-24T12:18:28.183Z |-[32minfo[39m [controllers -> /bookPatientAppointment]: In /bookpatientappointment
2021-11-24T12:18:28.482Z |-[32minfo[39m [service:appointment]: serch exesting appointment []
2021-11-24T12:18:28.511Z |-[32minfo[39m [service:appointment]: Inside In Person Appointment
2021-11-24T12:18:28.535Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In sendUserEmail function of AWSSESUtility class  =>  messageKey : appointmentBookingSMS , sendTo : sameeh4321@gmail.com
2021-11-24T12:18:28.538Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In Email ToAddresses sameeh4321@gmail.com and TemplateData! '{"param0":"Sameeh","param1":"Manish","param2":"Yashodha","param3":"24-11-2021 06:30 pm","param4":null}'
2021-11-24T12:18:28.539Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Params for Sending Email : { Template: 'inPersonAppointmentDummyEmail', Destination: { ToAddresses: [ 'sameeh4321@gmail.com' ] }, Source: '<spotcare@klinikeverywhere.com>', TemplateData: '{"param0":"Sameeh","param1":"Manish","param2":"Yashodha","param3":"24-11-2021 06:30 pm","param4":null}' }
2021-11-24T12:18:28.514Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your appointment with Dr. Manish at Yashodha is booked for 24-11-2021 06:30 pm. Best Wishes and Warm Regards.'
2021-11-24T12:18:28.951Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '271608462-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '9919271608462831', message: 'message Submitted successfully' }
2021-11-24T12:18:29.022Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: Response Recieved In Email Sending Function { ResponseMetadata: { RequestId: '2dd24f9f-46d1-4b77-82ea-aaf78f833735' }, MessageId: '0109017d51e20d21-b39ec1cc-4770-4d1a-8e3b-4e06bea01b09-000000' }
2021-11-25T07:20:59.673Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-11-25T07:20:59.663Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-11-25T07:20:59.677Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-11-25T07:20:59.708Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 2 record(s); took 32 msec
2021-11-25T07:21:11.999Z |-[34mdebug[39m [router:payment-coupon]: Validate coupon code and return price after applying coupon discount.
2021-11-25T07:21:12.002Z |-[34mdebug[39m [service:coupon-validation]: Validating coupon code and return value after applying coupon discount.
2021-11-25T07:21:12.004Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select count(*) from sales_partner where name = ?'; values=[ 'SPOT100' ]
2021-11-25T07:21:12.018Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select count(*) from sales_partner where name = ?'': 1 record(s); took 14 msec
2021-11-25T07:21:12.019Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from coupons C
                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()
                                and is_deleted = false'; values=[ 'SPOT100' ]
2021-11-25T07:21:12.047Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from coupons C\n                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()\n                                and is_deleted = false'': 1 record(s); took 28 msec
2021-11-25T07:21:12.048Z |-[34mdebug[39m [service:coupon-validation]: Coupon SPOT100 is valid - [object Object]
2021-11-25T07:21:12.049Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select amount from plans  where PLAN_ID = UUID_TO_BIN(?);'; values=[ '4f5a83ba-24f7-11eb-a980-0275bd679b64' ]
2021-11-25T07:21:12.052Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select amount from plans  where PLAN_ID = UUID_TO_BIN(?);'': 1 record(s); took 3 msec
2021-11-25T07:21:12.055Z |-[34mdebug[39m [service:coupon-validation]: Caculating discount in percentage
2021-11-25T07:21:14.373Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2021-11-25T07:21:14.377Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2021-11-25T07:21:14.378Z |-[34mdebug[39m [service:update-payment]: [object Object]
2021-11-25T07:21:14.380Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2021-11-25T07:21:14.381Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2021-11-25T07:21:14.383Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update pharmacy set is_inactive = 0 where id = ?'; values=[ 236 ]
2021-11-25T07:21:14.388Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update pharmacy set is_inactive = 0 where id = ?'': undefined record(s); took 5 msec
2021-11-25T07:21:14.400Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select * from user where admin_id in (select admin_id from org_user_mapping where org_id= ? and admin_id is not null)'; values=[ 236 ]
2021-11-25T07:21:14.413Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select * from user where admin_id in (select admin_id from org_user_mapping where org_id= ? and admin_id is not null)'': 1 record(s); took 13 msec
2021-11-25T07:21:14.414Z |-[34mdebug[39m [LIB:db-util]: About to execute 'CALL create_password(?, ?, ?, ?)'; values=[ 83, 236, 'Chemist', 'a0da13dfc01d0b4b34e83a33e2e4fa7e601300fab3c92132874e4cce19d788aa' ]
2021-11-25T07:21:14.429Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''CALL create_password(?, ?, ?, ?)'': 2 record(s); took 15 msec
2021-11-25T07:21:14.489Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-11-25T07:21:14.688Z |-[34mdebug[39m [LIB:db-util]: About to execute 'CALL create_password(?, ?, ?, ?)'; values=[ 255, 236, 'admin', '626d54d0cd6f5ffc6d6dd1dfab69ab15f81712ab6d85761133a51a6f45c19c00' ]
2021-11-25T07:21:14.692Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''CALL create_password(?, ?, ?, ?)'': 2 record(s); took 5 msec
2021-11-25T07:21:14.741Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-11-25T07:21:14.882Z |-[34mdebug[39m [service:update-payment]: Activating organization id 236 on successfull online payment.
2021-11-25T07:21:14.891Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 4f5a83ba-24f7-11eb-a980-0275bd679b64.
2021-11-25T07:21:14.892Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P
                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '4f5a83ba-24f7-11eb-a980-0275bd679b64' ]
2021-11-25T07:21:14.999Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P\n                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 2 record(s); took 107 msec
2021-11-25T07:21:15.005Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 236, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-6077-71c8-91ea-a09c6e0a79c9', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-11-25T07:21:15.004Z, 0 ]
2021-11-25T07:21:15.018Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 13 msec
2021-11-25T07:21:15.021Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 236, '4f5a83ba-24f7-11eb-a980-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 100, 'c2adc2a5-c2a3-71c8-91ea-a09c6e0a79c9', false, 2022-11-25T07:21:15.020Z, 0 ]
2021-11-25T07:21:15.023Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 2 msec
2021-11-25T07:21:15.026Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 644 ms
2021-11-25T07:23:06.964Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2021-11-25T07:23:06.972Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2021-11-25T07:23:06.970Z |-[32minfo[39m [service:plan-list]: plan listing.
2021-11-25T07:23:06.979Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': 2 record(s); took 8 msec
2021-11-25T07:23:14.487Z |-[34mdebug[39m [router:payment-order-creation]: Generate payment order.
2021-11-25T07:23:14.489Z |-[34mdebug[39m [service:payment-order-creation]: Payment order generation.
2021-11-25T07:23:15.434Z |-[34mdebug[39m [service:payment-order-creation]: Saving Payment order id order_IPkijOISavdarN for org 0
2021-11-25T07:23:15.444Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) 
                                VALUES
                                (?,?,?,?,?,?,?,?,?)'; values=[ 0, 'order_IPkijOISavdarN', null, null, 649, null, 'ORDER_CREATED', 0, 0 ]
2021-11-25T07:23:15.486Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO razopay_details (ORG_ID,RAZORPAY_ORDER_ID,RAZORPAY_PAY_ID,RAZORPAY_SIGNATURE,AMOUNT,PAID_DATE,STATUS,MODIFIED_BY,CREATED_BY) \n                                VALUES\n                                (?,?,?,?,?,?,?,?,?)'': undefined record(s); took 42 msec
2021-11-25T07:23:15.489Z |-[34mdebug[39m [service:payment-order-creation]: successfully update the order details
2021-11-25T07:23:21.945Z |-[34mdebug[39m [router:payment-coupon]: Validate coupon code and return price after applying coupon discount.
2021-11-25T07:23:21.947Z |-[34mdebug[39m [service:coupon-validation]: Validating coupon code and return value after applying coupon discount.
2021-11-25T07:23:21.948Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select count(*) from sales_partner where name = ?'; values=[ 'SPOT100' ]
2021-11-25T07:23:21.952Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select count(*) from sales_partner where name = ?'': 1 record(s); took 4 msec
2021-11-25T07:23:21.953Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from coupons C
                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()
                                and is_deleted = false'; values=[ 'SPOT100' ]
2021-11-25T07:23:21.958Z |-[34mdebug[39m [service:coupon-validation]: Coupon SPOT100 is valid - [object Object]
2021-11-25T07:23:21.957Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select BIN_TO_UUID(C.COUPON_ID) COUPON_ID, C.CODE, C.DISCOUNT, C.DISCOUNT_TYPE, DESCRIPTION from coupons C\n                        where CODE = ? and IS_ACTIVE = true and START_DATE <= CURDATE() and END_DATE >= CURDATE()\n                                and is_deleted = false'': 1 record(s); took 4 msec
2021-11-25T07:23:21.959Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select amount from plans  where PLAN_ID = UUID_TO_BIN(?);'; values=[ '12349f46-0b90-11eb-9571-0275bd679b64' ]
2021-11-25T07:23:21.967Z |-[34mdebug[39m [service:coupon-validation]: Caculating discount in percentage
2021-11-25T07:23:21.964Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select amount from plans  where PLAN_ID = UUID_TO_BIN(?);'': 1 record(s); took 5 msec
2021-11-25T07:23:23.553Z |-[34mdebug[39m [router:save-payment]: callback to be called by razopay to update payment details.
2021-11-25T07:23:23.554Z |-[34mdebug[39m [service:update-payment]: Update payment details.
2021-11-25T07:23:23.556Z |-[34mdebug[39m [service:update-payment]: [object Object]
2021-11-25T07:23:23.557Z |-[34mdebug[39m [LIB:db-util]: SUCCESS: connection received from pool
2021-11-25T07:23:23.558Z |-[34mdebug[39m [LIB:db-util]: About to execute transaction
2021-11-25T07:23:23.561Z |-[34mdebug[39m [LIB:db-util]: About to execute 'update lab set is_inactive = 0 where id = ?'; values=[ 237 ]
2021-11-25T07:23:23.568Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''update lab set is_inactive = 0 where id = ?'': undefined record(s); took 7 msec
2021-11-25T07:23:23.579Z |-[34mdebug[39m [LIB:db-util]: About to execute 'select * from user where admin_id in (select admin_id from org_user_mapping where org_id= ? and admin_id is not null)'; values=[ 237 ]
2021-11-25T07:23:23.585Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''select * from user where admin_id in (select admin_id from org_user_mapping where org_id= ? and admin_id is not null)'': 1 record(s); took 6 msec
2021-11-25T07:23:23.586Z |-[34mdebug[39m [LIB:db-util]: About to execute 'CALL create_password(?, ?, ?, ?)'; values=[ 82, 237, 'Laboratory', '3274dbca33e61ee60bab55fc63522c5dea855faca1bd78eef2a664a7c1ac115e' ]
2021-11-25T07:23:23.594Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''CALL create_password(?, ?, ?, ?)'': 2 record(s); took 8 msec
2021-11-25T07:23:23.666Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-11-25T07:23:23.848Z |-[34mdebug[39m [LIB:db-util]: About to execute 'CALL create_password(?, ?, ?, ?)'; values=[ 256, 237, 'admin', '09b5a0d28d5716b65fbd140f0fc144c68564cc2a1d255ee31d6152b08a395f86' ]
2021-11-25T07:23:23.860Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''CALL create_password(?, ?, ?, ?)'': 2 record(s); took 12 msec
2021-11-25T07:23:23.892Z |-[32minfo[39m [utilities : AWSSESEmailUtility.js]: In userRegistrationMail function of AWSSESUtility class 
2021-11-25T07:23:24.037Z |-[34mdebug[39m [service:update-payment]: Activating organization id 237 on successfull online payment.
2021-11-25T07:23:24.040Z |-[34mdebug[39m [service:plan-details]: Getting Plan details for id 12349f46-0b90-11eb-9571-0275bd679b64.
2021-11-25T07:23:24.041Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, 
                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,
                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P
                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID
                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'; values=[ '12349f46-0b90-11eb-9571-0275bd679b64' ]
2021-11-25T07:23:24.062Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.START_DATE, P.END_DATE, \n                            BIN_TO_UUID(P.TYPE_ID_FK) TYPE_ID, IFNULL(P.PLAN_VALIDITY_DAYS,0) PLAN_VALIDITY_DAYS,\n                            PS.FREE_UNITS, BIN_TO_UUID(PS.SERVICE_ID_FK) SERVICE_ID, BIN_TO_UUID(PS.DURATION_TYPE_ID_FK) UNIT_TYPE FROM plans P\n                            INNER JOIN plan_services PS ON PS.PLAN_ID_FK = P.PLAN_ID\n                            WHERE  P.IS_DELETED = false and PS.IS_DELETED = false and BIN_TO_UUID(P.PLAN_ID) = ?'': 1 record(s); took 21 msec
2021-11-25T07:23:24.067Z |-[34mdebug[39m [LIB:db-util]: About to execute 'INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) 
                                VALUES
                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'; values=[ 237, '12349f46-0b90-11eb-9571-0275bd679b64', 'c2adc381-0bc2-9d71-c891-eaa09c6e0a79', 0, 'c2adc381-c49b-71c8-91ea-a09c6e0a79c9', false, 2021-12-25T07:23:24.066Z, 0 ]
2021-11-25T07:23:24.070Z |-[34mdebug[39m [LIB:db-util]: Successfully submitted query: ''INSERT INTO org_plan_units_inventory (ORG_ID,PLAN_ID_FK,SERVICE_ID_FK,FREE_UNITS,DURATION_TYPE_ID_FK,IS_DELETED,EXPIRY_DATE,CREATED_BY) \n                                VALUES\n                                (?,UUID_TO_BIN(?),UUID_TO_BIN(?),?,UUID_TO_BIN(?),?,?,?)'': undefined record(s); took 3 msec
2021-11-25T07:23:24.073Z |-[34mdebug[39m [LIB:db-util]: Successfully committed transaction in 515 ms
2021-12-14T08:23:28.571Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your login otp is 7456.'
2021-12-14T08:23:28.963Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286579641-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '4586286579641292', message: 'message Submitted successfully' }
2021-12-14T08:26:00.711Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your login otp is 1250.'
2021-12-14T08:26:01.130Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286581945-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '5498286581945682', message: 'message Submitted successfully' }
2021-12-14T08:29:58.932Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your login otp is 5576.'
2021-12-14T08:29:59.320Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286585662-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '2443286585662452', message: 'message Submitted successfully' }
2021-12-14T08:32:12.126Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your login otp is 4019.'
2021-12-14T08:32:12.399Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286588094-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '4454286588094156', message: 'message Submitted successfully' }
2021-12-14T08:33:46.634Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your login otp is 6098.'
2021-12-14T08:33:47.916Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286590067-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '7733286590067188', message: 'message Submitted successfully' }
2021-12-14T08:35:15.063Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your login otp is 7088.'
2021-12-14T08:35:15.392Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286591787-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '1682286591787487', message: 'message Submitted successfully' }
2021-12-14T08:36:45.170Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your login otp is 1153.'
2021-12-14T08:36:45.462Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286593602-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '4365286593602228', message: 'message Submitted successfully' }
2021-12-14T08:38:29.115Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your login otp is 8752.'
2021-12-14T08:38:29.444Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286595654-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '6661286595654662', message: 'message Submitted successfully' }
2021-12-14T08:38:55.042Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your login otp is 7857.'
2021-12-14T08:38:55.207Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286596094-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '4131286596094375', message: 'message Submitted successfully' }
2021-12-14T08:39:12.920Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your login otp is 7419.'
2021-12-14T08:39:13.113Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286596382-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '1936286596382511', message: 'message Submitted successfully' }
2021-12-14T08:42:41.448Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 8129547383 and messageData! 'Your login otp is 9226.'
2021-12-14T08:42:41.749Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286599626-1', mobile: '918129547383', status: 'SUBMITTED' } ], msgid: '8889286599626337', message: 'message Submitted successfully' }
2021-12-14T09:13:52.300Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9947356609 and messageData! 'Your login otp is 6888.'
2021-12-14T09:13:52.730Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286627640-1', mobile: '919947356609', status: 'SUBMITTED' } ], msgid: '6439286627640615', message: 'message Submitted successfully' }
2021-12-14T09:15:03.475Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9947356609 and messageData! 'Your login otp is 9852.'
2021-12-14T09:15:03.682Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286628712-1', mobile: '919947356609', status: 'SUBMITTED' } ], msgid: '3931286628712632', message: 'message Submitted successfully' }
2021-12-14T09:19:49.443Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9947356609 and messageData! 'Your login otp is 9337.'
2021-12-14T09:19:49.723Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286633304-1', mobile: '919947356609', status: 'SUBMITTED' } ], msgid: '1536286633304937', message: 'message Submitted successfully' }
2021-12-14T09:20:13.498Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9656748727 and messageData! 'Your login otp is 2112.'
2021-12-14T09:20:13.697Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286633629-1', mobile: '919656748727', status: 'SUBMITTED' } ], msgid: '9534286633629873', message: 'message Submitted successfully' }
2021-12-14T09:21:25.983Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: In sendSms number 9656748727 and messageData! 'Your login otp is 1689.'
2021-12-14T09:21:26.222Z |-[32minfo[39m [utilities : SmsUtility.js -> sendSMS]: Response body recieved after triggering msg : { status: 'OK', data: [ { id: '286634643-1', mobile: '919656748727', status: 'SUBMITTED' } ], msgid: '3645286634643673', message: 'message Submitted successfully' }
2022-02-06T18:37:32.827Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2022-02-06T18:37:32.834Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2022-02-06T18:37:32.832Z |-[32minfo[39m [service:plan-list]: plan listing.
2022-02-06T18:37:32.844Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': Error: ER_SP_DOES_NOT_EXIST: FUNCTION klinik.BIN_TO_UUID does not exist
    at Query.Sequence._packetToError (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23)
    --------------------
    at Protocol._enqueue (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:198:25)
    at C:\Users\Dinesh\Desktop\klinik\spot\lib\lib-db.js:27:22
    at Ping.onOperationComplete (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Pool.js:110:5)
    at Ping.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Ping._callback (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:488:16)
    at Ping.Sequence.end (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:83:24)
    at Ping.Sequence.OkPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:92:8)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23) {
  code: 'ER_SP_DOES_NOT_EXIST',
  errno: 1305,
  sqlMessage: 'FUNCTION klinik.BIN_TO_UUID does not exist',
  sqlState: '42000',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2022-02-06T18:37:32.852Z |-[31merror[39m [router:plan-list]: Plan List could not be fetched: Error: ER_SP_DOES_NOT_EXIST: FUNCTION klinik.BIN_TO_UUID does not exist
    at Query.Sequence._packetToError (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23)
    --------------------
    at Protocol._enqueue (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:198:25)
    at C:\Users\Dinesh\Desktop\klinik\spot\lib\lib-db.js:27:22
    at Ping.onOperationComplete (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Pool.js:110:5)
    at Ping.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Ping._callback (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:488:16)
    at Ping.Sequence.end (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:83:24)
    at Ping.Sequence.OkPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:92:8)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23) {
  code: 'ER_SP_DOES_NOT_EXIST',
  errno: 1305,
  sqlMessage: 'FUNCTION klinik.BIN_TO_UUID does not exist',
  sqlState: '42000',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2022-02-06T18:37:32.860Z |-[34mdebug[39m [application-exception]: 
2022-02-06T18:37:32.861Z |-[31merror[39m [router:plan-list]: [object Object]
2022-02-06T20:37:25.905Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2022-02-06T20:37:25.910Z |-[32minfo[39m [service:plan-list]: plan listing.
2022-02-06T20:37:25.912Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2022-02-06T20:37:26.056Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': Error: ER_SP_DOES_NOT_EXIST: FUNCTION klinik.BIN_TO_UUID does not exist
    at Query.Sequence._packetToError (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23)
    --------------------
    at Protocol._enqueue (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:198:25)
    at C:\Users\Dinesh\Desktop\klinik\spot\lib\lib-db.js:27:22
    at Ping.onOperationComplete (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Pool.js:110:5)
    at Ping.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Ping._callback (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:488:16)
    at Ping.Sequence.end (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:83:24)
    at Ping.Sequence.OkPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:92:8)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23) {
  code: 'ER_SP_DOES_NOT_EXIST',
  errno: 1305,
  sqlMessage: 'FUNCTION klinik.BIN_TO_UUID does not exist',
  sqlState: '42000',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2022-02-06T20:37:26.062Z |-[31merror[39m [router:plan-list]: Plan List could not be fetched: Error: ER_SP_DOES_NOT_EXIST: FUNCTION klinik.BIN_TO_UUID does not exist
    at Query.Sequence._packetToError (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23)
    --------------------
    at Protocol._enqueue (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:198:25)
    at C:\Users\Dinesh\Desktop\klinik\spot\lib\lib-db.js:27:22
    at Ping.onOperationComplete (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Pool.js:110:5)
    at Ping.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Ping._callback (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:488:16)
    at Ping.Sequence.end (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:83:24)
    at Ping.Sequence.OkPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:92:8)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23) {
  code: 'ER_SP_DOES_NOT_EXIST',
  errno: 1305,
  sqlMessage: 'FUNCTION klinik.BIN_TO_UUID does not exist',
  sqlState: '42000',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2022-02-06T20:37:26.068Z |-[34mdebug[39m [application-exception]: 
2022-02-06T20:37:26.069Z |-[31merror[39m [router:plan-list]: [object Object]
2022-02-06T20:38:58.691Z |-[34mdebug[39m [router:plan-list]: Get All Plan Details.
2022-02-06T20:38:58.699Z |-[32minfo[39m [service:plan-list]: plan listing.
2022-02-06T20:38:58.701Z |-[34mdebug[39m [LIB:db-util]: About to execute 'SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, 
                            lower(P.STATUS) STATUS  FROM plans P
                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK
                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' 
                        and PT.IS_DELETED = false'; values=[ 'REGISTRATION' ]
2022-02-06T20:38:58.709Z |-[31merror[39m [LIB:db-util]: ERROR: could not execute query '"SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = ? and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"': Error: ER_SP_DOES_NOT_EXIST: FUNCTION klinik.BIN_TO_UUID does not exist
    at Query.Sequence._packetToError (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23)
    --------------------
    at Protocol._enqueue (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:198:25)
    at C:\Users\Dinesh\Desktop\klinik\spot\lib\lib-db.js:27:22
    at Ping.onOperationComplete (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Pool.js:110:5)
    at Ping.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Ping._callback (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:488:16)
    at Ping.Sequence.end (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:83:24)
    at Ping.Sequence.OkPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:92:8)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23) {
  code: 'ER_SP_DOES_NOT_EXIST',
  errno: 1305,
  sqlMessage: 'FUNCTION klinik.BIN_TO_UUID does not exist',
  sqlState: '42000',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2022-02-06T20:38:58.718Z |-[31merror[39m [router:plan-list]: Plan List could not be fetched: Error: ER_SP_DOES_NOT_EXIST: FUNCTION klinik.BIN_TO_UUID does not exist
    at Query.Sequence._packetToError (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23)
    --------------------
    at Protocol._enqueue (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:198:25)
    at C:\Users\Dinesh\Desktop\klinik\spot\lib\lib-db.js:27:22
    at Ping.onOperationComplete (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Pool.js:110:5)
    at Ping.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Ping._callback (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:488:16)
    at Ping.Sequence.end (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:83:24)
    at Ping.Sequence.OkPacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\sequences\Sequence.js:92:8)
    at Protocol._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (C:\Users\Dinesh\Desktop\klinik\spot\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10)
    at TCP.onStreamRead (node:internal/stream_base_commons:199:23) {
  code: 'ER_SP_DOES_NOT_EXIST',
  errno: 1305,
  sqlMessage: 'FUNCTION klinik.BIN_TO_UUID does not exist',
  sqlState: '42000',
  index: 0,
  sql: "SELECT BIN_TO_UUID(PLAN_ID) PLAN_ID,P.NAME PLAN_NAME, PLAN_DESC, P.AMOUNT, P.PLAN_VALIDITY_DAYS validityInDays, \n                            lower(P.STATUS) STATUS  FROM plans P\n                        INNER JOIN plan_type PT ON PT.TYPE_ID = P.TYPE_ID_FK\n                        WHERE PT.TYPE_DESC = 'REGISTRATION' and P.IS_DELETED = false and STATUS = 'Active' \n                        and PT.IS_DELETED = false"
}
2022-02-06T20:38:58.726Z |-[34mdebug[39m [application-exception]: 
2022-02-06T20:38:58.727Z |-[31merror[39m [router:plan-list]: [object Object]
